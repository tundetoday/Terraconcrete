'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("TerraConcDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class TerraConcDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableProjectsTable As ProjectsTableDataTable
    
    Private tableTableJoin As TableJoinDataTable
    
    Private tableUserstable As UserstableDataTable
    
    Private tableBatchTable As BatchTableDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("ProjectsTable")) Is Nothing) Then
                MyBase.Tables.Add(New ProjectsTableDataTable(ds.Tables("ProjectsTable")))
            End If
            If (Not (ds.Tables("TableJoin")) Is Nothing) Then
                MyBase.Tables.Add(New TableJoinDataTable(ds.Tables("TableJoin")))
            End If
            If (Not (ds.Tables("Userstable")) Is Nothing) Then
                MyBase.Tables.Add(New UserstableDataTable(ds.Tables("Userstable")))
            End If
            If (Not (ds.Tables("BatchTable")) Is Nothing) Then
                MyBase.Tables.Add(New BatchTableDataTable(ds.Tables("BatchTable")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ProjectsTable() As ProjectsTableDataTable
        Get
            Return Me.tableProjectsTable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TableJoin() As TableJoinDataTable
        Get
            Return Me.tableTableJoin
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Userstable() As UserstableDataTable
        Get
            Return Me.tableUserstable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property BatchTable() As BatchTableDataTable
        Get
            Return Me.tableBatchTable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As TerraConcDataSet = CType(MyBase.Clone,TerraConcDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("ProjectsTable")) Is Nothing) Then
                MyBase.Tables.Add(New ProjectsTableDataTable(ds.Tables("ProjectsTable")))
            End If
            If (Not (ds.Tables("TableJoin")) Is Nothing) Then
                MyBase.Tables.Add(New TableJoinDataTable(ds.Tables("TableJoin")))
            End If
            If (Not (ds.Tables("Userstable")) Is Nothing) Then
                MyBase.Tables.Add(New UserstableDataTable(ds.Tables("Userstable")))
            End If
            If (Not (ds.Tables("BatchTable")) Is Nothing) Then
                MyBase.Tables.Add(New BatchTableDataTable(ds.Tables("BatchTable")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableProjectsTable = CType(MyBase.Tables("ProjectsTable"),ProjectsTableDataTable)
        If (initTable = true) Then
            If (Not (Me.tableProjectsTable) Is Nothing) Then
                Me.tableProjectsTable.InitVars
            End If
        End If
        Me.tableTableJoin = CType(MyBase.Tables("TableJoin"),TableJoinDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTableJoin) Is Nothing) Then
                Me.tableTableJoin.InitVars
            End If
        End If
        Me.tableUserstable = CType(MyBase.Tables("Userstable"),UserstableDataTable)
        If (initTable = true) Then
            If (Not (Me.tableUserstable) Is Nothing) Then
                Me.tableUserstable.InitVars
            End If
        End If
        Me.tableBatchTable = CType(MyBase.Tables("BatchTable"),BatchTableDataTable)
        If (initTable = true) Then
            If (Not (Me.tableBatchTable) Is Nothing) Then
                Me.tableBatchTable.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "TerraConcDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/TerraConcDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableProjectsTable = New ProjectsTableDataTable()
        MyBase.Tables.Add(Me.tableProjectsTable)
        Me.tableTableJoin = New TableJoinDataTable()
        MyBase.Tables.Add(Me.tableTableJoin)
        Me.tableUserstable = New UserstableDataTable()
        MyBase.Tables.Add(Me.tableUserstable)
        Me.tableBatchTable = New BatchTableDataTable()
        MyBase.Tables.Add(Me.tableBatchTable)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeProjectsTable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeTableJoin() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeUserstable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeBatchTable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As TerraConcDataSet = New TerraConcDataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub ProjectsTableRowChangeEventHandler(ByVal sender As Object, ByVal e As ProjectsTableRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub TableJoinRowChangeEventHandler(ByVal sender As Object, ByVal e As TableJoinRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub UserstableRowChangeEventHandler(ByVal sender As Object, ByVal e As UserstableRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub BatchTableRowChangeEventHandler(ByVal sender As Object, ByVal e As BatchTableRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ProjectsTableDataTable
        Inherits Global.System.Data.TypedTableBase(Of ProjectsTableRow)
        
        Private columnProjectName As Global.System.Data.DataColumn
        
        Private columnProjectAddress As Global.System.Data.DataColumn
        
        Private columnCity As Global.System.Data.DataColumn
        
        Private columnState As Global.System.Data.DataColumn
        
        Private columnCountry As Global.System.Data.DataColumn
        
        Private columnClientName As Global.System.Data.DataColumn
        
        Private columnClientAddress As Global.System.Data.DataColumn
        
        Private columnContactPerson As Global.System.Data.DataColumn
        
        Private columnContactPhoneNo As Global.System.Data.DataColumn
        
        Private columnContactEmail As Global.System.Data.DataColumn
        
        Private columnPlotNo As Global.System.Data.DataColumn
        
        Private columnDateOfPour As Global.System.Data.DataColumn
        
        Private columnStructureType As Global.System.Data.DataColumn
        
        Private columnProjectStart As Global.System.Data.DataColumn
        
        Private columnProjectEnd As Global.System.Data.DataColumn
        
        Private columnProjectID As Global.System.Data.DataColumn
        
        Private columnTimeOfPour As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ProjectsTable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ProjectNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProjectName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ProjectAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProjectAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property StateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnState
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CountryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCountry
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ContactPersonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContactPerson
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ContactPhoneNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContactPhoneNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ContactEmailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContactEmail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PlotNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPlotNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DateOfPourColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateOfPour
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property StructureTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStructureType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ProjectStartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProjectStart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ProjectEndColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProjectEnd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ProjectIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProjectID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TimeOfPourColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTimeOfPour
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ProjectsTableRow
            Get
                Return CType(Me.Rows(index),ProjectsTableRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ProjectsTableRowChanging As ProjectsTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ProjectsTableRowChanged As ProjectsTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ProjectsTableRowDeleting As ProjectsTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ProjectsTableRowDeleted As ProjectsTableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddProjectsTableRow(ByVal row As ProjectsTableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddProjectsTableRow( _
                    ByVal ProjectName As String,  _
                    ByVal ProjectAddress As String,  _
                    ByVal City As String,  _
                    ByVal State As String,  _
                    ByVal Country As String,  _
                    ByVal ClientName As String,  _
                    ByVal ClientAddress As String,  _
                    ByVal ContactPerson As String,  _
                    ByVal ContactPhoneNo As String,  _
                    ByVal ContactEmail As String,  _
                    ByVal PlotNo As String,  _
                    ByVal DateOfPour As Date,  _
                    ByVal StructureType As String,  _
                    ByVal ProjectStart As Date,  _
                    ByVal ProjectEnd As Date,  _
                    ByVal TimeOfPour As System.TimeSpan) As ProjectsTableRow
            Dim rowProjectsTableRow As ProjectsTableRow = CType(Me.NewRow,ProjectsTableRow)
            Dim columnValuesArray() As Object = New Object() {ProjectName, ProjectAddress, City, State, Country, ClientName, ClientAddress, ContactPerson, ContactPhoneNo, ContactEmail, PlotNo, DateOfPour, StructureType, ProjectStart, ProjectEnd, Nothing, TimeOfPour}
            rowProjectsTableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowProjectsTableRow)
            Return rowProjectsTableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByProjectID(ByVal ProjectID As Integer) As ProjectsTableRow
            Return CType(Me.Rows.Find(New Object() {ProjectID}),ProjectsTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ProjectsTableDataTable = CType(MyBase.Clone,ProjectsTableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ProjectsTableDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnProjectName = MyBase.Columns("ProjectName")
            Me.columnProjectAddress = MyBase.Columns("ProjectAddress")
            Me.columnCity = MyBase.Columns("City")
            Me.columnState = MyBase.Columns("State")
            Me.columnCountry = MyBase.Columns("Country")
            Me.columnClientName = MyBase.Columns("ClientName")
            Me.columnClientAddress = MyBase.Columns("ClientAddress")
            Me.columnContactPerson = MyBase.Columns("ContactPerson")
            Me.columnContactPhoneNo = MyBase.Columns("ContactPhoneNo")
            Me.columnContactEmail = MyBase.Columns("ContactEmail")
            Me.columnPlotNo = MyBase.Columns("PlotNo")
            Me.columnDateOfPour = MyBase.Columns("DateOfPour")
            Me.columnStructureType = MyBase.Columns("StructureType")
            Me.columnProjectStart = MyBase.Columns("ProjectStart")
            Me.columnProjectEnd = MyBase.Columns("ProjectEnd")
            Me.columnProjectID = MyBase.Columns("ProjectID")
            Me.columnTimeOfPour = MyBase.Columns("TimeOfPour")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnProjectName = New Global.System.Data.DataColumn("ProjectName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProjectName)
            Me.columnProjectAddress = New Global.System.Data.DataColumn("ProjectAddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProjectAddress)
            Me.columnCity = New Global.System.Data.DataColumn("City", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCity)
            Me.columnState = New Global.System.Data.DataColumn("State", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnState)
            Me.columnCountry = New Global.System.Data.DataColumn("Country", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCountry)
            Me.columnClientName = New Global.System.Data.DataColumn("ClientName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientName)
            Me.columnClientAddress = New Global.System.Data.DataColumn("ClientAddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientAddress)
            Me.columnContactPerson = New Global.System.Data.DataColumn("ContactPerson", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContactPerson)
            Me.columnContactPhoneNo = New Global.System.Data.DataColumn("ContactPhoneNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContactPhoneNo)
            Me.columnContactEmail = New Global.System.Data.DataColumn("ContactEmail", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContactEmail)
            Me.columnPlotNo = New Global.System.Data.DataColumn("PlotNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPlotNo)
            Me.columnDateOfPour = New Global.System.Data.DataColumn("DateOfPour", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateOfPour)
            Me.columnStructureType = New Global.System.Data.DataColumn("StructureType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStructureType)
            Me.columnProjectStart = New Global.System.Data.DataColumn("ProjectStart", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProjectStart)
            Me.columnProjectEnd = New Global.System.Data.DataColumn("ProjectEnd", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProjectEnd)
            Me.columnProjectID = New Global.System.Data.DataColumn("ProjectID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProjectID)
            Me.columnTimeOfPour = New Global.System.Data.DataColumn("TimeOfPour", GetType(Global.System.TimeSpan), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTimeOfPour)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnProjectID}, true))
            Me.columnProjectName.MaxLength = 150
            Me.columnProjectAddress.MaxLength = 150
            Me.columnCity.MaxLength = 50
            Me.columnState.MaxLength = 50
            Me.columnCountry.MaxLength = 50
            Me.columnClientName.MaxLength = 50
            Me.columnClientAddress.MaxLength = 150
            Me.columnContactPerson.MaxLength = 50
            Me.columnContactPhoneNo.MaxLength = 50
            Me.columnContactEmail.MaxLength = 50
            Me.columnPlotNo.MaxLength = 50
            Me.columnStructureType.MaxLength = 50
            Me.columnProjectID.AutoIncrement = true
            Me.columnProjectID.AutoIncrementSeed = -1
            Me.columnProjectID.AutoIncrementStep = -1
            Me.columnProjectID.AllowDBNull = false
            Me.columnProjectID.ReadOnly = true
            Me.columnProjectID.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewProjectsTableRow() As ProjectsTableRow
            Return CType(Me.NewRow,ProjectsTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ProjectsTableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ProjectsTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ProjectsTableRowChangedEvent) Is Nothing) Then
                RaiseEvent ProjectsTableRowChanged(Me, New ProjectsTableRowChangeEvent(CType(e.Row,ProjectsTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ProjectsTableRowChangingEvent) Is Nothing) Then
                RaiseEvent ProjectsTableRowChanging(Me, New ProjectsTableRowChangeEvent(CType(e.Row,ProjectsTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ProjectsTableRowDeletedEvent) Is Nothing) Then
                RaiseEvent ProjectsTableRowDeleted(Me, New ProjectsTableRowChangeEvent(CType(e.Row,ProjectsTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ProjectsTableRowDeletingEvent) Is Nothing) Then
                RaiseEvent ProjectsTableRowDeleting(Me, New ProjectsTableRowChangeEvent(CType(e.Row,ProjectsTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveProjectsTableRow(ByVal row As ProjectsTableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As TerraConcDataSet = New TerraConcDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ProjectsTableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TableJoinDataTable
        Inherits Global.System.Data.TypedTableBase(Of TableJoinRow)
        
        Private columnProjectName As Global.System.Data.DataColumn
        
        Private columnProjectAddress As Global.System.Data.DataColumn
        
        Private columnCity As Global.System.Data.DataColumn
        
        Private columnState As Global.System.Data.DataColumn
        
        Private columnCountry As Global.System.Data.DataColumn
        
        Private columnClientName As Global.System.Data.DataColumn
        
        Private columnClientAddress As Global.System.Data.DataColumn
        
        Private columnContactPerson As Global.System.Data.DataColumn
        
        Private columnContactPhoneNo As Global.System.Data.DataColumn
        
        Private columnContactEmail As Global.System.Data.DataColumn
        
        Private columnPlotNo As Global.System.Data.DataColumn
        
        Private columnStructureType As Global.System.Data.DataColumn
        
        Private columnBatchIdentificationNo As Global.System.Data.DataColumn
        
        Private columnNameOfSampler As Global.System.Data.DataColumn
        
        Private columnBatchDate As Global.System.Data.DataColumn
        
        Private columnBatchTime As Global.System.Data.DataColumn
        
        Private columnTestdate As Global.System.Data.DataColumn
        
        Private columnCuringConditions As Global.System.Data.DataColumn
        
        Private columnTestingLaboratory As Global.System.Data.DataColumn
        
        Private columnTestCertificate As Global.System.Data.DataColumn
        
        Private columnSupplySource As Global.System.Data.DataColumn
        
        Private columnConcreteGrade As Global.System.Data.DataColumn
        
        Private columnSpecificationOfConcreteMix As Global.System.Data.DataColumn
        
        Private columnNoOfSpecimen As Global.System.Data.DataColumn
        
        Private columnSpecimenCondition As Global.System.Data.DataColumn
        
        Private columnMethodOfCompaction As Global.System.Data.DataColumn
        
        Private columnDateDelivered As Global.System.Data.DataColumn
        
        Private columnTestMethod As Global.System.Data.DataColumn
        
        Private columnSpecimen1D As Global.System.Data.DataColumn
        
        Private columnSpecimen2D As Global.System.Data.DataColumn
        
        Private columnSpecimen3D As Global.System.Data.DataColumn
        
        Private columnSpecimen4D As Global.System.Data.DataColumn
        
        Private columnSpecimen5D As Global.System.Data.DataColumn
        
        Private columnSpecimen6D As Global.System.Data.DataColumn
        
        Private columnSpecimen7D As Global.System.Data.DataColumn
        
        Private columnSpecimen8D As Global.System.Data.DataColumn
        
        Private columnSpecimen9D As Global.System.Data.DataColumn
        
        Private columnSpecimen10D As Global.System.Data.DataColumn
        
        Private columnSpecimen1L As Global.System.Data.DataColumn
        
        Private columnSpecimen2L As Global.System.Data.DataColumn
        
        Private columnSpecimen3L As Global.System.Data.DataColumn
        
        Private columnSpecimen4L As Global.System.Data.DataColumn
        
        Private columnSpecimen5L As Global.System.Data.DataColumn
        
        Private columnSpecimen6L As Global.System.Data.DataColumn
        
        Private columnSpecimen7L As Global.System.Data.DataColumn
        
        Private columnSpecimen8L As Global.System.Data.DataColumn
        
        Private columnSpecimen9L As Global.System.Data.DataColumn
        
        Private columnSpecimen10L As Global.System.Data.DataColumn
        
        Private columnSpecimen1H As Global.System.Data.DataColumn
        
        Private columnSpecimen2H As Global.System.Data.DataColumn
        
        Private columnSpecimen3H As Global.System.Data.DataColumn
        
        Private columnSpecimen4H As Global.System.Data.DataColumn
        
        Private columnSpecimen5H As Global.System.Data.DataColumn
        
        Private columnSpecimen6H As Global.System.Data.DataColumn
        
        Private columnSpecimen7H As Global.System.Data.DataColumn
        
        Private columnSpecimen8H As Global.System.Data.DataColumn
        
        Private columnSpecimen9H As Global.System.Data.DataColumn
        
        Private columnSpecimen10H As Global.System.Data.DataColumn
        
        Private columnMass1 As Global.System.Data.DataColumn
        
        Private columnMass2 As Global.System.Data.DataColumn
        
        Private columnMass3 As Global.System.Data.DataColumn
        
        Private columnMass4 As Global.System.Data.DataColumn
        
        Private columnMass5 As Global.System.Data.DataColumn
        
        Private columnMass6 As Global.System.Data.DataColumn
        
        Private columnMass7 As Global.System.Data.DataColumn
        
        Private columnMass8 As Global.System.Data.DataColumn
        
        Private columnMass9 As Global.System.Data.DataColumn
        
        Private columnMass10 As Global.System.Data.DataColumn
        
        Private columnAveMass As Global.System.Data.DataColumn
        
        Private columnSubMergedMass1 As Global.System.Data.DataColumn
        
        Private columnSubMergedMass2 As Global.System.Data.DataColumn
        
        Private columnSubMergedMass3 As Global.System.Data.DataColumn
        
        Private columnSubMergedMass4 As Global.System.Data.DataColumn
        
        Private columnSubMergedMass5 As Global.System.Data.DataColumn
        
        Private columnSubMergedMass6 As Global.System.Data.DataColumn
        
        Private columnSubMergedMass7 As Global.System.Data.DataColumn
        
        Private columnSubMergedMass8 As Global.System.Data.DataColumn
        
        Private columnSubMergedMass9 As Global.System.Data.DataColumn
        
        Private columnSubMergedMass10 As Global.System.Data.DataColumn
        
        Private columnDensity1 As Global.System.Data.DataColumn
        
        Private columnDensity2 As Global.System.Data.DataColumn
        
        Private columnDensity3 As Global.System.Data.DataColumn
        
        Private columnDensity4 As Global.System.Data.DataColumn
        
        Private columnDensity5 As Global.System.Data.DataColumn
        
        Private columnDensity6 As Global.System.Data.DataColumn
        
        Private columnDensity7 As Global.System.Data.DataColumn
        
        Private columnDensity8 As Global.System.Data.DataColumn
        
        Private columnDensity9 As Global.System.Data.DataColumn
        
        Private columnDensity10 As Global.System.Data.DataColumn
        
        Private columnAveDensity As Global.System.Data.DataColumn
        
        Private columnMaxLoad1 As Global.System.Data.DataColumn
        
        Private columnMaxLoad2 As Global.System.Data.DataColumn
        
        Private columnMaxLoad3 As Global.System.Data.DataColumn
        
        Private columnMaxLoad4 As Global.System.Data.DataColumn
        
        Private columnMaxLoad5 As Global.System.Data.DataColumn
        
        Private columnMaxLoad6 As Global.System.Data.DataColumn
        
        Private columnMaxLoad7 As Global.System.Data.DataColumn
        
        Private columnMaxLoad8 As Global.System.Data.DataColumn
        
        Private columnMaxLoad9 As Global.System.Data.DataColumn
        
        Private columnMaxLoad10 As Global.System.Data.DataColumn
        
        Private columnCompStrength1 As Global.System.Data.DataColumn
        
        Private columnCompStrength2 As Global.System.Data.DataColumn
        
        Private columnCompStrength3 As Global.System.Data.DataColumn
        
        Private columnCompStrength4 As Global.System.Data.DataColumn
        
        Private columnCompStrength5 As Global.System.Data.DataColumn
        
        Private columnCompStrength6 As Global.System.Data.DataColumn
        
        Private columnCompStrength7 As Global.System.Data.DataColumn
        
        Private columnCompStrength8 As Global.System.Data.DataColumn
        
        Private columnCompStrength9 As Global.System.Data.DataColumn
        
        Private columnCompStrength10 As Global.System.Data.DataColumn
        
        Private columnAveStrength As Global.System.Data.DataColumn
        
        Private columnFractureType1 As Global.System.Data.DataColumn
        
        Private columnFractureType2 As Global.System.Data.DataColumn
        
        Private columnFractureType3 As Global.System.Data.DataColumn
        
        Private columnFractureType4 As Global.System.Data.DataColumn
        
        Private columnFractureType5 As Global.System.Data.DataColumn
        
        Private columnFractureType6 As Global.System.Data.DataColumn
        
        Private columnFractureType7 As Global.System.Data.DataColumn
        
        Private columnFractureType8 As Global.System.Data.DataColumn
        
        Private columnFractureType9 As Global.System.Data.DataColumn
        
        Private columnFractureType10 As Global.System.Data.DataColumn
        
        Private columnStructuralElement As Global.System.Data.DataColumn
        
        Private columnSpecimenShape As Global.System.Data.DataColumn
        
        Private columnTestedBy As Global.System.Data.DataColumn
        
        Private columnCheckedBy As Global.System.Data.DataColumn
        
        Private columnApprovedBy As Global.System.Data.DataColumn
        
        Private columnCheckedDate As Global.System.Data.DataColumn
        
        Private columnApprovedDate As Global.System.Data.DataColumn
        
        Private columnProjectID As Global.System.Data.DataColumn
        
        Private columnProjectStart As Global.System.Data.DataColumn
        
        Private columnProjectEnd As Global.System.Data.DataColumn
        
        Private columnExpr1 As Global.System.Data.DataColumn
        
        Private columnBatchId As Global.System.Data.DataColumn
        
        Private columnArea1 As Global.System.Data.DataColumn
        
        Private columnArea2 As Global.System.Data.DataColumn
        
        Private columnArea3 As Global.System.Data.DataColumn
        
        Private columnArea4 As Global.System.Data.DataColumn
        
        Private columnArea5 As Global.System.Data.DataColumn
        
        Private columnArea6 As Global.System.Data.DataColumn
        
        Private columnArea7 As Global.System.Data.DataColumn
        
        Private columnArea8 As Global.System.Data.DataColumn
        
        Private columnArea9 As Global.System.Data.DataColumn
        
        Private columnArea10 As Global.System.Data.DataColumn
        
        Private columnSpecimenAge As Global.System.Data.DataColumn
        
        Private columnCompliledby As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TableJoin"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ProjectNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProjectName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ProjectAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProjectAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property StateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnState
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CountryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCountry
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClientAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClientAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ContactPersonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContactPerson
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ContactPhoneNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContactPhoneNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ContactEmailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContactEmail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PlotNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPlotNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property StructureTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStructureType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BatchIdentificationNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBatchIdentificationNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NameOfSamplerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNameOfSampler
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BatchDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBatchDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BatchTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBatchTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TestdateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestdate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CuringConditionsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCuringConditions
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TestingLaboratoryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestingLaboratory
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TestCertificateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestCertificate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SupplySourceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSupplySource
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ConcreteGradeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConcreteGrade
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SpecificationOfConcreteMixColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecificationOfConcreteMix
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NoOfSpecimenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNoOfSpecimen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SpecimenConditionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimenCondition
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MethodOfCompactionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMethodOfCompaction
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DateDeliveredColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateDelivered
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TestMethodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestMethod
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen1DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen1D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen2DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen2D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen3DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen3D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen4DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen4D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen5DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen5D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen6DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen6D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen7DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen7D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen8DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen8D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen9DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen9D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen10DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen10D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen1LColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen1L
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen2LColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen2L
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen3LColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen3L
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen4LColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen4L
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen5LColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen5L
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen6LColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen6L
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen7LColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen7L
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen8LColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen8L
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen9LColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen9L
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen10LColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen10L
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen1HColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen1H
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen2HColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen2H
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen3HColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen3H
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen4HColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen4H
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen5HColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen5H
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen6HColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen6H
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen7HColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen7H
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen8HColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen8H
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen9HColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen9H
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen10HColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen10H
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mass1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMass1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mass2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMass2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mass3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMass3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mass4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMass4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mass5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMass5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mass6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMass6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mass7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMass7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mass8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMass8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mass9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMass9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mass10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMass10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AveMassColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAveMass
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SubMergedMass1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubMergedMass1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SubMergedMass2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubMergedMass2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SubMergedMass3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubMergedMass3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SubMergedMass4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubMergedMass4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SubMergedMass5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubMergedMass5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SubMergedMass6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubMergedMass6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SubMergedMass7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubMergedMass7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SubMergedMass8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubMergedMass8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SubMergedMass9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubMergedMass9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SubMergedMass10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubMergedMass10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Density1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDensity1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Density2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDensity2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Density3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDensity3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Density4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDensity4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Density5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDensity5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Density6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDensity6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Density7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDensity7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Density8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDensity8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Density9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDensity9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Density10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDensity10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AveDensityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAveDensity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaxLoad1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaxLoad1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaxLoad2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaxLoad2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaxLoad3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaxLoad3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaxLoad4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaxLoad4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaxLoad5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaxLoad5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaxLoad6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaxLoad6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaxLoad7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaxLoad7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaxLoad8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaxLoad8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaxLoad9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaxLoad9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaxLoad10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaxLoad10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CompStrength1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompStrength1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CompStrength2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompStrength2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CompStrength3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompStrength3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CompStrength4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompStrength4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CompStrength5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompStrength5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CompStrength6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompStrength6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CompStrength7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompStrength7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CompStrength8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompStrength8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CompStrength9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompStrength9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CompStrength10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompStrength10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AveStrengthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAveStrength
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FractureType1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFractureType1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FractureType2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFractureType2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FractureType3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFractureType3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FractureType4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFractureType4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FractureType5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFractureType5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FractureType6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFractureType6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FractureType7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFractureType7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FractureType8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFractureType8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FractureType9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFractureType9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FractureType10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFractureType10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property StructuralElementColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStructuralElement
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SpecimenShapeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimenShape
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TestedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestedBy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CheckedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCheckedBy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ApprovedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnApprovedBy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CheckedDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCheckedDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ApprovedDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnApprovedDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ProjectIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProjectID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ProjectStartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProjectStart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ProjectEndColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProjectEnd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Expr1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpr1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BatchIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBatchId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Area1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnArea1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Area2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnArea2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Area3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnArea3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Area4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnArea4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Area5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnArea5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Area6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnArea6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Area7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnArea7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Area8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnArea8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Area9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnArea9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Area10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnArea10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SpecimenAgeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimenAge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CompliledbyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompliledby
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TableJoinRow
            Get
                Return CType(Me.Rows(index),TableJoinRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TableJoinRowChanging As TableJoinRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TableJoinRowChanged As TableJoinRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TableJoinRowDeleting As TableJoinRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event TableJoinRowDeleted As TableJoinRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddTableJoinRow(ByVal row As TableJoinRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddTableJoinRow( _
                    ByVal ProjectName As String,  _
                    ByVal ProjectAddress As String,  _
                    ByVal City As String,  _
                    ByVal State As String,  _
                    ByVal Country As String,  _
                    ByVal ClientName As String,  _
                    ByVal ClientAddress As String,  _
                    ByVal ContactPerson As String,  _
                    ByVal ContactPhoneNo As String,  _
                    ByVal ContactEmail As String,  _
                    ByVal PlotNo As String,  _
                    ByVal StructureType As String,  _
                    ByVal BatchIdentificationNo As String,  _
                    ByVal NameOfSampler As String,  _
                    ByVal BatchDate As Date,  _
                    ByVal BatchTime As System.TimeSpan,  _
                    ByVal Testdate As Date,  _
                    ByVal CuringConditions As String,  _
                    ByVal TestingLaboratory As String,  _
                    ByVal TestCertificate As String,  _
                    ByVal SupplySource As String,  _
                    ByVal ConcreteGrade As String,  _
                    ByVal SpecificationOfConcreteMix As String,  _
                    ByVal NoOfSpecimen As Integer,  _
                    ByVal SpecimenCondition As String,  _
                    ByVal MethodOfCompaction As String,  _
                    ByVal DateDelivered As Date,  _
                    ByVal TestMethod As String,  _
                    ByVal Specimen1D As String,  _
                    ByVal Specimen2D As String,  _
                    ByVal Specimen3D As String,  _
                    ByVal Specimen4D As String,  _
                    ByVal Specimen5D As String,  _
                    ByVal Specimen6D As String,  _
                    ByVal Specimen7D As String,  _
                    ByVal Specimen8D As String,  _
                    ByVal Specimen9D As String,  _
                    ByVal Specimen10D As String,  _
                    ByVal Specimen1L As String,  _
                    ByVal Specimen2L As String,  _
                    ByVal Specimen3L As String,  _
                    ByVal Specimen4L As String,  _
                    ByVal Specimen5L As String,  _
                    ByVal Specimen6L As String,  _
                    ByVal Specimen7L As String,  _
                    ByVal Specimen8L As String,  _
                    ByVal Specimen9L As String,  _
                    ByVal Specimen10L As String,  _
                    ByVal Specimen1H As String,  _
                    ByVal Specimen2H As String,  _
                    ByVal Specimen3H As String,  _
                    ByVal Specimen4H As String,  _
                    ByVal Specimen5H As String,  _
                    ByVal Specimen6H As String,  _
                    ByVal Specimen7H As String,  _
                    ByVal Specimen8H As String,  _
                    ByVal Specimen9H As String,  _
                    ByVal Specimen10H As String,  _
                    ByVal Mass1 As String,  _
                    ByVal Mass2 As String,  _
                    ByVal Mass3 As String,  _
                    ByVal Mass4 As String,  _
                    ByVal Mass5 As String,  _
                    ByVal Mass6 As String,  _
                    ByVal Mass7 As String,  _
                    ByVal Mass8 As String,  _
                    ByVal Mass9 As String,  _
                    ByVal Mass10 As String,  _
                    ByVal AveMass As String,  _
                    ByVal SubMergedMass1 As String,  _
                    ByVal SubMergedMass2 As String,  _
                    ByVal SubMergedMass3 As String,  _
                    ByVal SubMergedMass4 As String,  _
                    ByVal SubMergedMass5 As String,  _
                    ByVal SubMergedMass6 As String,  _
                    ByVal SubMergedMass7 As String,  _
                    ByVal SubMergedMass8 As String,  _
                    ByVal SubMergedMass9 As String,  _
                    ByVal SubMergedMass10 As String,  _
                    ByVal Density1 As String,  _
                    ByVal Density2 As String,  _
                    ByVal Density3 As String,  _
                    ByVal Density4 As String,  _
                    ByVal Density5 As String,  _
                    ByVal Density6 As String,  _
                    ByVal Density7 As String,  _
                    ByVal Density8 As String,  _
                    ByVal Density9 As String,  _
                    ByVal Density10 As String,  _
                    ByVal AveDensity As String,  _
                    ByVal MaxLoad1 As String,  _
                    ByVal MaxLoad2 As String,  _
                    ByVal MaxLoad3 As String,  _
                    ByVal MaxLoad4 As String,  _
                    ByVal MaxLoad5 As String,  _
                    ByVal MaxLoad6 As String,  _
                    ByVal MaxLoad7 As String,  _
                    ByVal MaxLoad8 As String,  _
                    ByVal MaxLoad9 As String,  _
                    ByVal MaxLoad10 As String,  _
                    ByVal CompStrength1 As String,  _
                    ByVal CompStrength2 As String,  _
                    ByVal CompStrength3 As String,  _
                    ByVal CompStrength4 As String,  _
                    ByVal CompStrength5 As String,  _
                    ByVal CompStrength6 As String,  _
                    ByVal CompStrength7 As String,  _
                    ByVal CompStrength8 As String,  _
                    ByVal CompStrength9 As String,  _
                    ByVal CompStrength10 As String,  _
                    ByVal AveStrength As String,  _
                    ByVal FractureType1 As String,  _
                    ByVal FractureType2 As String,  _
                    ByVal FractureType3 As String,  _
                    ByVal FractureType4 As String,  _
                    ByVal FractureType5 As String,  _
                    ByVal FractureType6 As String,  _
                    ByVal FractureType7 As String,  _
                    ByVal FractureType8 As String,  _
                    ByVal FractureType9 As String,  _
                    ByVal FractureType10 As String,  _
                    ByVal StructuralElement As String,  _
                    ByVal SpecimenShape As String,  _
                    ByVal TestedBy As String,  _
                    ByVal CheckedBy As String,  _
                    ByVal ApprovedBy As String,  _
                    ByVal CheckedDate As Date,  _
                    ByVal ApprovedDate As Date,  _
                    ByVal ProjectStart As Date,  _
                    ByVal ProjectEnd As Date,  _
                    ByVal Expr1 As Integer,  _
                    ByVal Area1 As String,  _
                    ByVal Area2 As String,  _
                    ByVal Area3 As String,  _
                    ByVal Area4 As String,  _
                    ByVal Area5 As String,  _
                    ByVal Area6 As String,  _
                    ByVal Area7 As String,  _
                    ByVal Area8 As String,  _
                    ByVal Area9 As String,  _
                    ByVal Area10 As String,  _
                    ByVal SpecimenAge As Integer,  _
                    ByVal Compliledby As String) As TableJoinRow
            Dim rowTableJoinRow As TableJoinRow = CType(Me.NewRow,TableJoinRow)
            Dim columnValuesArray() As Object = New Object() {ProjectName, ProjectAddress, City, State, Country, ClientName, ClientAddress, ContactPerson, ContactPhoneNo, ContactEmail, PlotNo, StructureType, BatchIdentificationNo, NameOfSampler, BatchDate, BatchTime, Testdate, CuringConditions, TestingLaboratory, TestCertificate, SupplySource, ConcreteGrade, SpecificationOfConcreteMix, NoOfSpecimen, SpecimenCondition, MethodOfCompaction, DateDelivered, TestMethod, Specimen1D, Specimen2D, Specimen3D, Specimen4D, Specimen5D, Specimen6D, Specimen7D, Specimen8D, Specimen9D, Specimen10D, Specimen1L, Specimen2L, Specimen3L, Specimen4L, Specimen5L, Specimen6L, Specimen7L, Specimen8L, Specimen9L, Specimen10L, Specimen1H, Specimen2H, Specimen3H, Specimen4H, Specimen5H, Specimen6H, Specimen7H, Specimen8H, Specimen9H, Specimen10H, Mass1, Mass2, Mass3, Mass4, Mass5, Mass6, Mass7, Mass8, Mass9, Mass10, AveMass, SubMergedMass1, SubMergedMass2, SubMergedMass3, SubMergedMass4, SubMergedMass5, SubMergedMass6, SubMergedMass7, SubMergedMass8, SubMergedMass9, SubMergedMass10, Density1, Density2, Density3, Density4, Density5, Density6, Density7, Density8, Density9, Density10, AveDensity, MaxLoad1, MaxLoad2, MaxLoad3, MaxLoad4, MaxLoad5, MaxLoad6, MaxLoad7, MaxLoad8, MaxLoad9, MaxLoad10, CompStrength1, CompStrength2, CompStrength3, CompStrength4, CompStrength5, CompStrength6, CompStrength7, CompStrength8, CompStrength9, CompStrength10, AveStrength, FractureType1, FractureType2, FractureType3, FractureType4, FractureType5, FractureType6, FractureType7, FractureType8, FractureType9, FractureType10, StructuralElement, SpecimenShape, TestedBy, CheckedBy, ApprovedBy, CheckedDate, ApprovedDate, Nothing, ProjectStart, ProjectEnd, Expr1, Nothing, Area1, Area2, Area3, Area4, Area5, Area6, Area7, Area8, Area9, Area10, SpecimenAge, Compliledby}
            rowTableJoinRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTableJoinRow)
            Return rowTableJoinRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByProjectIDBatchId(ByVal ProjectID As Integer, ByVal BatchId As Integer) As TableJoinRow
            Return CType(Me.Rows.Find(New Object() {ProjectID, BatchId}),TableJoinRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TableJoinDataTable = CType(MyBase.Clone,TableJoinDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TableJoinDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnProjectName = MyBase.Columns("ProjectName")
            Me.columnProjectAddress = MyBase.Columns("ProjectAddress")
            Me.columnCity = MyBase.Columns("City")
            Me.columnState = MyBase.Columns("State")
            Me.columnCountry = MyBase.Columns("Country")
            Me.columnClientName = MyBase.Columns("ClientName")
            Me.columnClientAddress = MyBase.Columns("ClientAddress")
            Me.columnContactPerson = MyBase.Columns("ContactPerson")
            Me.columnContactPhoneNo = MyBase.Columns("ContactPhoneNo")
            Me.columnContactEmail = MyBase.Columns("ContactEmail")
            Me.columnPlotNo = MyBase.Columns("PlotNo")
            Me.columnStructureType = MyBase.Columns("StructureType")
            Me.columnBatchIdentificationNo = MyBase.Columns("BatchIdentificationNo")
            Me.columnNameOfSampler = MyBase.Columns("NameOfSampler")
            Me.columnBatchDate = MyBase.Columns("BatchDate")
            Me.columnBatchTime = MyBase.Columns("BatchTime")
            Me.columnTestdate = MyBase.Columns("Testdate")
            Me.columnCuringConditions = MyBase.Columns("CuringConditions")
            Me.columnTestingLaboratory = MyBase.Columns("TestingLaboratory")
            Me.columnTestCertificate = MyBase.Columns("TestCertificate")
            Me.columnSupplySource = MyBase.Columns("SupplySource")
            Me.columnConcreteGrade = MyBase.Columns("ConcreteGrade")
            Me.columnSpecificationOfConcreteMix = MyBase.Columns("SpecificationOfConcreteMix")
            Me.columnNoOfSpecimen = MyBase.Columns("NoOfSpecimen")
            Me.columnSpecimenCondition = MyBase.Columns("SpecimenCondition")
            Me.columnMethodOfCompaction = MyBase.Columns("MethodOfCompaction")
            Me.columnDateDelivered = MyBase.Columns("DateDelivered")
            Me.columnTestMethod = MyBase.Columns("TestMethod")
            Me.columnSpecimen1D = MyBase.Columns("Specimen1D")
            Me.columnSpecimen2D = MyBase.Columns("Specimen2D")
            Me.columnSpecimen3D = MyBase.Columns("Specimen3D")
            Me.columnSpecimen4D = MyBase.Columns("Specimen4D")
            Me.columnSpecimen5D = MyBase.Columns("Specimen5D")
            Me.columnSpecimen6D = MyBase.Columns("Specimen6D")
            Me.columnSpecimen7D = MyBase.Columns("Specimen7D")
            Me.columnSpecimen8D = MyBase.Columns("Specimen8D")
            Me.columnSpecimen9D = MyBase.Columns("Specimen9D")
            Me.columnSpecimen10D = MyBase.Columns("Specimen10D")
            Me.columnSpecimen1L = MyBase.Columns("Specimen1L")
            Me.columnSpecimen2L = MyBase.Columns("Specimen2L")
            Me.columnSpecimen3L = MyBase.Columns("Specimen3L")
            Me.columnSpecimen4L = MyBase.Columns("Specimen4L")
            Me.columnSpecimen5L = MyBase.Columns("Specimen5L")
            Me.columnSpecimen6L = MyBase.Columns("Specimen6L")
            Me.columnSpecimen7L = MyBase.Columns("Specimen7L")
            Me.columnSpecimen8L = MyBase.Columns("Specimen8L")
            Me.columnSpecimen9L = MyBase.Columns("Specimen9L")
            Me.columnSpecimen10L = MyBase.Columns("Specimen10L")
            Me.columnSpecimen1H = MyBase.Columns("Specimen1H")
            Me.columnSpecimen2H = MyBase.Columns("Specimen2H")
            Me.columnSpecimen3H = MyBase.Columns("Specimen3H")
            Me.columnSpecimen4H = MyBase.Columns("Specimen4H")
            Me.columnSpecimen5H = MyBase.Columns("Specimen5H")
            Me.columnSpecimen6H = MyBase.Columns("Specimen6H")
            Me.columnSpecimen7H = MyBase.Columns("Specimen7H")
            Me.columnSpecimen8H = MyBase.Columns("Specimen8H")
            Me.columnSpecimen9H = MyBase.Columns("Specimen9H")
            Me.columnSpecimen10H = MyBase.Columns("Specimen10H")
            Me.columnMass1 = MyBase.Columns("Mass1")
            Me.columnMass2 = MyBase.Columns("Mass2")
            Me.columnMass3 = MyBase.Columns("Mass3")
            Me.columnMass4 = MyBase.Columns("Mass4")
            Me.columnMass5 = MyBase.Columns("Mass5")
            Me.columnMass6 = MyBase.Columns("Mass6")
            Me.columnMass7 = MyBase.Columns("Mass7")
            Me.columnMass8 = MyBase.Columns("Mass8")
            Me.columnMass9 = MyBase.Columns("Mass9")
            Me.columnMass10 = MyBase.Columns("Mass10")
            Me.columnAveMass = MyBase.Columns("AveMass")
            Me.columnSubMergedMass1 = MyBase.Columns("SubMergedMass1")
            Me.columnSubMergedMass2 = MyBase.Columns("SubMergedMass2")
            Me.columnSubMergedMass3 = MyBase.Columns("SubMergedMass3")
            Me.columnSubMergedMass4 = MyBase.Columns("SubMergedMass4")
            Me.columnSubMergedMass5 = MyBase.Columns("SubMergedMass5")
            Me.columnSubMergedMass6 = MyBase.Columns("SubMergedMass6")
            Me.columnSubMergedMass7 = MyBase.Columns("SubMergedMass7")
            Me.columnSubMergedMass8 = MyBase.Columns("SubMergedMass8")
            Me.columnSubMergedMass9 = MyBase.Columns("SubMergedMass9")
            Me.columnSubMergedMass10 = MyBase.Columns("SubMergedMass10")
            Me.columnDensity1 = MyBase.Columns("Density1")
            Me.columnDensity2 = MyBase.Columns("Density2")
            Me.columnDensity3 = MyBase.Columns("Density3")
            Me.columnDensity4 = MyBase.Columns("Density4")
            Me.columnDensity5 = MyBase.Columns("Density5")
            Me.columnDensity6 = MyBase.Columns("Density6")
            Me.columnDensity7 = MyBase.Columns("Density7")
            Me.columnDensity8 = MyBase.Columns("Density8")
            Me.columnDensity9 = MyBase.Columns("Density9")
            Me.columnDensity10 = MyBase.Columns("Density10")
            Me.columnAveDensity = MyBase.Columns("AveDensity")
            Me.columnMaxLoad1 = MyBase.Columns("MaxLoad1")
            Me.columnMaxLoad2 = MyBase.Columns("MaxLoad2")
            Me.columnMaxLoad3 = MyBase.Columns("MaxLoad3")
            Me.columnMaxLoad4 = MyBase.Columns("MaxLoad4")
            Me.columnMaxLoad5 = MyBase.Columns("MaxLoad5")
            Me.columnMaxLoad6 = MyBase.Columns("MaxLoad6")
            Me.columnMaxLoad7 = MyBase.Columns("MaxLoad7")
            Me.columnMaxLoad8 = MyBase.Columns("MaxLoad8")
            Me.columnMaxLoad9 = MyBase.Columns("MaxLoad9")
            Me.columnMaxLoad10 = MyBase.Columns("MaxLoad10")
            Me.columnCompStrength1 = MyBase.Columns("CompStrength1")
            Me.columnCompStrength2 = MyBase.Columns("CompStrength2")
            Me.columnCompStrength3 = MyBase.Columns("CompStrength3")
            Me.columnCompStrength4 = MyBase.Columns("CompStrength4")
            Me.columnCompStrength5 = MyBase.Columns("CompStrength5")
            Me.columnCompStrength6 = MyBase.Columns("CompStrength6")
            Me.columnCompStrength7 = MyBase.Columns("CompStrength7")
            Me.columnCompStrength8 = MyBase.Columns("CompStrength8")
            Me.columnCompStrength9 = MyBase.Columns("CompStrength9")
            Me.columnCompStrength10 = MyBase.Columns("CompStrength10")
            Me.columnAveStrength = MyBase.Columns("AveStrength")
            Me.columnFractureType1 = MyBase.Columns("FractureType1")
            Me.columnFractureType2 = MyBase.Columns("FractureType2")
            Me.columnFractureType3 = MyBase.Columns("FractureType3")
            Me.columnFractureType4 = MyBase.Columns("FractureType4")
            Me.columnFractureType5 = MyBase.Columns("FractureType5")
            Me.columnFractureType6 = MyBase.Columns("FractureType6")
            Me.columnFractureType7 = MyBase.Columns("FractureType7")
            Me.columnFractureType8 = MyBase.Columns("FractureType8")
            Me.columnFractureType9 = MyBase.Columns("FractureType9")
            Me.columnFractureType10 = MyBase.Columns("FractureType10")
            Me.columnStructuralElement = MyBase.Columns("StructuralElement")
            Me.columnSpecimenShape = MyBase.Columns("SpecimenShape")
            Me.columnTestedBy = MyBase.Columns("TestedBy")
            Me.columnCheckedBy = MyBase.Columns("CheckedBy")
            Me.columnApprovedBy = MyBase.Columns("ApprovedBy")
            Me.columnCheckedDate = MyBase.Columns("CheckedDate")
            Me.columnApprovedDate = MyBase.Columns("ApprovedDate")
            Me.columnProjectID = MyBase.Columns("ProjectID")
            Me.columnProjectStart = MyBase.Columns("ProjectStart")
            Me.columnProjectEnd = MyBase.Columns("ProjectEnd")
            Me.columnExpr1 = MyBase.Columns("Expr1")
            Me.columnBatchId = MyBase.Columns("BatchId")
            Me.columnArea1 = MyBase.Columns("Area1")
            Me.columnArea2 = MyBase.Columns("Area2")
            Me.columnArea3 = MyBase.Columns("Area3")
            Me.columnArea4 = MyBase.Columns("Area4")
            Me.columnArea5 = MyBase.Columns("Area5")
            Me.columnArea6 = MyBase.Columns("Area6")
            Me.columnArea7 = MyBase.Columns("Area7")
            Me.columnArea8 = MyBase.Columns("Area8")
            Me.columnArea9 = MyBase.Columns("Area9")
            Me.columnArea10 = MyBase.Columns("Area10")
            Me.columnSpecimenAge = MyBase.Columns("SpecimenAge")
            Me.columnCompliledby = MyBase.Columns("Compliledby")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnProjectName = New Global.System.Data.DataColumn("ProjectName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProjectName)
            Me.columnProjectAddress = New Global.System.Data.DataColumn("ProjectAddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProjectAddress)
            Me.columnCity = New Global.System.Data.DataColumn("City", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCity)
            Me.columnState = New Global.System.Data.DataColumn("State", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnState)
            Me.columnCountry = New Global.System.Data.DataColumn("Country", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCountry)
            Me.columnClientName = New Global.System.Data.DataColumn("ClientName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientName)
            Me.columnClientAddress = New Global.System.Data.DataColumn("ClientAddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClientAddress)
            Me.columnContactPerson = New Global.System.Data.DataColumn("ContactPerson", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContactPerson)
            Me.columnContactPhoneNo = New Global.System.Data.DataColumn("ContactPhoneNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContactPhoneNo)
            Me.columnContactEmail = New Global.System.Data.DataColumn("ContactEmail", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContactEmail)
            Me.columnPlotNo = New Global.System.Data.DataColumn("PlotNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPlotNo)
            Me.columnStructureType = New Global.System.Data.DataColumn("StructureType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStructureType)
            Me.columnBatchIdentificationNo = New Global.System.Data.DataColumn("BatchIdentificationNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBatchIdentificationNo)
            Me.columnNameOfSampler = New Global.System.Data.DataColumn("NameOfSampler", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNameOfSampler)
            Me.columnBatchDate = New Global.System.Data.DataColumn("BatchDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBatchDate)
            Me.columnBatchTime = New Global.System.Data.DataColumn("BatchTime", GetType(Global.System.TimeSpan), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBatchTime)
            Me.columnTestdate = New Global.System.Data.DataColumn("Testdate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestdate)
            Me.columnCuringConditions = New Global.System.Data.DataColumn("CuringConditions", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCuringConditions)
            Me.columnTestingLaboratory = New Global.System.Data.DataColumn("TestingLaboratory", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestingLaboratory)
            Me.columnTestCertificate = New Global.System.Data.DataColumn("TestCertificate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestCertificate)
            Me.columnSupplySource = New Global.System.Data.DataColumn("SupplySource", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSupplySource)
            Me.columnConcreteGrade = New Global.System.Data.DataColumn("ConcreteGrade", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConcreteGrade)
            Me.columnSpecificationOfConcreteMix = New Global.System.Data.DataColumn("SpecificationOfConcreteMix", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecificationOfConcreteMix)
            Me.columnNoOfSpecimen = New Global.System.Data.DataColumn("NoOfSpecimen", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNoOfSpecimen)
            Me.columnSpecimenCondition = New Global.System.Data.DataColumn("SpecimenCondition", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimenCondition)
            Me.columnMethodOfCompaction = New Global.System.Data.DataColumn("MethodOfCompaction", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMethodOfCompaction)
            Me.columnDateDelivered = New Global.System.Data.DataColumn("DateDelivered", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateDelivered)
            Me.columnTestMethod = New Global.System.Data.DataColumn("TestMethod", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestMethod)
            Me.columnSpecimen1D = New Global.System.Data.DataColumn("Specimen1D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen1D)
            Me.columnSpecimen2D = New Global.System.Data.DataColumn("Specimen2D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen2D)
            Me.columnSpecimen3D = New Global.System.Data.DataColumn("Specimen3D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen3D)
            Me.columnSpecimen4D = New Global.System.Data.DataColumn("Specimen4D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen4D)
            Me.columnSpecimen5D = New Global.System.Data.DataColumn("Specimen5D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen5D)
            Me.columnSpecimen6D = New Global.System.Data.DataColumn("Specimen6D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen6D)
            Me.columnSpecimen7D = New Global.System.Data.DataColumn("Specimen7D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen7D)
            Me.columnSpecimen8D = New Global.System.Data.DataColumn("Specimen8D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen8D)
            Me.columnSpecimen9D = New Global.System.Data.DataColumn("Specimen9D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen9D)
            Me.columnSpecimen10D = New Global.System.Data.DataColumn("Specimen10D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen10D)
            Me.columnSpecimen1L = New Global.System.Data.DataColumn("Specimen1L", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen1L)
            Me.columnSpecimen2L = New Global.System.Data.DataColumn("Specimen2L", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen2L)
            Me.columnSpecimen3L = New Global.System.Data.DataColumn("Specimen3L", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen3L)
            Me.columnSpecimen4L = New Global.System.Data.DataColumn("Specimen4L", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen4L)
            Me.columnSpecimen5L = New Global.System.Data.DataColumn("Specimen5L", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen5L)
            Me.columnSpecimen6L = New Global.System.Data.DataColumn("Specimen6L", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen6L)
            Me.columnSpecimen7L = New Global.System.Data.DataColumn("Specimen7L", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen7L)
            Me.columnSpecimen8L = New Global.System.Data.DataColumn("Specimen8L", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen8L)
            Me.columnSpecimen9L = New Global.System.Data.DataColumn("Specimen9L", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen9L)
            Me.columnSpecimen10L = New Global.System.Data.DataColumn("Specimen10L", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen10L)
            Me.columnSpecimen1H = New Global.System.Data.DataColumn("Specimen1H", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen1H)
            Me.columnSpecimen2H = New Global.System.Data.DataColumn("Specimen2H", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen2H)
            Me.columnSpecimen3H = New Global.System.Data.DataColumn("Specimen3H", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen3H)
            Me.columnSpecimen4H = New Global.System.Data.DataColumn("Specimen4H", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen4H)
            Me.columnSpecimen5H = New Global.System.Data.DataColumn("Specimen5H", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen5H)
            Me.columnSpecimen6H = New Global.System.Data.DataColumn("Specimen6H", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen6H)
            Me.columnSpecimen7H = New Global.System.Data.DataColumn("Specimen7H", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen7H)
            Me.columnSpecimen8H = New Global.System.Data.DataColumn("Specimen8H", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen8H)
            Me.columnSpecimen9H = New Global.System.Data.DataColumn("Specimen9H", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen9H)
            Me.columnSpecimen10H = New Global.System.Data.DataColumn("Specimen10H", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen10H)
            Me.columnMass1 = New Global.System.Data.DataColumn("Mass1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMass1)
            Me.columnMass2 = New Global.System.Data.DataColumn("Mass2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMass2)
            Me.columnMass3 = New Global.System.Data.DataColumn("Mass3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMass3)
            Me.columnMass4 = New Global.System.Data.DataColumn("Mass4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMass4)
            Me.columnMass5 = New Global.System.Data.DataColumn("Mass5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMass5)
            Me.columnMass6 = New Global.System.Data.DataColumn("Mass6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMass6)
            Me.columnMass7 = New Global.System.Data.DataColumn("Mass7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMass7)
            Me.columnMass8 = New Global.System.Data.DataColumn("Mass8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMass8)
            Me.columnMass9 = New Global.System.Data.DataColumn("Mass9", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMass9)
            Me.columnMass10 = New Global.System.Data.DataColumn("Mass10", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMass10)
            Me.columnAveMass = New Global.System.Data.DataColumn("AveMass", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAveMass)
            Me.columnSubMergedMass1 = New Global.System.Data.DataColumn("SubMergedMass1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubMergedMass1)
            Me.columnSubMergedMass2 = New Global.System.Data.DataColumn("SubMergedMass2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubMergedMass2)
            Me.columnSubMergedMass3 = New Global.System.Data.DataColumn("SubMergedMass3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubMergedMass3)
            Me.columnSubMergedMass4 = New Global.System.Data.DataColumn("SubMergedMass4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubMergedMass4)
            Me.columnSubMergedMass5 = New Global.System.Data.DataColumn("SubMergedMass5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubMergedMass5)
            Me.columnSubMergedMass6 = New Global.System.Data.DataColumn("SubMergedMass6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubMergedMass6)
            Me.columnSubMergedMass7 = New Global.System.Data.DataColumn("SubMergedMass7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubMergedMass7)
            Me.columnSubMergedMass8 = New Global.System.Data.DataColumn("SubMergedMass8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubMergedMass8)
            Me.columnSubMergedMass9 = New Global.System.Data.DataColumn("SubMergedMass9", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubMergedMass9)
            Me.columnSubMergedMass10 = New Global.System.Data.DataColumn("SubMergedMass10", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubMergedMass10)
            Me.columnDensity1 = New Global.System.Data.DataColumn("Density1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDensity1)
            Me.columnDensity2 = New Global.System.Data.DataColumn("Density2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDensity2)
            Me.columnDensity3 = New Global.System.Data.DataColumn("Density3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDensity3)
            Me.columnDensity4 = New Global.System.Data.DataColumn("Density4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDensity4)
            Me.columnDensity5 = New Global.System.Data.DataColumn("Density5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDensity5)
            Me.columnDensity6 = New Global.System.Data.DataColumn("Density6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDensity6)
            Me.columnDensity7 = New Global.System.Data.DataColumn("Density7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDensity7)
            Me.columnDensity8 = New Global.System.Data.DataColumn("Density8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDensity8)
            Me.columnDensity9 = New Global.System.Data.DataColumn("Density9", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDensity9)
            Me.columnDensity10 = New Global.System.Data.DataColumn("Density10", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDensity10)
            Me.columnAveDensity = New Global.System.Data.DataColumn("AveDensity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAveDensity)
            Me.columnMaxLoad1 = New Global.System.Data.DataColumn("MaxLoad1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaxLoad1)
            Me.columnMaxLoad2 = New Global.System.Data.DataColumn("MaxLoad2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaxLoad2)
            Me.columnMaxLoad3 = New Global.System.Data.DataColumn("MaxLoad3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaxLoad3)
            Me.columnMaxLoad4 = New Global.System.Data.DataColumn("MaxLoad4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaxLoad4)
            Me.columnMaxLoad5 = New Global.System.Data.DataColumn("MaxLoad5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaxLoad5)
            Me.columnMaxLoad6 = New Global.System.Data.DataColumn("MaxLoad6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaxLoad6)
            Me.columnMaxLoad7 = New Global.System.Data.DataColumn("MaxLoad7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaxLoad7)
            Me.columnMaxLoad8 = New Global.System.Data.DataColumn("MaxLoad8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaxLoad8)
            Me.columnMaxLoad9 = New Global.System.Data.DataColumn("MaxLoad9", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaxLoad9)
            Me.columnMaxLoad10 = New Global.System.Data.DataColumn("MaxLoad10", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaxLoad10)
            Me.columnCompStrength1 = New Global.System.Data.DataColumn("CompStrength1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompStrength1)
            Me.columnCompStrength2 = New Global.System.Data.DataColumn("CompStrength2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompStrength2)
            Me.columnCompStrength3 = New Global.System.Data.DataColumn("CompStrength3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompStrength3)
            Me.columnCompStrength4 = New Global.System.Data.DataColumn("CompStrength4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompStrength4)
            Me.columnCompStrength5 = New Global.System.Data.DataColumn("CompStrength5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompStrength5)
            Me.columnCompStrength6 = New Global.System.Data.DataColumn("CompStrength6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompStrength6)
            Me.columnCompStrength7 = New Global.System.Data.DataColumn("CompStrength7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompStrength7)
            Me.columnCompStrength8 = New Global.System.Data.DataColumn("CompStrength8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompStrength8)
            Me.columnCompStrength9 = New Global.System.Data.DataColumn("CompStrength9", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompStrength9)
            Me.columnCompStrength10 = New Global.System.Data.DataColumn("CompStrength10", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompStrength10)
            Me.columnAveStrength = New Global.System.Data.DataColumn("AveStrength", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAveStrength)
            Me.columnFractureType1 = New Global.System.Data.DataColumn("FractureType1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFractureType1)
            Me.columnFractureType2 = New Global.System.Data.DataColumn("FractureType2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFractureType2)
            Me.columnFractureType3 = New Global.System.Data.DataColumn("FractureType3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFractureType3)
            Me.columnFractureType4 = New Global.System.Data.DataColumn("FractureType4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFractureType4)
            Me.columnFractureType5 = New Global.System.Data.DataColumn("FractureType5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFractureType5)
            Me.columnFractureType6 = New Global.System.Data.DataColumn("FractureType6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFractureType6)
            Me.columnFractureType7 = New Global.System.Data.DataColumn("FractureType7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFractureType7)
            Me.columnFractureType8 = New Global.System.Data.DataColumn("FractureType8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFractureType8)
            Me.columnFractureType9 = New Global.System.Data.DataColumn("FractureType9", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFractureType9)
            Me.columnFractureType10 = New Global.System.Data.DataColumn("FractureType10", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFractureType10)
            Me.columnStructuralElement = New Global.System.Data.DataColumn("StructuralElement", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStructuralElement)
            Me.columnSpecimenShape = New Global.System.Data.DataColumn("SpecimenShape", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimenShape)
            Me.columnTestedBy = New Global.System.Data.DataColumn("TestedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestedBy)
            Me.columnCheckedBy = New Global.System.Data.DataColumn("CheckedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCheckedBy)
            Me.columnApprovedBy = New Global.System.Data.DataColumn("ApprovedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnApprovedBy)
            Me.columnCheckedDate = New Global.System.Data.DataColumn("CheckedDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCheckedDate)
            Me.columnApprovedDate = New Global.System.Data.DataColumn("ApprovedDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnApprovedDate)
            Me.columnProjectID = New Global.System.Data.DataColumn("ProjectID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProjectID)
            Me.columnProjectStart = New Global.System.Data.DataColumn("ProjectStart", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProjectStart)
            Me.columnProjectEnd = New Global.System.Data.DataColumn("ProjectEnd", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProjectEnd)
            Me.columnExpr1 = New Global.System.Data.DataColumn("Expr1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr1)
            Me.columnBatchId = New Global.System.Data.DataColumn("BatchId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBatchId)
            Me.columnArea1 = New Global.System.Data.DataColumn("Area1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArea1)
            Me.columnArea2 = New Global.System.Data.DataColumn("Area2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArea2)
            Me.columnArea3 = New Global.System.Data.DataColumn("Area3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArea3)
            Me.columnArea4 = New Global.System.Data.DataColumn("Area4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArea4)
            Me.columnArea5 = New Global.System.Data.DataColumn("Area5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArea5)
            Me.columnArea6 = New Global.System.Data.DataColumn("Area6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArea6)
            Me.columnArea7 = New Global.System.Data.DataColumn("Area7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArea7)
            Me.columnArea8 = New Global.System.Data.DataColumn("Area8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArea8)
            Me.columnArea9 = New Global.System.Data.DataColumn("Area9", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArea9)
            Me.columnArea10 = New Global.System.Data.DataColumn("Area10", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArea10)
            Me.columnSpecimenAge = New Global.System.Data.DataColumn("SpecimenAge", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimenAge)
            Me.columnCompliledby = New Global.System.Data.DataColumn("Compliledby", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompliledby)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnProjectID, Me.columnBatchId}, true))
            Me.columnProjectName.MaxLength = 150
            Me.columnProjectAddress.MaxLength = 150
            Me.columnCity.MaxLength = 50
            Me.columnState.MaxLength = 50
            Me.columnCountry.MaxLength = 50
            Me.columnClientName.MaxLength = 50
            Me.columnClientAddress.MaxLength = 150
            Me.columnContactPerson.MaxLength = 50
            Me.columnContactPhoneNo.MaxLength = 50
            Me.columnContactEmail.MaxLength = 50
            Me.columnPlotNo.MaxLength = 50
            Me.columnStructureType.MaxLength = 50
            Me.columnBatchIdentificationNo.MaxLength = 50
            Me.columnNameOfSampler.MaxLength = 50
            Me.columnCuringConditions.MaxLength = 50
            Me.columnTestingLaboratory.MaxLength = 150
            Me.columnTestCertificate.MaxLength = 200
            Me.columnSupplySource.MaxLength = 50
            Me.columnConcreteGrade.MaxLength = 50
            Me.columnSpecificationOfConcreteMix.MaxLength = 50
            Me.columnSpecimenCondition.MaxLength = 50
            Me.columnMethodOfCompaction.MaxLength = 50
            Me.columnTestMethod.MaxLength = 50
            Me.columnSpecimen1D.MaxLength = 50
            Me.columnSpecimen2D.MaxLength = 50
            Me.columnSpecimen3D.MaxLength = 50
            Me.columnSpecimen4D.MaxLength = 50
            Me.columnSpecimen5D.MaxLength = 50
            Me.columnSpecimen6D.MaxLength = 50
            Me.columnSpecimen7D.MaxLength = 50
            Me.columnSpecimen8D.MaxLength = 50
            Me.columnSpecimen9D.MaxLength = 50
            Me.columnSpecimen10D.MaxLength = 50
            Me.columnSpecimen1L.MaxLength = 50
            Me.columnSpecimen2L.MaxLength = 50
            Me.columnSpecimen3L.MaxLength = 50
            Me.columnSpecimen4L.MaxLength = 50
            Me.columnSpecimen5L.MaxLength = 50
            Me.columnSpecimen6L.MaxLength = 50
            Me.columnSpecimen7L.MaxLength = 50
            Me.columnSpecimen8L.MaxLength = 50
            Me.columnSpecimen9L.MaxLength = 50
            Me.columnSpecimen10L.MaxLength = 50
            Me.columnSpecimen1H.MaxLength = 50
            Me.columnSpecimen2H.MaxLength = 50
            Me.columnSpecimen3H.MaxLength = 50
            Me.columnSpecimen4H.MaxLength = 50
            Me.columnSpecimen5H.MaxLength = 50
            Me.columnSpecimen6H.MaxLength = 50
            Me.columnSpecimen7H.MaxLength = 50
            Me.columnSpecimen8H.MaxLength = 50
            Me.columnSpecimen9H.MaxLength = 50
            Me.columnSpecimen10H.MaxLength = 50
            Me.columnMass1.MaxLength = 50
            Me.columnMass2.MaxLength = 50
            Me.columnMass3.MaxLength = 50
            Me.columnMass4.MaxLength = 50
            Me.columnMass5.MaxLength = 50
            Me.columnMass6.MaxLength = 50
            Me.columnMass7.MaxLength = 50
            Me.columnMass8.MaxLength = 50
            Me.columnMass9.MaxLength = 50
            Me.columnMass10.MaxLength = 50
            Me.columnAveMass.MaxLength = 50
            Me.columnSubMergedMass1.MaxLength = 50
            Me.columnSubMergedMass2.MaxLength = 50
            Me.columnSubMergedMass3.MaxLength = 50
            Me.columnSubMergedMass4.MaxLength = 50
            Me.columnSubMergedMass5.MaxLength = 50
            Me.columnSubMergedMass6.MaxLength = 50
            Me.columnSubMergedMass7.MaxLength = 50
            Me.columnSubMergedMass8.MaxLength = 50
            Me.columnSubMergedMass9.MaxLength = 50
            Me.columnSubMergedMass10.MaxLength = 50
            Me.columnDensity1.MaxLength = 50
            Me.columnDensity2.MaxLength = 50
            Me.columnDensity3.MaxLength = 50
            Me.columnDensity4.MaxLength = 50
            Me.columnDensity5.MaxLength = 50
            Me.columnDensity6.MaxLength = 50
            Me.columnDensity7.MaxLength = 50
            Me.columnDensity8.MaxLength = 50
            Me.columnDensity9.MaxLength = 50
            Me.columnDensity10.MaxLength = 50
            Me.columnAveDensity.MaxLength = 50
            Me.columnMaxLoad1.MaxLength = 50
            Me.columnMaxLoad2.MaxLength = 50
            Me.columnMaxLoad3.MaxLength = 50
            Me.columnMaxLoad4.MaxLength = 50
            Me.columnMaxLoad5.MaxLength = 50
            Me.columnMaxLoad6.MaxLength = 50
            Me.columnMaxLoad7.MaxLength = 50
            Me.columnMaxLoad8.MaxLength = 50
            Me.columnMaxLoad9.MaxLength = 50
            Me.columnMaxLoad10.MaxLength = 50
            Me.columnCompStrength1.MaxLength = 50
            Me.columnCompStrength2.MaxLength = 50
            Me.columnCompStrength3.MaxLength = 50
            Me.columnCompStrength4.MaxLength = 50
            Me.columnCompStrength5.MaxLength = 50
            Me.columnCompStrength6.MaxLength = 50
            Me.columnCompStrength7.MaxLength = 50
            Me.columnCompStrength8.MaxLength = 50
            Me.columnCompStrength9.MaxLength = 50
            Me.columnCompStrength10.MaxLength = 50
            Me.columnAveStrength.MaxLength = 50
            Me.columnFractureType1.MaxLength = 50
            Me.columnFractureType2.MaxLength = 50
            Me.columnFractureType3.MaxLength = 50
            Me.columnFractureType4.MaxLength = 50
            Me.columnFractureType5.MaxLength = 50
            Me.columnFractureType6.MaxLength = 50
            Me.columnFractureType7.MaxLength = 50
            Me.columnFractureType8.MaxLength = 50
            Me.columnFractureType9.MaxLength = 50
            Me.columnFractureType10.MaxLength = 50
            Me.columnStructuralElement.MaxLength = 50
            Me.columnSpecimenShape.MaxLength = 50
            Me.columnTestedBy.MaxLength = 50
            Me.columnCheckedBy.MaxLength = 50
            Me.columnApprovedBy.MaxLength = 50
            Me.columnProjectID.AutoIncrement = true
            Me.columnProjectID.AutoIncrementSeed = -1
            Me.columnProjectID.AutoIncrementStep = -1
            Me.columnProjectID.AllowDBNull = false
            Me.columnProjectID.ReadOnly = true
            Me.columnExpr1.AllowDBNull = false
            Me.columnBatchId.AutoIncrement = true
            Me.columnBatchId.AutoIncrementSeed = -1
            Me.columnBatchId.AutoIncrementStep = -1
            Me.columnBatchId.AllowDBNull = false
            Me.columnBatchId.ReadOnly = true
            Me.columnArea1.MaxLength = 50
            Me.columnArea2.MaxLength = 50
            Me.columnArea3.MaxLength = 50
            Me.columnArea4.MaxLength = 50
            Me.columnArea5.MaxLength = 50
            Me.columnArea6.MaxLength = 50
            Me.columnArea7.MaxLength = 50
            Me.columnArea8.MaxLength = 50
            Me.columnArea9.MaxLength = 50
            Me.columnArea10.MaxLength = 50
            Me.columnSpecimenAge.ReadOnly = true
            Me.columnCompliledby.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewTableJoinRow() As TableJoinRow
            Return CType(Me.NewRow,TableJoinRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TableJoinRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TableJoinRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TableJoinRowChangedEvent) Is Nothing) Then
                RaiseEvent TableJoinRowChanged(Me, New TableJoinRowChangeEvent(CType(e.Row,TableJoinRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TableJoinRowChangingEvent) Is Nothing) Then
                RaiseEvent TableJoinRowChanging(Me, New TableJoinRowChangeEvent(CType(e.Row,TableJoinRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TableJoinRowDeletedEvent) Is Nothing) Then
                RaiseEvent TableJoinRowDeleted(Me, New TableJoinRowChangeEvent(CType(e.Row,TableJoinRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TableJoinRowDeletingEvent) Is Nothing) Then
                RaiseEvent TableJoinRowDeleting(Me, New TableJoinRowChangeEvent(CType(e.Row,TableJoinRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveTableJoinRow(ByVal row As TableJoinRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As TerraConcDataSet = New TerraConcDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TableJoinDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class UserstableDataTable
        Inherits Global.System.Data.TypedTableBase(Of UserstableRow)
        
        Private columnUserID As Global.System.Data.DataColumn
        
        Private columnDesignation As Global.System.Data.DataColumn
        
        Private columnFirstName As Global.System.Data.DataColumn
        
        Private columnLastName As Global.System.Data.DataColumn
        
        Private columnPassword As Global.System.Data.DataColumn
        
        Private columnUserName As Global.System.Data.DataColumn
        
        Private columnStatus As Global.System.Data.DataColumn
        
        Private columnUserPhoto As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Userstable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UserIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUserID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DesignationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDesignation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FirstNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFirstName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LastNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLastName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PasswordColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPassword
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UserNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUserName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UserPhotoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUserPhoto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As UserstableRow
            Get
                Return CType(Me.Rows(index),UserstableRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event UserstableRowChanging As UserstableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event UserstableRowChanged As UserstableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event UserstableRowDeleting As UserstableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event UserstableRowDeleted As UserstableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddUserstableRow(ByVal row As UserstableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddUserstableRow(ByVal Designation As String, ByVal FirstName As String, ByVal LastName As String, ByVal Password As String, ByVal UserName As String, ByVal Status As String, ByVal UserPhoto() As Byte) As UserstableRow
            Dim rowUserstableRow As UserstableRow = CType(Me.NewRow,UserstableRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Designation, FirstName, LastName, Password, UserName, Status, UserPhoto}
            rowUserstableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowUserstableRow)
            Return rowUserstableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByUserID(ByVal UserID As Integer) As UserstableRow
            Return CType(Me.Rows.Find(New Object() {UserID}),UserstableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As UserstableDataTable = CType(MyBase.Clone,UserstableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New UserstableDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnUserID = MyBase.Columns("UserID")
            Me.columnDesignation = MyBase.Columns("Designation")
            Me.columnFirstName = MyBase.Columns("FirstName")
            Me.columnLastName = MyBase.Columns("LastName")
            Me.columnPassword = MyBase.Columns("Password")
            Me.columnUserName = MyBase.Columns("UserName")
            Me.columnStatus = MyBase.Columns("Status")
            Me.columnUserPhoto = MyBase.Columns("UserPhoto")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnUserID = New Global.System.Data.DataColumn("UserID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUserID)
            Me.columnDesignation = New Global.System.Data.DataColumn("Designation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDesignation)
            Me.columnFirstName = New Global.System.Data.DataColumn("FirstName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFirstName)
            Me.columnLastName = New Global.System.Data.DataColumn("LastName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastName)
            Me.columnPassword = New Global.System.Data.DataColumn("Password", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPassword)
            Me.columnUserName = New Global.System.Data.DataColumn("UserName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUserName)
            Me.columnStatus = New Global.System.Data.DataColumn("Status", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus)
            Me.columnUserPhoto = New Global.System.Data.DataColumn("UserPhoto", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUserPhoto)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnUserID}, true))
            Me.columnUserID.AutoIncrement = true
            Me.columnUserID.AutoIncrementSeed = -1
            Me.columnUserID.AutoIncrementStep = -1
            Me.columnUserID.AllowDBNull = false
            Me.columnUserID.ReadOnly = true
            Me.columnUserID.Unique = true
            Me.columnDesignation.MaxLength = 50
            Me.columnFirstName.MaxLength = 50
            Me.columnLastName.MaxLength = 50
            Me.columnPassword.MaxLength = 50
            Me.columnUserName.MaxLength = 50
            Me.columnStatus.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewUserstableRow() As UserstableRow
            Return CType(Me.NewRow,UserstableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New UserstableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(UserstableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.UserstableRowChangedEvent) Is Nothing) Then
                RaiseEvent UserstableRowChanged(Me, New UserstableRowChangeEvent(CType(e.Row,UserstableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.UserstableRowChangingEvent) Is Nothing) Then
                RaiseEvent UserstableRowChanging(Me, New UserstableRowChangeEvent(CType(e.Row,UserstableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.UserstableRowDeletedEvent) Is Nothing) Then
                RaiseEvent UserstableRowDeleted(Me, New UserstableRowChangeEvent(CType(e.Row,UserstableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.UserstableRowDeletingEvent) Is Nothing) Then
                RaiseEvent UserstableRowDeleting(Me, New UserstableRowChangeEvent(CType(e.Row,UserstableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveUserstableRow(ByVal row As UserstableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As TerraConcDataSet = New TerraConcDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "UserstableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class BatchTableDataTable
        Inherits Global.System.Data.TypedTableBase(Of BatchTableRow)
        
        Private columnProjectID As Global.System.Data.DataColumn
        
        Private columnBatchId As Global.System.Data.DataColumn
        
        Private columnBatchIdentificationNo As Global.System.Data.DataColumn
        
        Private columnNameOfSampler As Global.System.Data.DataColumn
        
        Private columnBatchDate As Global.System.Data.DataColumn
        
        Private columnBatchTime As Global.System.Data.DataColumn
        
        Private columnTestdate As Global.System.Data.DataColumn
        
        Private columnCuringConditions As Global.System.Data.DataColumn
        
        Private columnTestingLaboratory As Global.System.Data.DataColumn
        
        Private columnTestCertificate As Global.System.Data.DataColumn
        
        Private columnSupplySource As Global.System.Data.DataColumn
        
        Private columnConcreteGrade As Global.System.Data.DataColumn
        
        Private columnSpecificationOfConcreteMix As Global.System.Data.DataColumn
        
        Private columnNoOfSpecimen As Global.System.Data.DataColumn
        
        Private columnSpecimenCondition As Global.System.Data.DataColumn
        
        Private columnMethodOfCompaction As Global.System.Data.DataColumn
        
        Private columnDateDelivered As Global.System.Data.DataColumn
        
        Private columnTestMethod As Global.System.Data.DataColumn
        
        Private columnSpecimen1D As Global.System.Data.DataColumn
        
        Private columnSpecimen2D As Global.System.Data.DataColumn
        
        Private columnSpecimen3D As Global.System.Data.DataColumn
        
        Private columnSpecimen4D As Global.System.Data.DataColumn
        
        Private columnSpecimen5D As Global.System.Data.DataColumn
        
        Private columnSpecimen6D As Global.System.Data.DataColumn
        
        Private columnSpecimen7D As Global.System.Data.DataColumn
        
        Private columnSpecimen8D As Global.System.Data.DataColumn
        
        Private columnSpecimen9D As Global.System.Data.DataColumn
        
        Private columnSpecimen10D As Global.System.Data.DataColumn
        
        Private columnSpecimen1L As Global.System.Data.DataColumn
        
        Private columnSpecimen2L As Global.System.Data.DataColumn
        
        Private columnSpecimen3L As Global.System.Data.DataColumn
        
        Private columnSpecimen4L As Global.System.Data.DataColumn
        
        Private columnSpecimen5L As Global.System.Data.DataColumn
        
        Private columnSpecimen6L As Global.System.Data.DataColumn
        
        Private columnSpecimen7L As Global.System.Data.DataColumn
        
        Private columnSpecimen8L As Global.System.Data.DataColumn
        
        Private columnSpecimen9L As Global.System.Data.DataColumn
        
        Private columnSpecimen10L As Global.System.Data.DataColumn
        
        Private columnSpecimen1H As Global.System.Data.DataColumn
        
        Private columnSpecimen2H As Global.System.Data.DataColumn
        
        Private columnSpecimen3H As Global.System.Data.DataColumn
        
        Private columnSpecimen4H As Global.System.Data.DataColumn
        
        Private columnSpecimen5H As Global.System.Data.DataColumn
        
        Private columnSpecimen6H As Global.System.Data.DataColumn
        
        Private columnSpecimen7H As Global.System.Data.DataColumn
        
        Private columnSpecimen8H As Global.System.Data.DataColumn
        
        Private columnSpecimen9H As Global.System.Data.DataColumn
        
        Private columnSpecimen10H As Global.System.Data.DataColumn
        
        Private columnMass1 As Global.System.Data.DataColumn
        
        Private columnMass2 As Global.System.Data.DataColumn
        
        Private columnMass3 As Global.System.Data.DataColumn
        
        Private columnMass4 As Global.System.Data.DataColumn
        
        Private columnMass5 As Global.System.Data.DataColumn
        
        Private columnMass6 As Global.System.Data.DataColumn
        
        Private columnMass7 As Global.System.Data.DataColumn
        
        Private columnMass8 As Global.System.Data.DataColumn
        
        Private columnMass9 As Global.System.Data.DataColumn
        
        Private columnMass10 As Global.System.Data.DataColumn
        
        Private columnAveMass As Global.System.Data.DataColumn
        
        Private columnSubMergedMass1 As Global.System.Data.DataColumn
        
        Private columnSubMergedMass2 As Global.System.Data.DataColumn
        
        Private columnSubMergedMass3 As Global.System.Data.DataColumn
        
        Private columnSubMergedMass4 As Global.System.Data.DataColumn
        
        Private columnSubMergedMass5 As Global.System.Data.DataColumn
        
        Private columnSubMergedMass6 As Global.System.Data.DataColumn
        
        Private columnSubMergedMass7 As Global.System.Data.DataColumn
        
        Private columnSubMergedMass8 As Global.System.Data.DataColumn
        
        Private columnSubMergedMass9 As Global.System.Data.DataColumn
        
        Private columnSubMergedMass10 As Global.System.Data.DataColumn
        
        Private columnDensity1 As Global.System.Data.DataColumn
        
        Private columnDensity2 As Global.System.Data.DataColumn
        
        Private columnDensity3 As Global.System.Data.DataColumn
        
        Private columnDensity4 As Global.System.Data.DataColumn
        
        Private columnDensity5 As Global.System.Data.DataColumn
        
        Private columnDensity6 As Global.System.Data.DataColumn
        
        Private columnDensity7 As Global.System.Data.DataColumn
        
        Private columnDensity8 As Global.System.Data.DataColumn
        
        Private columnDensity9 As Global.System.Data.DataColumn
        
        Private columnDensity10 As Global.System.Data.DataColumn
        
        Private columnAveDensity As Global.System.Data.DataColumn
        
        Private columnMaxLoad1 As Global.System.Data.DataColumn
        
        Private columnMaxLoad2 As Global.System.Data.DataColumn
        
        Private columnMaxLoad3 As Global.System.Data.DataColumn
        
        Private columnMaxLoad4 As Global.System.Data.DataColumn
        
        Private columnMaxLoad5 As Global.System.Data.DataColumn
        
        Private columnMaxLoad6 As Global.System.Data.DataColumn
        
        Private columnMaxLoad7 As Global.System.Data.DataColumn
        
        Private columnMaxLoad8 As Global.System.Data.DataColumn
        
        Private columnMaxLoad9 As Global.System.Data.DataColumn
        
        Private columnMaxLoad10 As Global.System.Data.DataColumn
        
        Private columnCompStrength1 As Global.System.Data.DataColumn
        
        Private columnCompStrength2 As Global.System.Data.DataColumn
        
        Private columnCompStrength3 As Global.System.Data.DataColumn
        
        Private columnCompStrength4 As Global.System.Data.DataColumn
        
        Private columnCompStrength5 As Global.System.Data.DataColumn
        
        Private columnCompStrength6 As Global.System.Data.DataColumn
        
        Private columnCompStrength7 As Global.System.Data.DataColumn
        
        Private columnCompStrength8 As Global.System.Data.DataColumn
        
        Private columnCompStrength9 As Global.System.Data.DataColumn
        
        Private columnCompStrength10 As Global.System.Data.DataColumn
        
        Private columnAveStrength As Global.System.Data.DataColumn
        
        Private columnFractureType1 As Global.System.Data.DataColumn
        
        Private columnFractureType2 As Global.System.Data.DataColumn
        
        Private columnFractureType3 As Global.System.Data.DataColumn
        
        Private columnFractureType4 As Global.System.Data.DataColumn
        
        Private columnFractureType5 As Global.System.Data.DataColumn
        
        Private columnFractureType6 As Global.System.Data.DataColumn
        
        Private columnFractureType7 As Global.System.Data.DataColumn
        
        Private columnFractureType8 As Global.System.Data.DataColumn
        
        Private columnFractureType9 As Global.System.Data.DataColumn
        
        Private columnFractureType10 As Global.System.Data.DataColumn
        
        Private columnSpecimenAge As Global.System.Data.DataColumn
        
        Private columnStructuralElement As Global.System.Data.DataColumn
        
        Private columnSpecimenShape As Global.System.Data.DataColumn
        
        Private columnTestedBy As Global.System.Data.DataColumn
        
        Private columnCheckedBy As Global.System.Data.DataColumn
        
        Private columnApprovedBy As Global.System.Data.DataColumn
        
        Private columnCheckedDate As Global.System.Data.DataColumn
        
        Private columnApprovedDate As Global.System.Data.DataColumn
        
        Private columnArea1 As Global.System.Data.DataColumn
        
        Private columnArea2 As Global.System.Data.DataColumn
        
        Private columnArea3 As Global.System.Data.DataColumn
        
        Private columnArea4 As Global.System.Data.DataColumn
        
        Private columnArea5 As Global.System.Data.DataColumn
        
        Private columnArea6 As Global.System.Data.DataColumn
        
        Private columnArea7 As Global.System.Data.DataColumn
        
        Private columnArea8 As Global.System.Data.DataColumn
        
        Private columnArea9 As Global.System.Data.DataColumn
        
        Private columnArea10 As Global.System.Data.DataColumn
        
        Private columnCompliledby As Global.System.Data.DataColumn
        
        Private column1 As Global.System.Data.DataColumn
        
        Private column2 As Global.System.Data.DataColumn
        
        Private column3 As Global.System.Data.DataColumn
        
        Private column4 As Global.System.Data.DataColumn
        
        Private column5 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "BatchTable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ProjectIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProjectID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BatchIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBatchId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BatchIdentificationNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBatchIdentificationNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NameOfSamplerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNameOfSampler
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BatchDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBatchDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BatchTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBatchTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TestdateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestdate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CuringConditionsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCuringConditions
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TestingLaboratoryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestingLaboratory
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TestCertificateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestCertificate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SupplySourceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSupplySource
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ConcreteGradeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConcreteGrade
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SpecificationOfConcreteMixColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecificationOfConcreteMix
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NoOfSpecimenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNoOfSpecimen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SpecimenConditionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimenCondition
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MethodOfCompactionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMethodOfCompaction
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DateDeliveredColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateDelivered
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TestMethodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestMethod
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen1DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen1D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen2DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen2D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen3DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen3D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen4DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen4D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen5DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen5D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen6DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen6D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen7DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen7D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen8DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen8D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen9DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen9D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen10DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen10D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen1LColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen1L
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen2LColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen2L
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen3LColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen3L
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen4LColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen4L
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen5LColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen5L
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen6LColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen6L
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen7LColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen7L
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen8LColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen8L
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen9LColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen9L
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen10LColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen10L
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen1HColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen1H
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen2HColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen2H
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen3HColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen3H
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen4HColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen4H
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen5HColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen5H
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen6HColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen6H
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen7HColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen7H
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen8HColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen8H
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen9HColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen9H
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Specimen10HColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimen10H
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mass1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMass1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mass2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMass2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mass3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMass3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mass4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMass4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mass5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMass5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mass6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMass6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mass7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMass7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mass8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMass8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mass9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMass9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mass10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMass10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AveMassColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAveMass
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SubMergedMass1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubMergedMass1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SubMergedMass2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubMergedMass2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SubMergedMass3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubMergedMass3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SubMergedMass4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubMergedMass4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SubMergedMass5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubMergedMass5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SubMergedMass6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubMergedMass6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SubMergedMass7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubMergedMass7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SubMergedMass8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubMergedMass8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SubMergedMass9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubMergedMass9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SubMergedMass10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubMergedMass10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Density1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDensity1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Density2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDensity2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Density3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDensity3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Density4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDensity4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Density5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDensity5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Density6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDensity6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Density7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDensity7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Density8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDensity8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Density9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDensity9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Density10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDensity10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AveDensityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAveDensity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaxLoad1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaxLoad1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaxLoad2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaxLoad2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaxLoad3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaxLoad3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaxLoad4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaxLoad4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaxLoad5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaxLoad5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaxLoad6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaxLoad6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaxLoad7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaxLoad7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaxLoad8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaxLoad8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaxLoad9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaxLoad9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MaxLoad10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaxLoad10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CompStrength1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompStrength1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CompStrength2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompStrength2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CompStrength3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompStrength3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CompStrength4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompStrength4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CompStrength5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompStrength5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CompStrength6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompStrength6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CompStrength7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompStrength7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CompStrength8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompStrength8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CompStrength9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompStrength9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CompStrength10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompStrength10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AveStrengthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAveStrength
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FractureType1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFractureType1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FractureType2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFractureType2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FractureType3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFractureType3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FractureType4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFractureType4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FractureType5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFractureType5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FractureType6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFractureType6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FractureType7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFractureType7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FractureType8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFractureType8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FractureType9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFractureType9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FractureType10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFractureType10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SpecimenAgeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimenAge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property StructuralElementColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStructuralElement
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SpecimenShapeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimenShape
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TestedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestedBy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CheckedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCheckedBy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ApprovedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnApprovedBy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CheckedDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCheckedDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ApprovedDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnApprovedDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Area1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnArea1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Area2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnArea2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Area3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnArea3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Area4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnArea4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Area5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnArea5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Area6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnArea6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Area7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnArea7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Area8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnArea8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Area9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnArea9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Area10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnArea10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CompliledbyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompliledby
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _1Column() As Global.System.Data.DataColumn
            Get
                Return Me.column1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _2Column() As Global.System.Data.DataColumn
            Get
                Return Me.column2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _3Column() As Global.System.Data.DataColumn
            Get
                Return Me.column3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _4Column() As Global.System.Data.DataColumn
            Get
                Return Me.column4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _5Column() As Global.System.Data.DataColumn
            Get
                Return Me.column5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As BatchTableRow
            Get
                Return CType(Me.Rows(index),BatchTableRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event BatchTableRowChanging As BatchTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event BatchTableRowChanged As BatchTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event BatchTableRowDeleting As BatchTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event BatchTableRowDeleted As BatchTableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddBatchTableRow(ByVal row As BatchTableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddBatchTableRow( _
                    ByVal ProjectID As Integer,  _
                    ByVal BatchIdentificationNo As String,  _
                    ByVal NameOfSampler As String,  _
                    ByVal BatchDate As Date,  _
                    ByVal BatchTime As System.TimeSpan,  _
                    ByVal Testdate As Date,  _
                    ByVal CuringConditions As String,  _
                    ByVal TestingLaboratory As String,  _
                    ByVal TestCertificate As String,  _
                    ByVal SupplySource As String,  _
                    ByVal ConcreteGrade As String,  _
                    ByVal SpecificationOfConcreteMix As String,  _
                    ByVal NoOfSpecimen As Integer,  _
                    ByVal SpecimenCondition As String,  _
                    ByVal MethodOfCompaction As String,  _
                    ByVal DateDelivered As Date,  _
                    ByVal TestMethod As String,  _
                    ByVal Specimen1D As String,  _
                    ByVal Specimen2D As String,  _
                    ByVal Specimen3D As String,  _
                    ByVal Specimen4D As String,  _
                    ByVal Specimen5D As String,  _
                    ByVal Specimen6D As String,  _
                    ByVal Specimen7D As String,  _
                    ByVal Specimen8D As String,  _
                    ByVal Specimen9D As String,  _
                    ByVal Specimen10D As String,  _
                    ByVal Specimen1L As String,  _
                    ByVal Specimen2L As String,  _
                    ByVal Specimen3L As String,  _
                    ByVal Specimen4L As String,  _
                    ByVal Specimen5L As String,  _
                    ByVal Specimen6L As String,  _
                    ByVal Specimen7L As String,  _
                    ByVal Specimen8L As String,  _
                    ByVal Specimen9L As String,  _
                    ByVal Specimen10L As String,  _
                    ByVal Specimen1H As String,  _
                    ByVal Specimen2H As String,  _
                    ByVal Specimen3H As String,  _
                    ByVal Specimen4H As String,  _
                    ByVal Specimen5H As String,  _
                    ByVal Specimen6H As String,  _
                    ByVal Specimen7H As String,  _
                    ByVal Specimen8H As String,  _
                    ByVal Specimen9H As String,  _
                    ByVal Specimen10H As String,  _
                    ByVal Mass1 As String,  _
                    ByVal Mass2 As String,  _
                    ByVal Mass3 As String,  _
                    ByVal Mass4 As String,  _
                    ByVal Mass5 As String,  _
                    ByVal Mass6 As String,  _
                    ByVal Mass7 As String,  _
                    ByVal Mass8 As String,  _
                    ByVal Mass9 As String,  _
                    ByVal Mass10 As String,  _
                    ByVal AveMass As String,  _
                    ByVal SubMergedMass1 As String,  _
                    ByVal SubMergedMass2 As String,  _
                    ByVal SubMergedMass3 As String,  _
                    ByVal SubMergedMass4 As String,  _
                    ByVal SubMergedMass5 As String,  _
                    ByVal SubMergedMass6 As String,  _
                    ByVal SubMergedMass7 As String,  _
                    ByVal SubMergedMass8 As String,  _
                    ByVal SubMergedMass9 As String,  _
                    ByVal SubMergedMass10 As String,  _
                    ByVal Density1 As String,  _
                    ByVal Density2 As String,  _
                    ByVal Density3 As String,  _
                    ByVal Density4 As String,  _
                    ByVal Density5 As String,  _
                    ByVal Density6 As String,  _
                    ByVal Density7 As String,  _
                    ByVal Density8 As String,  _
                    ByVal Density9 As String,  _
                    ByVal Density10 As String,  _
                    ByVal AveDensity As String,  _
                    ByVal MaxLoad1 As String,  _
                    ByVal MaxLoad2 As String,  _
                    ByVal MaxLoad3 As String,  _
                    ByVal MaxLoad4 As String,  _
                    ByVal MaxLoad5 As String,  _
                    ByVal MaxLoad6 As String,  _
                    ByVal MaxLoad7 As String,  _
                    ByVal MaxLoad8 As String,  _
                    ByVal MaxLoad9 As String,  _
                    ByVal MaxLoad10 As String,  _
                    ByVal CompStrength1 As String,  _
                    ByVal CompStrength2 As String,  _
                    ByVal CompStrength3 As String,  _
                    ByVal CompStrength4 As String,  _
                    ByVal CompStrength5 As String,  _
                    ByVal CompStrength6 As String,  _
                    ByVal CompStrength7 As String,  _
                    ByVal CompStrength8 As String,  _
                    ByVal CompStrength9 As String,  _
                    ByVal CompStrength10 As String,  _
                    ByVal AveStrength As String,  _
                    ByVal FractureType1 As String,  _
                    ByVal FractureType2 As String,  _
                    ByVal FractureType3 As String,  _
                    ByVal FractureType4 As String,  _
                    ByVal FractureType5 As String,  _
                    ByVal FractureType6 As String,  _
                    ByVal FractureType7 As String,  _
                    ByVal FractureType8 As String,  _
                    ByVal FractureType9 As String,  _
                    ByVal FractureType10 As String,  _
                    ByVal SpecimenAge As Integer,  _
                    ByVal StructuralElement As String,  _
                    ByVal SpecimenShape As String,  _
                    ByVal TestedBy As String,  _
                    ByVal CheckedBy As String,  _
                    ByVal ApprovedBy As String,  _
                    ByVal CheckedDate As Date,  _
                    ByVal ApprovedDate As Date,  _
                    ByVal Area1 As String,  _
                    ByVal Area2 As String,  _
                    ByVal Area3 As String,  _
                    ByVal Area4 As String,  _
                    ByVal Area5 As String,  _
                    ByVal Area6 As String,  _
                    ByVal Area7 As String,  _
                    ByVal Area8 As String,  _
                    ByVal Area9 As String,  _
                    ByVal Area10 As String,  _
                    ByVal Compliledby As String,  _
                    ByVal _1 As String,  _
                    ByVal _2 As String,  _
                    ByVal _3 As String,  _
                    ByVal _4 As String,  _
                    ByVal _5 As String) As BatchTableRow
            Dim rowBatchTableRow As BatchTableRow = CType(Me.NewRow,BatchTableRow)
            Dim columnValuesArray() As Object = New Object() {ProjectID, Nothing, BatchIdentificationNo, NameOfSampler, BatchDate, BatchTime, Testdate, CuringConditions, TestingLaboratory, TestCertificate, SupplySource, ConcreteGrade, SpecificationOfConcreteMix, NoOfSpecimen, SpecimenCondition, MethodOfCompaction, DateDelivered, TestMethod, Specimen1D, Specimen2D, Specimen3D, Specimen4D, Specimen5D, Specimen6D, Specimen7D, Specimen8D, Specimen9D, Specimen10D, Specimen1L, Specimen2L, Specimen3L, Specimen4L, Specimen5L, Specimen6L, Specimen7L, Specimen8L, Specimen9L, Specimen10L, Specimen1H, Specimen2H, Specimen3H, Specimen4H, Specimen5H, Specimen6H, Specimen7H, Specimen8H, Specimen9H, Specimen10H, Mass1, Mass2, Mass3, Mass4, Mass5, Mass6, Mass7, Mass8, Mass9, Mass10, AveMass, SubMergedMass1, SubMergedMass2, SubMergedMass3, SubMergedMass4, SubMergedMass5, SubMergedMass6, SubMergedMass7, SubMergedMass8, SubMergedMass9, SubMergedMass10, Density1, Density2, Density3, Density4, Density5, Density6, Density7, Density8, Density9, Density10, AveDensity, MaxLoad1, MaxLoad2, MaxLoad3, MaxLoad4, MaxLoad5, MaxLoad6, MaxLoad7, MaxLoad8, MaxLoad9, MaxLoad10, CompStrength1, CompStrength2, CompStrength3, CompStrength4, CompStrength5, CompStrength6, CompStrength7, CompStrength8, CompStrength9, CompStrength10, AveStrength, FractureType1, FractureType2, FractureType3, FractureType4, FractureType5, FractureType6, FractureType7, FractureType8, FractureType9, FractureType10, SpecimenAge, StructuralElement, SpecimenShape, TestedBy, CheckedBy, ApprovedBy, CheckedDate, ApprovedDate, Area1, Area2, Area3, Area4, Area5, Area6, Area7, Area8, Area9, Area10, Compliledby, _1, _2, _3, _4, _5}
            rowBatchTableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowBatchTableRow)
            Return rowBatchTableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByBatchId(ByVal BatchId As Integer) As BatchTableRow
            Return CType(Me.Rows.Find(New Object() {BatchId}),BatchTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As BatchTableDataTable = CType(MyBase.Clone,BatchTableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New BatchTableDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnProjectID = MyBase.Columns("ProjectID")
            Me.columnBatchId = MyBase.Columns("BatchId")
            Me.columnBatchIdentificationNo = MyBase.Columns("BatchIdentificationNo")
            Me.columnNameOfSampler = MyBase.Columns("NameOfSampler")
            Me.columnBatchDate = MyBase.Columns("BatchDate")
            Me.columnBatchTime = MyBase.Columns("BatchTime")
            Me.columnTestdate = MyBase.Columns("Testdate")
            Me.columnCuringConditions = MyBase.Columns("CuringConditions")
            Me.columnTestingLaboratory = MyBase.Columns("TestingLaboratory")
            Me.columnTestCertificate = MyBase.Columns("TestCertificate")
            Me.columnSupplySource = MyBase.Columns("SupplySource")
            Me.columnConcreteGrade = MyBase.Columns("ConcreteGrade")
            Me.columnSpecificationOfConcreteMix = MyBase.Columns("SpecificationOfConcreteMix")
            Me.columnNoOfSpecimen = MyBase.Columns("NoOfSpecimen")
            Me.columnSpecimenCondition = MyBase.Columns("SpecimenCondition")
            Me.columnMethodOfCompaction = MyBase.Columns("MethodOfCompaction")
            Me.columnDateDelivered = MyBase.Columns("DateDelivered")
            Me.columnTestMethod = MyBase.Columns("TestMethod")
            Me.columnSpecimen1D = MyBase.Columns("Specimen1D")
            Me.columnSpecimen2D = MyBase.Columns("Specimen2D")
            Me.columnSpecimen3D = MyBase.Columns("Specimen3D")
            Me.columnSpecimen4D = MyBase.Columns("Specimen4D")
            Me.columnSpecimen5D = MyBase.Columns("Specimen5D")
            Me.columnSpecimen6D = MyBase.Columns("Specimen6D")
            Me.columnSpecimen7D = MyBase.Columns("Specimen7D")
            Me.columnSpecimen8D = MyBase.Columns("Specimen8D")
            Me.columnSpecimen9D = MyBase.Columns("Specimen9D")
            Me.columnSpecimen10D = MyBase.Columns("Specimen10D")
            Me.columnSpecimen1L = MyBase.Columns("Specimen1L")
            Me.columnSpecimen2L = MyBase.Columns("Specimen2L")
            Me.columnSpecimen3L = MyBase.Columns("Specimen3L")
            Me.columnSpecimen4L = MyBase.Columns("Specimen4L")
            Me.columnSpecimen5L = MyBase.Columns("Specimen5L")
            Me.columnSpecimen6L = MyBase.Columns("Specimen6L")
            Me.columnSpecimen7L = MyBase.Columns("Specimen7L")
            Me.columnSpecimen8L = MyBase.Columns("Specimen8L")
            Me.columnSpecimen9L = MyBase.Columns("Specimen9L")
            Me.columnSpecimen10L = MyBase.Columns("Specimen10L")
            Me.columnSpecimen1H = MyBase.Columns("Specimen1H")
            Me.columnSpecimen2H = MyBase.Columns("Specimen2H")
            Me.columnSpecimen3H = MyBase.Columns("Specimen3H")
            Me.columnSpecimen4H = MyBase.Columns("Specimen4H")
            Me.columnSpecimen5H = MyBase.Columns("Specimen5H")
            Me.columnSpecimen6H = MyBase.Columns("Specimen6H")
            Me.columnSpecimen7H = MyBase.Columns("Specimen7H")
            Me.columnSpecimen8H = MyBase.Columns("Specimen8H")
            Me.columnSpecimen9H = MyBase.Columns("Specimen9H")
            Me.columnSpecimen10H = MyBase.Columns("Specimen10H")
            Me.columnMass1 = MyBase.Columns("Mass1")
            Me.columnMass2 = MyBase.Columns("Mass2")
            Me.columnMass3 = MyBase.Columns("Mass3")
            Me.columnMass4 = MyBase.Columns("Mass4")
            Me.columnMass5 = MyBase.Columns("Mass5")
            Me.columnMass6 = MyBase.Columns("Mass6")
            Me.columnMass7 = MyBase.Columns("Mass7")
            Me.columnMass8 = MyBase.Columns("Mass8")
            Me.columnMass9 = MyBase.Columns("Mass9")
            Me.columnMass10 = MyBase.Columns("Mass10")
            Me.columnAveMass = MyBase.Columns("AveMass")
            Me.columnSubMergedMass1 = MyBase.Columns("SubMergedMass1")
            Me.columnSubMergedMass2 = MyBase.Columns("SubMergedMass2")
            Me.columnSubMergedMass3 = MyBase.Columns("SubMergedMass3")
            Me.columnSubMergedMass4 = MyBase.Columns("SubMergedMass4")
            Me.columnSubMergedMass5 = MyBase.Columns("SubMergedMass5")
            Me.columnSubMergedMass6 = MyBase.Columns("SubMergedMass6")
            Me.columnSubMergedMass7 = MyBase.Columns("SubMergedMass7")
            Me.columnSubMergedMass8 = MyBase.Columns("SubMergedMass8")
            Me.columnSubMergedMass9 = MyBase.Columns("SubMergedMass9")
            Me.columnSubMergedMass10 = MyBase.Columns("SubMergedMass10")
            Me.columnDensity1 = MyBase.Columns("Density1")
            Me.columnDensity2 = MyBase.Columns("Density2")
            Me.columnDensity3 = MyBase.Columns("Density3")
            Me.columnDensity4 = MyBase.Columns("Density4")
            Me.columnDensity5 = MyBase.Columns("Density5")
            Me.columnDensity6 = MyBase.Columns("Density6")
            Me.columnDensity7 = MyBase.Columns("Density7")
            Me.columnDensity8 = MyBase.Columns("Density8")
            Me.columnDensity9 = MyBase.Columns("Density9")
            Me.columnDensity10 = MyBase.Columns("Density10")
            Me.columnAveDensity = MyBase.Columns("AveDensity")
            Me.columnMaxLoad1 = MyBase.Columns("MaxLoad1")
            Me.columnMaxLoad2 = MyBase.Columns("MaxLoad2")
            Me.columnMaxLoad3 = MyBase.Columns("MaxLoad3")
            Me.columnMaxLoad4 = MyBase.Columns("MaxLoad4")
            Me.columnMaxLoad5 = MyBase.Columns("MaxLoad5")
            Me.columnMaxLoad6 = MyBase.Columns("MaxLoad6")
            Me.columnMaxLoad7 = MyBase.Columns("MaxLoad7")
            Me.columnMaxLoad8 = MyBase.Columns("MaxLoad8")
            Me.columnMaxLoad9 = MyBase.Columns("MaxLoad9")
            Me.columnMaxLoad10 = MyBase.Columns("MaxLoad10")
            Me.columnCompStrength1 = MyBase.Columns("CompStrength1")
            Me.columnCompStrength2 = MyBase.Columns("CompStrength2")
            Me.columnCompStrength3 = MyBase.Columns("CompStrength3")
            Me.columnCompStrength4 = MyBase.Columns("CompStrength4")
            Me.columnCompStrength5 = MyBase.Columns("CompStrength5")
            Me.columnCompStrength6 = MyBase.Columns("CompStrength6")
            Me.columnCompStrength7 = MyBase.Columns("CompStrength7")
            Me.columnCompStrength8 = MyBase.Columns("CompStrength8")
            Me.columnCompStrength9 = MyBase.Columns("CompStrength9")
            Me.columnCompStrength10 = MyBase.Columns("CompStrength10")
            Me.columnAveStrength = MyBase.Columns("AveStrength")
            Me.columnFractureType1 = MyBase.Columns("FractureType1")
            Me.columnFractureType2 = MyBase.Columns("FractureType2")
            Me.columnFractureType3 = MyBase.Columns("FractureType3")
            Me.columnFractureType4 = MyBase.Columns("FractureType4")
            Me.columnFractureType5 = MyBase.Columns("FractureType5")
            Me.columnFractureType6 = MyBase.Columns("FractureType6")
            Me.columnFractureType7 = MyBase.Columns("FractureType7")
            Me.columnFractureType8 = MyBase.Columns("FractureType8")
            Me.columnFractureType9 = MyBase.Columns("FractureType9")
            Me.columnFractureType10 = MyBase.Columns("FractureType10")
            Me.columnSpecimenAge = MyBase.Columns("SpecimenAge")
            Me.columnStructuralElement = MyBase.Columns("StructuralElement")
            Me.columnSpecimenShape = MyBase.Columns("SpecimenShape")
            Me.columnTestedBy = MyBase.Columns("TestedBy")
            Me.columnCheckedBy = MyBase.Columns("CheckedBy")
            Me.columnApprovedBy = MyBase.Columns("ApprovedBy")
            Me.columnCheckedDate = MyBase.Columns("CheckedDate")
            Me.columnApprovedDate = MyBase.Columns("ApprovedDate")
            Me.columnArea1 = MyBase.Columns("Area1")
            Me.columnArea2 = MyBase.Columns("Area2")
            Me.columnArea3 = MyBase.Columns("Area3")
            Me.columnArea4 = MyBase.Columns("Area4")
            Me.columnArea5 = MyBase.Columns("Area5")
            Me.columnArea6 = MyBase.Columns("Area6")
            Me.columnArea7 = MyBase.Columns("Area7")
            Me.columnArea8 = MyBase.Columns("Area8")
            Me.columnArea9 = MyBase.Columns("Area9")
            Me.columnArea10 = MyBase.Columns("Area10")
            Me.columnCompliledby = MyBase.Columns("Compliledby")
            Me.column1 = MyBase.Columns("1")
            Me.column2 = MyBase.Columns("2")
            Me.column3 = MyBase.Columns("3")
            Me.column4 = MyBase.Columns("4")
            Me.column5 = MyBase.Columns("5")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnProjectID = New Global.System.Data.DataColumn("ProjectID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProjectID)
            Me.columnBatchId = New Global.System.Data.DataColumn("BatchId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBatchId)
            Me.columnBatchIdentificationNo = New Global.System.Data.DataColumn("BatchIdentificationNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBatchIdentificationNo)
            Me.columnNameOfSampler = New Global.System.Data.DataColumn("NameOfSampler", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNameOfSampler)
            Me.columnBatchDate = New Global.System.Data.DataColumn("BatchDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBatchDate)
            Me.columnBatchTime = New Global.System.Data.DataColumn("BatchTime", GetType(Global.System.TimeSpan), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBatchTime)
            Me.columnTestdate = New Global.System.Data.DataColumn("Testdate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestdate)
            Me.columnCuringConditions = New Global.System.Data.DataColumn("CuringConditions", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCuringConditions)
            Me.columnTestingLaboratory = New Global.System.Data.DataColumn("TestingLaboratory", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestingLaboratory)
            Me.columnTestCertificate = New Global.System.Data.DataColumn("TestCertificate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestCertificate)
            Me.columnSupplySource = New Global.System.Data.DataColumn("SupplySource", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSupplySource)
            Me.columnConcreteGrade = New Global.System.Data.DataColumn("ConcreteGrade", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConcreteGrade)
            Me.columnSpecificationOfConcreteMix = New Global.System.Data.DataColumn("SpecificationOfConcreteMix", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecificationOfConcreteMix)
            Me.columnNoOfSpecimen = New Global.System.Data.DataColumn("NoOfSpecimen", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNoOfSpecimen)
            Me.columnSpecimenCondition = New Global.System.Data.DataColumn("SpecimenCondition", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimenCondition)
            Me.columnMethodOfCompaction = New Global.System.Data.DataColumn("MethodOfCompaction", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMethodOfCompaction)
            Me.columnDateDelivered = New Global.System.Data.DataColumn("DateDelivered", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateDelivered)
            Me.columnTestMethod = New Global.System.Data.DataColumn("TestMethod", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestMethod)
            Me.columnSpecimen1D = New Global.System.Data.DataColumn("Specimen1D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen1D)
            Me.columnSpecimen2D = New Global.System.Data.DataColumn("Specimen2D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen2D)
            Me.columnSpecimen3D = New Global.System.Data.DataColumn("Specimen3D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen3D)
            Me.columnSpecimen4D = New Global.System.Data.DataColumn("Specimen4D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen4D)
            Me.columnSpecimen5D = New Global.System.Data.DataColumn("Specimen5D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen5D)
            Me.columnSpecimen6D = New Global.System.Data.DataColumn("Specimen6D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen6D)
            Me.columnSpecimen7D = New Global.System.Data.DataColumn("Specimen7D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen7D)
            Me.columnSpecimen8D = New Global.System.Data.DataColumn("Specimen8D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen8D)
            Me.columnSpecimen9D = New Global.System.Data.DataColumn("Specimen9D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen9D)
            Me.columnSpecimen10D = New Global.System.Data.DataColumn("Specimen10D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen10D)
            Me.columnSpecimen1L = New Global.System.Data.DataColumn("Specimen1L", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen1L)
            Me.columnSpecimen2L = New Global.System.Data.DataColumn("Specimen2L", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen2L)
            Me.columnSpecimen3L = New Global.System.Data.DataColumn("Specimen3L", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen3L)
            Me.columnSpecimen4L = New Global.System.Data.DataColumn("Specimen4L", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen4L)
            Me.columnSpecimen5L = New Global.System.Data.DataColumn("Specimen5L", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen5L)
            Me.columnSpecimen6L = New Global.System.Data.DataColumn("Specimen6L", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen6L)
            Me.columnSpecimen7L = New Global.System.Data.DataColumn("Specimen7L", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen7L)
            Me.columnSpecimen8L = New Global.System.Data.DataColumn("Specimen8L", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen8L)
            Me.columnSpecimen9L = New Global.System.Data.DataColumn("Specimen9L", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen9L)
            Me.columnSpecimen10L = New Global.System.Data.DataColumn("Specimen10L", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen10L)
            Me.columnSpecimen1H = New Global.System.Data.DataColumn("Specimen1H", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen1H)
            Me.columnSpecimen2H = New Global.System.Data.DataColumn("Specimen2H", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen2H)
            Me.columnSpecimen3H = New Global.System.Data.DataColumn("Specimen3H", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen3H)
            Me.columnSpecimen4H = New Global.System.Data.DataColumn("Specimen4H", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen4H)
            Me.columnSpecimen5H = New Global.System.Data.DataColumn("Specimen5H", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen5H)
            Me.columnSpecimen6H = New Global.System.Data.DataColumn("Specimen6H", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen6H)
            Me.columnSpecimen7H = New Global.System.Data.DataColumn("Specimen7H", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen7H)
            Me.columnSpecimen8H = New Global.System.Data.DataColumn("Specimen8H", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen8H)
            Me.columnSpecimen9H = New Global.System.Data.DataColumn("Specimen9H", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen9H)
            Me.columnSpecimen10H = New Global.System.Data.DataColumn("Specimen10H", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimen10H)
            Me.columnMass1 = New Global.System.Data.DataColumn("Mass1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMass1)
            Me.columnMass2 = New Global.System.Data.DataColumn("Mass2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMass2)
            Me.columnMass3 = New Global.System.Data.DataColumn("Mass3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMass3)
            Me.columnMass4 = New Global.System.Data.DataColumn("Mass4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMass4)
            Me.columnMass5 = New Global.System.Data.DataColumn("Mass5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMass5)
            Me.columnMass6 = New Global.System.Data.DataColumn("Mass6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMass6)
            Me.columnMass7 = New Global.System.Data.DataColumn("Mass7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMass7)
            Me.columnMass8 = New Global.System.Data.DataColumn("Mass8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMass8)
            Me.columnMass9 = New Global.System.Data.DataColumn("Mass9", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMass9)
            Me.columnMass10 = New Global.System.Data.DataColumn("Mass10", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMass10)
            Me.columnAveMass = New Global.System.Data.DataColumn("AveMass", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAveMass)
            Me.columnSubMergedMass1 = New Global.System.Data.DataColumn("SubMergedMass1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubMergedMass1)
            Me.columnSubMergedMass2 = New Global.System.Data.DataColumn("SubMergedMass2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubMergedMass2)
            Me.columnSubMergedMass3 = New Global.System.Data.DataColumn("SubMergedMass3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubMergedMass3)
            Me.columnSubMergedMass4 = New Global.System.Data.DataColumn("SubMergedMass4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubMergedMass4)
            Me.columnSubMergedMass5 = New Global.System.Data.DataColumn("SubMergedMass5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubMergedMass5)
            Me.columnSubMergedMass6 = New Global.System.Data.DataColumn("SubMergedMass6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubMergedMass6)
            Me.columnSubMergedMass7 = New Global.System.Data.DataColumn("SubMergedMass7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubMergedMass7)
            Me.columnSubMergedMass8 = New Global.System.Data.DataColumn("SubMergedMass8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubMergedMass8)
            Me.columnSubMergedMass9 = New Global.System.Data.DataColumn("SubMergedMass9", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubMergedMass9)
            Me.columnSubMergedMass10 = New Global.System.Data.DataColumn("SubMergedMass10", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubMergedMass10)
            Me.columnDensity1 = New Global.System.Data.DataColumn("Density1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDensity1)
            Me.columnDensity2 = New Global.System.Data.DataColumn("Density2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDensity2)
            Me.columnDensity3 = New Global.System.Data.DataColumn("Density3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDensity3)
            Me.columnDensity4 = New Global.System.Data.DataColumn("Density4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDensity4)
            Me.columnDensity5 = New Global.System.Data.DataColumn("Density5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDensity5)
            Me.columnDensity6 = New Global.System.Data.DataColumn("Density6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDensity6)
            Me.columnDensity7 = New Global.System.Data.DataColumn("Density7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDensity7)
            Me.columnDensity8 = New Global.System.Data.DataColumn("Density8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDensity8)
            Me.columnDensity9 = New Global.System.Data.DataColumn("Density9", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDensity9)
            Me.columnDensity10 = New Global.System.Data.DataColumn("Density10", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDensity10)
            Me.columnAveDensity = New Global.System.Data.DataColumn("AveDensity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAveDensity)
            Me.columnMaxLoad1 = New Global.System.Data.DataColumn("MaxLoad1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaxLoad1)
            Me.columnMaxLoad2 = New Global.System.Data.DataColumn("MaxLoad2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaxLoad2)
            Me.columnMaxLoad3 = New Global.System.Data.DataColumn("MaxLoad3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaxLoad3)
            Me.columnMaxLoad4 = New Global.System.Data.DataColumn("MaxLoad4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaxLoad4)
            Me.columnMaxLoad5 = New Global.System.Data.DataColumn("MaxLoad5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaxLoad5)
            Me.columnMaxLoad6 = New Global.System.Data.DataColumn("MaxLoad6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaxLoad6)
            Me.columnMaxLoad7 = New Global.System.Data.DataColumn("MaxLoad7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaxLoad7)
            Me.columnMaxLoad8 = New Global.System.Data.DataColumn("MaxLoad8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaxLoad8)
            Me.columnMaxLoad9 = New Global.System.Data.DataColumn("MaxLoad9", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaxLoad9)
            Me.columnMaxLoad10 = New Global.System.Data.DataColumn("MaxLoad10", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaxLoad10)
            Me.columnCompStrength1 = New Global.System.Data.DataColumn("CompStrength1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompStrength1)
            Me.columnCompStrength2 = New Global.System.Data.DataColumn("CompStrength2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompStrength2)
            Me.columnCompStrength3 = New Global.System.Data.DataColumn("CompStrength3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompStrength3)
            Me.columnCompStrength4 = New Global.System.Data.DataColumn("CompStrength4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompStrength4)
            Me.columnCompStrength5 = New Global.System.Data.DataColumn("CompStrength5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompStrength5)
            Me.columnCompStrength6 = New Global.System.Data.DataColumn("CompStrength6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompStrength6)
            Me.columnCompStrength7 = New Global.System.Data.DataColumn("CompStrength7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompStrength7)
            Me.columnCompStrength8 = New Global.System.Data.DataColumn("CompStrength8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompStrength8)
            Me.columnCompStrength9 = New Global.System.Data.DataColumn("CompStrength9", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompStrength9)
            Me.columnCompStrength10 = New Global.System.Data.DataColumn("CompStrength10", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompStrength10)
            Me.columnAveStrength = New Global.System.Data.DataColumn("AveStrength", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAveStrength)
            Me.columnFractureType1 = New Global.System.Data.DataColumn("FractureType1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFractureType1)
            Me.columnFractureType2 = New Global.System.Data.DataColumn("FractureType2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFractureType2)
            Me.columnFractureType3 = New Global.System.Data.DataColumn("FractureType3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFractureType3)
            Me.columnFractureType4 = New Global.System.Data.DataColumn("FractureType4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFractureType4)
            Me.columnFractureType5 = New Global.System.Data.DataColumn("FractureType5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFractureType5)
            Me.columnFractureType6 = New Global.System.Data.DataColumn("FractureType6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFractureType6)
            Me.columnFractureType7 = New Global.System.Data.DataColumn("FractureType7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFractureType7)
            Me.columnFractureType8 = New Global.System.Data.DataColumn("FractureType8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFractureType8)
            Me.columnFractureType9 = New Global.System.Data.DataColumn("FractureType9", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFractureType9)
            Me.columnFractureType10 = New Global.System.Data.DataColumn("FractureType10", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFractureType10)
            Me.columnSpecimenAge = New Global.System.Data.DataColumn("SpecimenAge", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimenAge)
            Me.columnStructuralElement = New Global.System.Data.DataColumn("StructuralElement", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStructuralElement)
            Me.columnSpecimenShape = New Global.System.Data.DataColumn("SpecimenShape", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimenShape)
            Me.columnTestedBy = New Global.System.Data.DataColumn("TestedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestedBy)
            Me.columnCheckedBy = New Global.System.Data.DataColumn("CheckedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCheckedBy)
            Me.columnApprovedBy = New Global.System.Data.DataColumn("ApprovedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnApprovedBy)
            Me.columnCheckedDate = New Global.System.Data.DataColumn("CheckedDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCheckedDate)
            Me.columnApprovedDate = New Global.System.Data.DataColumn("ApprovedDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnApprovedDate)
            Me.columnArea1 = New Global.System.Data.DataColumn("Area1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArea1)
            Me.columnArea2 = New Global.System.Data.DataColumn("Area2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArea2)
            Me.columnArea3 = New Global.System.Data.DataColumn("Area3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArea3)
            Me.columnArea4 = New Global.System.Data.DataColumn("Area4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArea4)
            Me.columnArea5 = New Global.System.Data.DataColumn("Area5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArea5)
            Me.columnArea6 = New Global.System.Data.DataColumn("Area6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArea6)
            Me.columnArea7 = New Global.System.Data.DataColumn("Area7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArea7)
            Me.columnArea8 = New Global.System.Data.DataColumn("Area8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArea8)
            Me.columnArea9 = New Global.System.Data.DataColumn("Area9", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArea9)
            Me.columnArea10 = New Global.System.Data.DataColumn("Area10", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArea10)
            Me.columnCompliledby = New Global.System.Data.DataColumn("Compliledby", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompliledby)
            Me.column1 = New Global.System.Data.DataColumn("1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.column1.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column1")
            Me.column1.ExtendedProperties.Add("Generator_UserColumnName", "1")
            MyBase.Columns.Add(Me.column1)
            Me.column2 = New Global.System.Data.DataColumn("2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.column2.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column2")
            Me.column2.ExtendedProperties.Add("Generator_UserColumnName", "2")
            MyBase.Columns.Add(Me.column2)
            Me.column3 = New Global.System.Data.DataColumn("3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.column3.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column3")
            Me.column3.ExtendedProperties.Add("Generator_UserColumnName", "3")
            MyBase.Columns.Add(Me.column3)
            Me.column4 = New Global.System.Data.DataColumn("4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.column4.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column4")
            Me.column4.ExtendedProperties.Add("Generator_UserColumnName", "4")
            MyBase.Columns.Add(Me.column4)
            Me.column5 = New Global.System.Data.DataColumn("5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.column5.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column5")
            Me.column5.ExtendedProperties.Add("Generator_UserColumnName", "5")
            MyBase.Columns.Add(Me.column5)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnBatchId}, true))
            Me.columnProjectID.AllowDBNull = false
            Me.columnBatchId.AutoIncrement = true
            Me.columnBatchId.AutoIncrementSeed = -1
            Me.columnBatchId.AutoIncrementStep = -1
            Me.columnBatchId.AllowDBNull = false
            Me.columnBatchId.ReadOnly = true
            Me.columnBatchId.Unique = true
            Me.columnBatchIdentificationNo.MaxLength = 50
            Me.columnNameOfSampler.MaxLength = 50
            Me.columnCuringConditions.MaxLength = 50
            Me.columnTestingLaboratory.MaxLength = 150
            Me.columnTestCertificate.MaxLength = 200
            Me.columnSupplySource.MaxLength = 50
            Me.columnConcreteGrade.MaxLength = 50
            Me.columnSpecificationOfConcreteMix.MaxLength = 50
            Me.columnSpecimenCondition.MaxLength = 50
            Me.columnMethodOfCompaction.MaxLength = 50
            Me.columnTestMethod.MaxLength = 50
            Me.columnSpecimen1D.MaxLength = 50
            Me.columnSpecimen2D.MaxLength = 50
            Me.columnSpecimen3D.MaxLength = 50
            Me.columnSpecimen4D.MaxLength = 50
            Me.columnSpecimen5D.MaxLength = 50
            Me.columnSpecimen6D.MaxLength = 50
            Me.columnSpecimen7D.MaxLength = 50
            Me.columnSpecimen8D.MaxLength = 50
            Me.columnSpecimen9D.MaxLength = 50
            Me.columnSpecimen10D.MaxLength = 50
            Me.columnSpecimen1L.MaxLength = 50
            Me.columnSpecimen2L.MaxLength = 50
            Me.columnSpecimen3L.MaxLength = 50
            Me.columnSpecimen4L.MaxLength = 50
            Me.columnSpecimen5L.MaxLength = 50
            Me.columnSpecimen6L.MaxLength = 50
            Me.columnSpecimen7L.MaxLength = 50
            Me.columnSpecimen8L.MaxLength = 50
            Me.columnSpecimen9L.MaxLength = 50
            Me.columnSpecimen10L.MaxLength = 50
            Me.columnSpecimen1H.MaxLength = 50
            Me.columnSpecimen2H.MaxLength = 50
            Me.columnSpecimen3H.MaxLength = 50
            Me.columnSpecimen4H.MaxLength = 50
            Me.columnSpecimen5H.MaxLength = 50
            Me.columnSpecimen6H.MaxLength = 50
            Me.columnSpecimen7H.MaxLength = 50
            Me.columnSpecimen8H.MaxLength = 50
            Me.columnSpecimen9H.MaxLength = 50
            Me.columnSpecimen10H.MaxLength = 50
            Me.columnMass1.MaxLength = 50
            Me.columnMass2.MaxLength = 50
            Me.columnMass3.MaxLength = 50
            Me.columnMass4.MaxLength = 50
            Me.columnMass5.MaxLength = 50
            Me.columnMass6.MaxLength = 50
            Me.columnMass7.MaxLength = 50
            Me.columnMass8.MaxLength = 50
            Me.columnMass9.MaxLength = 50
            Me.columnMass10.MaxLength = 50
            Me.columnAveMass.MaxLength = 50
            Me.columnSubMergedMass1.MaxLength = 50
            Me.columnSubMergedMass2.MaxLength = 50
            Me.columnSubMergedMass3.MaxLength = 50
            Me.columnSubMergedMass4.MaxLength = 50
            Me.columnSubMergedMass5.MaxLength = 50
            Me.columnSubMergedMass6.MaxLength = 50
            Me.columnSubMergedMass7.MaxLength = 50
            Me.columnSubMergedMass8.MaxLength = 50
            Me.columnSubMergedMass9.MaxLength = 50
            Me.columnSubMergedMass10.MaxLength = 50
            Me.columnDensity1.MaxLength = 50
            Me.columnDensity2.MaxLength = 50
            Me.columnDensity3.MaxLength = 50
            Me.columnDensity4.MaxLength = 50
            Me.columnDensity5.MaxLength = 50
            Me.columnDensity6.MaxLength = 50
            Me.columnDensity7.MaxLength = 50
            Me.columnDensity8.MaxLength = 50
            Me.columnDensity9.MaxLength = 50
            Me.columnDensity10.MaxLength = 50
            Me.columnAveDensity.MaxLength = 50
            Me.columnMaxLoad1.MaxLength = 50
            Me.columnMaxLoad2.MaxLength = 50
            Me.columnMaxLoad3.MaxLength = 50
            Me.columnMaxLoad4.MaxLength = 50
            Me.columnMaxLoad5.MaxLength = 50
            Me.columnMaxLoad6.MaxLength = 50
            Me.columnMaxLoad7.MaxLength = 50
            Me.columnMaxLoad8.MaxLength = 50
            Me.columnMaxLoad9.MaxLength = 50
            Me.columnMaxLoad10.MaxLength = 50
            Me.columnCompStrength1.MaxLength = 50
            Me.columnCompStrength2.MaxLength = 50
            Me.columnCompStrength3.MaxLength = 50
            Me.columnCompStrength4.MaxLength = 50
            Me.columnCompStrength5.MaxLength = 50
            Me.columnCompStrength6.MaxLength = 50
            Me.columnCompStrength7.MaxLength = 50
            Me.columnCompStrength8.MaxLength = 50
            Me.columnCompStrength9.MaxLength = 50
            Me.columnCompStrength10.MaxLength = 50
            Me.columnAveStrength.MaxLength = 50
            Me.columnFractureType1.MaxLength = 50
            Me.columnFractureType2.MaxLength = 50
            Me.columnFractureType3.MaxLength = 50
            Me.columnFractureType4.MaxLength = 50
            Me.columnFractureType5.MaxLength = 50
            Me.columnFractureType6.MaxLength = 50
            Me.columnFractureType7.MaxLength = 50
            Me.columnFractureType8.MaxLength = 50
            Me.columnFractureType9.MaxLength = 50
            Me.columnFractureType10.MaxLength = 50
            Me.columnSpecimenAge.ReadOnly = true
            Me.columnStructuralElement.MaxLength = 50
            Me.columnSpecimenShape.MaxLength = 50
            Me.columnTestedBy.MaxLength = 50
            Me.columnCheckedBy.MaxLength = 50
            Me.columnApprovedBy.MaxLength = 50
            Me.columnArea1.MaxLength = 50
            Me.columnArea2.MaxLength = 50
            Me.columnArea3.MaxLength = 50
            Me.columnArea4.MaxLength = 50
            Me.columnArea5.MaxLength = 50
            Me.columnArea6.MaxLength = 50
            Me.columnArea7.MaxLength = 50
            Me.columnArea8.MaxLength = 50
            Me.columnArea9.MaxLength = 50
            Me.columnArea10.MaxLength = 50
            Me.columnCompliledby.MaxLength = 50
            Me.column1.MaxLength = 50
            Me.column2.MaxLength = 50
            Me.column3.MaxLength = 50
            Me.column4.MaxLength = 50
            Me.column5.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewBatchTableRow() As BatchTableRow
            Return CType(Me.NewRow,BatchTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New BatchTableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(BatchTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.BatchTableRowChangedEvent) Is Nothing) Then
                RaiseEvent BatchTableRowChanged(Me, New BatchTableRowChangeEvent(CType(e.Row,BatchTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.BatchTableRowChangingEvent) Is Nothing) Then
                RaiseEvent BatchTableRowChanging(Me, New BatchTableRowChangeEvent(CType(e.Row,BatchTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.BatchTableRowDeletedEvent) Is Nothing) Then
                RaiseEvent BatchTableRowDeleted(Me, New BatchTableRowChangeEvent(CType(e.Row,BatchTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.BatchTableRowDeletingEvent) Is Nothing) Then
                RaiseEvent BatchTableRowDeleting(Me, New BatchTableRowChangeEvent(CType(e.Row,BatchTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveBatchTableRow(ByVal row As BatchTableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As TerraConcDataSet = New TerraConcDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "BatchTableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ProjectsTableRow
        Inherits Global.System.Data.DataRow
        
        Private tableProjectsTable As ProjectsTableDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableProjectsTable = CType(Me.Table,ProjectsTableDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ProjectName() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectsTable.ProjectNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProjectName' in table 'ProjectsTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectsTable.ProjectNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ProjectAddress() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectsTable.ProjectAddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProjectAddress' in table 'ProjectsTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectsTable.ProjectAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property City() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectsTable.CityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'City' in table 'ProjectsTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectsTable.CityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property State() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectsTable.StateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'State' in table 'ProjectsTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectsTable.StateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Country() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectsTable.CountryColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Country' in table 'ProjectsTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectsTable.CountryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientName() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectsTable.ClientNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientName' in table 'ProjectsTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectsTable.ClientNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientAddress() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectsTable.ClientAddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientAddress' in table 'ProjectsTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectsTable.ClientAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ContactPerson() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectsTable.ContactPersonColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ContactPerson' in table 'ProjectsTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectsTable.ContactPersonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ContactPhoneNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectsTable.ContactPhoneNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ContactPhoneNo' in table 'ProjectsTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectsTable.ContactPhoneNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ContactEmail() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectsTable.ContactEmailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ContactEmail' in table 'ProjectsTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectsTable.ContactEmailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PlotNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectsTable.PlotNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PlotNo' in table 'ProjectsTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectsTable.PlotNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DateOfPour() As Date
            Get
                Try 
                    Return CType(Me(Me.tableProjectsTable.DateOfPourColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateOfPour' in table 'ProjectsTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectsTable.DateOfPourColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property StructureType() As String
            Get
                Try 
                    Return CType(Me(Me.tableProjectsTable.StructureTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StructureType' in table 'ProjectsTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectsTable.StructureTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ProjectStart() As Date
            Get
                Try 
                    Return CType(Me(Me.tableProjectsTable.ProjectStartColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProjectStart' in table 'ProjectsTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectsTable.ProjectStartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ProjectEnd() As Date
            Get
                Try 
                    Return CType(Me(Me.tableProjectsTable.ProjectEndColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProjectEnd' in table 'ProjectsTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectsTable.ProjectEndColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ProjectID() As Integer
            Get
                Return CType(Me(Me.tableProjectsTable.ProjectIDColumn),Integer)
            End Get
            Set
                Me(Me.tableProjectsTable.ProjectIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TimeOfPour() As System.TimeSpan
            Get
                Try 
                    Return CType(Me(Me.tableProjectsTable.TimeOfPourColumn),Global.System.TimeSpan)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TimeOfPour' in table 'ProjectsTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProjectsTable.TimeOfPourColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsProjectNameNull() As Boolean
            Return Me.IsNull(Me.tableProjectsTable.ProjectNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetProjectNameNull()
            Me(Me.tableProjectsTable.ProjectNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsProjectAddressNull() As Boolean
            Return Me.IsNull(Me.tableProjectsTable.ProjectAddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetProjectAddressNull()
            Me(Me.tableProjectsTable.ProjectAddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCityNull() As Boolean
            Return Me.IsNull(Me.tableProjectsTable.CityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCityNull()
            Me(Me.tableProjectsTable.CityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsStateNull() As Boolean
            Return Me.IsNull(Me.tableProjectsTable.StateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetStateNull()
            Me(Me.tableProjectsTable.StateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCountryNull() As Boolean
            Return Me.IsNull(Me.tableProjectsTable.CountryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCountryNull()
            Me(Me.tableProjectsTable.CountryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientNameNull() As Boolean
            Return Me.IsNull(Me.tableProjectsTable.ClientNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientNameNull()
            Me(Me.tableProjectsTable.ClientNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientAddressNull() As Boolean
            Return Me.IsNull(Me.tableProjectsTable.ClientAddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientAddressNull()
            Me(Me.tableProjectsTable.ClientAddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsContactPersonNull() As Boolean
            Return Me.IsNull(Me.tableProjectsTable.ContactPersonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetContactPersonNull()
            Me(Me.tableProjectsTable.ContactPersonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsContactPhoneNoNull() As Boolean
            Return Me.IsNull(Me.tableProjectsTable.ContactPhoneNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetContactPhoneNoNull()
            Me(Me.tableProjectsTable.ContactPhoneNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsContactEmailNull() As Boolean
            Return Me.IsNull(Me.tableProjectsTable.ContactEmailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetContactEmailNull()
            Me(Me.tableProjectsTable.ContactEmailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPlotNoNull() As Boolean
            Return Me.IsNull(Me.tableProjectsTable.PlotNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPlotNoNull()
            Me(Me.tableProjectsTable.PlotNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDateOfPourNull() As Boolean
            Return Me.IsNull(Me.tableProjectsTable.DateOfPourColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDateOfPourNull()
            Me(Me.tableProjectsTable.DateOfPourColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsStructureTypeNull() As Boolean
            Return Me.IsNull(Me.tableProjectsTable.StructureTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetStructureTypeNull()
            Me(Me.tableProjectsTable.StructureTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsProjectStartNull() As Boolean
            Return Me.IsNull(Me.tableProjectsTable.ProjectStartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetProjectStartNull()
            Me(Me.tableProjectsTable.ProjectStartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsProjectEndNull() As Boolean
            Return Me.IsNull(Me.tableProjectsTable.ProjectEndColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetProjectEndNull()
            Me(Me.tableProjectsTable.ProjectEndColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTimeOfPourNull() As Boolean
            Return Me.IsNull(Me.tableProjectsTable.TimeOfPourColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTimeOfPourNull()
            Me(Me.tableProjectsTable.TimeOfPourColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TableJoinRow
        Inherits Global.System.Data.DataRow
        
        Private tableTableJoin As TableJoinDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTableJoin = CType(Me.Table,TableJoinDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ProjectName() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.ProjectNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProjectName' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.ProjectNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ProjectAddress() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.ProjectAddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProjectAddress' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.ProjectAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property City() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.CityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'City' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.CityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property State() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.StateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'State' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.StateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Country() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.CountryColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Country' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.CountryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientName() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.ClientNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientName' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.ClientNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClientAddress() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.ClientAddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClientAddress' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.ClientAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ContactPerson() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.ContactPersonColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ContactPerson' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.ContactPersonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ContactPhoneNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.ContactPhoneNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ContactPhoneNo' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.ContactPhoneNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ContactEmail() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.ContactEmailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ContactEmail' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.ContactEmailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PlotNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.PlotNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PlotNo' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.PlotNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property StructureType() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.StructureTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StructureType' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.StructureTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BatchIdentificationNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.BatchIdentificationNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BatchIdentificationNo' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.BatchIdentificationNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NameOfSampler() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.NameOfSamplerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NameOfSampler' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.NameOfSamplerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BatchDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.BatchDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BatchDate' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.BatchDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BatchTime() As System.TimeSpan
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.BatchTimeColumn),Global.System.TimeSpan)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BatchTime' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.BatchTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Testdate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.TestdateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Testdate' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.TestdateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CuringConditions() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.CuringConditionsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CuringConditions' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.CuringConditionsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TestingLaboratory() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.TestingLaboratoryColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestingLaboratory' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.TestingLaboratoryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TestCertificate() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.TestCertificateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestCertificate' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.TestCertificateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SupplySource() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.SupplySourceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SupplySource' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.SupplySourceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ConcreteGrade() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.ConcreteGradeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConcreteGrade' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.ConcreteGradeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SpecificationOfConcreteMix() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.SpecificationOfConcreteMixColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SpecificationOfConcreteMix' in table 'TableJoin' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.SpecificationOfConcreteMixColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NoOfSpecimen() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.NoOfSpecimenColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NoOfSpecimen' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.NoOfSpecimenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SpecimenCondition() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.SpecimenConditionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SpecimenCondition' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.SpecimenConditionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MethodOfCompaction() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.MethodOfCompactionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MethodOfCompaction' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.MethodOfCompactionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DateDelivered() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.DateDeliveredColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateDelivered' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.DateDeliveredColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TestMethod() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.TestMethodColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestMethod' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.TestMethodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen1D() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Specimen1DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen1D' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Specimen1DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen2D() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Specimen2DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen2D' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Specimen2DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen3D() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Specimen3DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen3D' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Specimen3DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen4D() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Specimen4DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen4D' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Specimen4DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen5D() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Specimen5DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen5D' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Specimen5DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen6D() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Specimen6DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen6D' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Specimen6DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen7D() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Specimen7DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen7D' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Specimen7DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen8D() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Specimen8DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen8D' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Specimen8DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen9D() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Specimen9DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen9D' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Specimen9DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen10D() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Specimen10DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen10D' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Specimen10DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen1L() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Specimen1LColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen1L' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Specimen1LColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen2L() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Specimen2LColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen2L' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Specimen2LColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen3L() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Specimen3LColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen3L' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Specimen3LColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen4L() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Specimen4LColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen4L' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Specimen4LColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen5L() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Specimen5LColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen5L' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Specimen5LColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen6L() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Specimen6LColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen6L' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Specimen6LColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen7L() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Specimen7LColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen7L' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Specimen7LColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen8L() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Specimen8LColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen8L' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Specimen8LColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen9L() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Specimen9LColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen9L' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Specimen9LColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen10L() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Specimen10LColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen10L' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Specimen10LColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen1H() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Specimen1HColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen1H' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Specimen1HColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen2H() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Specimen2HColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen2H' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Specimen2HColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen3H() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Specimen3HColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen3H' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Specimen3HColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen4H() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Specimen4HColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen4H' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Specimen4HColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen5H() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Specimen5HColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen5H' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Specimen5HColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen6H() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Specimen6HColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen6H' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Specimen6HColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen7H() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Specimen7HColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen7H' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Specimen7HColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen8H() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Specimen8HColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen8H' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Specimen8HColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen9H() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Specimen9HColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen9H' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Specimen9HColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen10H() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Specimen10HColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen10H' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Specimen10HColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mass1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Mass1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mass1' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Mass1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mass2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Mass2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mass2' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Mass2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mass3() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Mass3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mass3' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Mass3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mass4() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Mass4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mass4' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Mass4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mass5() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Mass5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mass5' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Mass5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mass6() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Mass6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mass6' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Mass6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mass7() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Mass7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mass7' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Mass7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mass8() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Mass8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mass8' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Mass8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mass9() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Mass9Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mass9' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Mass9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mass10() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Mass10Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mass10' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Mass10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AveMass() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.AveMassColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AveMass' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.AveMassColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SubMergedMass1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.SubMergedMass1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubMergedMass1' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.SubMergedMass1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SubMergedMass2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.SubMergedMass2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubMergedMass2' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.SubMergedMass2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SubMergedMass3() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.SubMergedMass3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubMergedMass3' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.SubMergedMass3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SubMergedMass4() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.SubMergedMass4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubMergedMass4' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.SubMergedMass4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SubMergedMass5() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.SubMergedMass5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubMergedMass5' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.SubMergedMass5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SubMergedMass6() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.SubMergedMass6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubMergedMass6' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.SubMergedMass6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SubMergedMass7() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.SubMergedMass7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubMergedMass7' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.SubMergedMass7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SubMergedMass8() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.SubMergedMass8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubMergedMass8' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.SubMergedMass8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SubMergedMass9() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.SubMergedMass9Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubMergedMass9' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.SubMergedMass9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SubMergedMass10() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.SubMergedMass10Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubMergedMass10' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.SubMergedMass10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Density1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Density1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Density1' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Density1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Density2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Density2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Density2' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Density2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Density3() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Density3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Density3' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Density3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Density4() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Density4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Density4' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Density4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Density5() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Density5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Density5' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Density5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Density6() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Density6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Density6' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Density6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Density7() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Density7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Density7' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Density7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Density8() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Density8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Density8' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Density8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Density9() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Density9Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Density9' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Density9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Density10() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Density10Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Density10' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Density10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AveDensity() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.AveDensityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AveDensity' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.AveDensityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaxLoad1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.MaxLoad1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaxLoad1' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.MaxLoad1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaxLoad2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.MaxLoad2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaxLoad2' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.MaxLoad2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaxLoad3() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.MaxLoad3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaxLoad3' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.MaxLoad3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaxLoad4() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.MaxLoad4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaxLoad4' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.MaxLoad4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaxLoad5() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.MaxLoad5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaxLoad5' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.MaxLoad5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaxLoad6() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.MaxLoad6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaxLoad6' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.MaxLoad6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaxLoad7() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.MaxLoad7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaxLoad7' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.MaxLoad7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaxLoad8() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.MaxLoad8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaxLoad8' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.MaxLoad8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaxLoad9() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.MaxLoad9Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaxLoad9' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.MaxLoad9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaxLoad10() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.MaxLoad10Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaxLoad10' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.MaxLoad10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CompStrength1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.CompStrength1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompStrength1' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.CompStrength1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CompStrength2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.CompStrength2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompStrength2' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.CompStrength2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CompStrength3() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.CompStrength3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompStrength3' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.CompStrength3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CompStrength4() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.CompStrength4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompStrength4' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.CompStrength4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CompStrength5() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.CompStrength5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompStrength5' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.CompStrength5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CompStrength6() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.CompStrength6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompStrength6' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.CompStrength6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CompStrength7() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.CompStrength7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompStrength7' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.CompStrength7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CompStrength8() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.CompStrength8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompStrength8' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.CompStrength8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CompStrength9() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.CompStrength9Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompStrength9' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.CompStrength9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CompStrength10() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.CompStrength10Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompStrength10' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.CompStrength10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AveStrength() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.AveStrengthColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AveStrength' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.AveStrengthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FractureType1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.FractureType1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FractureType1' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.FractureType1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FractureType2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.FractureType2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FractureType2' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.FractureType2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FractureType3() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.FractureType3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FractureType3' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.FractureType3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FractureType4() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.FractureType4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FractureType4' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.FractureType4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FractureType5() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.FractureType5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FractureType5' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.FractureType5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FractureType6() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.FractureType6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FractureType6' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.FractureType6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FractureType7() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.FractureType7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FractureType7' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.FractureType7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FractureType8() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.FractureType8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FractureType8' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.FractureType8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FractureType9() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.FractureType9Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FractureType9' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.FractureType9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FractureType10() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.FractureType10Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FractureType10' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.FractureType10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property StructuralElement() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.StructuralElementColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StructuralElement' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.StructuralElementColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SpecimenShape() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.SpecimenShapeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SpecimenShape' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.SpecimenShapeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TestedBy() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.TestedByColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestedBy' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.TestedByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CheckedBy() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.CheckedByColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CheckedBy' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.CheckedByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ApprovedBy() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.ApprovedByColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ApprovedBy' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.ApprovedByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CheckedDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.CheckedDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CheckedDate' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.CheckedDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ApprovedDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.ApprovedDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ApprovedDate' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.ApprovedDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ProjectID() As Integer
            Get
                Return CType(Me(Me.tableTableJoin.ProjectIDColumn),Integer)
            End Get
            Set
                Me(Me.tableTableJoin.ProjectIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ProjectStart() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.ProjectStartColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProjectStart' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.ProjectStartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ProjectEnd() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.ProjectEndColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProjectEnd' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.ProjectEndColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Expr1() As Integer
            Get
                Return CType(Me(Me.tableTableJoin.Expr1Column),Integer)
            End Get
            Set
                Me(Me.tableTableJoin.Expr1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BatchId() As Integer
            Get
                Return CType(Me(Me.tableTableJoin.BatchIdColumn),Integer)
            End Get
            Set
                Me(Me.tableTableJoin.BatchIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Area1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Area1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Area1' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Area1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Area2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Area2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Area2' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Area2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Area3() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Area3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Area3' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Area3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Area4() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Area4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Area4' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Area4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Area5() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Area5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Area5' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Area5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Area6() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Area6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Area6' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Area6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Area7() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Area7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Area7' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Area7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Area8() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Area8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Area8' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Area8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Area9() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Area9Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Area9' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Area9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Area10() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.Area10Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Area10' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.Area10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SpecimenAge() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.SpecimenAgeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SpecimenAge' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.SpecimenAgeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Compliledby() As String
            Get
                Try 
                    Return CType(Me(Me.tableTableJoin.CompliledbyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Compliledby' in table 'TableJoin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTableJoin.CompliledbyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsProjectNameNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.ProjectNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetProjectNameNull()
            Me(Me.tableTableJoin.ProjectNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsProjectAddressNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.ProjectAddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetProjectAddressNull()
            Me(Me.tableTableJoin.ProjectAddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCityNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.CityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCityNull()
            Me(Me.tableTableJoin.CityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsStateNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.StateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetStateNull()
            Me(Me.tableTableJoin.StateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCountryNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.CountryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCountryNull()
            Me(Me.tableTableJoin.CountryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientNameNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.ClientNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientNameNull()
            Me(Me.tableTableJoin.ClientNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClientAddressNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.ClientAddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClientAddressNull()
            Me(Me.tableTableJoin.ClientAddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsContactPersonNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.ContactPersonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetContactPersonNull()
            Me(Me.tableTableJoin.ContactPersonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsContactPhoneNoNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.ContactPhoneNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetContactPhoneNoNull()
            Me(Me.tableTableJoin.ContactPhoneNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsContactEmailNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.ContactEmailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetContactEmailNull()
            Me(Me.tableTableJoin.ContactEmailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPlotNoNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.PlotNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPlotNoNull()
            Me(Me.tableTableJoin.PlotNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsStructureTypeNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.StructureTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetStructureTypeNull()
            Me(Me.tableTableJoin.StructureTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBatchIdentificationNoNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.BatchIdentificationNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBatchIdentificationNoNull()
            Me(Me.tableTableJoin.BatchIdentificationNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNameOfSamplerNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.NameOfSamplerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNameOfSamplerNull()
            Me(Me.tableTableJoin.NameOfSamplerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBatchDateNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.BatchDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBatchDateNull()
            Me(Me.tableTableJoin.BatchDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBatchTimeNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.BatchTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBatchTimeNull()
            Me(Me.tableTableJoin.BatchTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTestdateNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.TestdateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTestdateNull()
            Me(Me.tableTableJoin.TestdateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCuringConditionsNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.CuringConditionsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCuringConditionsNull()
            Me(Me.tableTableJoin.CuringConditionsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTestingLaboratoryNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.TestingLaboratoryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTestingLaboratoryNull()
            Me(Me.tableTableJoin.TestingLaboratoryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTestCertificateNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.TestCertificateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTestCertificateNull()
            Me(Me.tableTableJoin.TestCertificateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSupplySourceNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.SupplySourceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSupplySourceNull()
            Me(Me.tableTableJoin.SupplySourceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsConcreteGradeNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.ConcreteGradeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetConcreteGradeNull()
            Me(Me.tableTableJoin.ConcreteGradeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecificationOfConcreteMixNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.SpecificationOfConcreteMixColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecificationOfConcreteMixNull()
            Me(Me.tableTableJoin.SpecificationOfConcreteMixColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNoOfSpecimenNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.NoOfSpecimenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNoOfSpecimenNull()
            Me(Me.tableTableJoin.NoOfSpecimenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimenConditionNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.SpecimenConditionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimenConditionNull()
            Me(Me.tableTableJoin.SpecimenConditionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMethodOfCompactionNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.MethodOfCompactionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMethodOfCompactionNull()
            Me(Me.tableTableJoin.MethodOfCompactionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDateDeliveredNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.DateDeliveredColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDateDeliveredNull()
            Me(Me.tableTableJoin.DateDeliveredColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTestMethodNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.TestMethodColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTestMethodNull()
            Me(Me.tableTableJoin.TestMethodColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen1DNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Specimen1DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen1DNull()
            Me(Me.tableTableJoin.Specimen1DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen2DNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Specimen2DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen2DNull()
            Me(Me.tableTableJoin.Specimen2DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen3DNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Specimen3DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen3DNull()
            Me(Me.tableTableJoin.Specimen3DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen4DNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Specimen4DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen4DNull()
            Me(Me.tableTableJoin.Specimen4DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen5DNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Specimen5DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen5DNull()
            Me(Me.tableTableJoin.Specimen5DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen6DNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Specimen6DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen6DNull()
            Me(Me.tableTableJoin.Specimen6DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen7DNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Specimen7DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen7DNull()
            Me(Me.tableTableJoin.Specimen7DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen8DNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Specimen8DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen8DNull()
            Me(Me.tableTableJoin.Specimen8DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen9DNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Specimen9DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen9DNull()
            Me(Me.tableTableJoin.Specimen9DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen10DNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Specimen10DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen10DNull()
            Me(Me.tableTableJoin.Specimen10DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen1LNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Specimen1LColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen1LNull()
            Me(Me.tableTableJoin.Specimen1LColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen2LNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Specimen2LColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen2LNull()
            Me(Me.tableTableJoin.Specimen2LColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen3LNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Specimen3LColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen3LNull()
            Me(Me.tableTableJoin.Specimen3LColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen4LNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Specimen4LColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen4LNull()
            Me(Me.tableTableJoin.Specimen4LColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen5LNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Specimen5LColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen5LNull()
            Me(Me.tableTableJoin.Specimen5LColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen6LNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Specimen6LColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen6LNull()
            Me(Me.tableTableJoin.Specimen6LColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen7LNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Specimen7LColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen7LNull()
            Me(Me.tableTableJoin.Specimen7LColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen8LNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Specimen8LColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen8LNull()
            Me(Me.tableTableJoin.Specimen8LColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen9LNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Specimen9LColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen9LNull()
            Me(Me.tableTableJoin.Specimen9LColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen10LNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Specimen10LColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen10LNull()
            Me(Me.tableTableJoin.Specimen10LColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen1HNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Specimen1HColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen1HNull()
            Me(Me.tableTableJoin.Specimen1HColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen2HNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Specimen2HColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen2HNull()
            Me(Me.tableTableJoin.Specimen2HColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen3HNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Specimen3HColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen3HNull()
            Me(Me.tableTableJoin.Specimen3HColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen4HNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Specimen4HColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen4HNull()
            Me(Me.tableTableJoin.Specimen4HColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen5HNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Specimen5HColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen5HNull()
            Me(Me.tableTableJoin.Specimen5HColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen6HNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Specimen6HColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen6HNull()
            Me(Me.tableTableJoin.Specimen6HColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen7HNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Specimen7HColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen7HNull()
            Me(Me.tableTableJoin.Specimen7HColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen8HNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Specimen8HColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen8HNull()
            Me(Me.tableTableJoin.Specimen8HColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen9HNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Specimen9HColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen9HNull()
            Me(Me.tableTableJoin.Specimen9HColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen10HNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Specimen10HColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen10HNull()
            Me(Me.tableTableJoin.Specimen10HColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMass1Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Mass1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMass1Null()
            Me(Me.tableTableJoin.Mass1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMass2Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Mass2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMass2Null()
            Me(Me.tableTableJoin.Mass2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMass3Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Mass3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMass3Null()
            Me(Me.tableTableJoin.Mass3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMass4Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Mass4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMass4Null()
            Me(Me.tableTableJoin.Mass4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMass5Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Mass5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMass5Null()
            Me(Me.tableTableJoin.Mass5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMass6Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Mass6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMass6Null()
            Me(Me.tableTableJoin.Mass6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMass7Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Mass7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMass7Null()
            Me(Me.tableTableJoin.Mass7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMass8Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Mass8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMass8Null()
            Me(Me.tableTableJoin.Mass8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMass9Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Mass9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMass9Null()
            Me(Me.tableTableJoin.Mass9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMass10Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Mass10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMass10Null()
            Me(Me.tableTableJoin.Mass10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAveMassNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.AveMassColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAveMassNull()
            Me(Me.tableTableJoin.AveMassColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSubMergedMass1Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.SubMergedMass1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSubMergedMass1Null()
            Me(Me.tableTableJoin.SubMergedMass1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSubMergedMass2Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.SubMergedMass2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSubMergedMass2Null()
            Me(Me.tableTableJoin.SubMergedMass2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSubMergedMass3Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.SubMergedMass3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSubMergedMass3Null()
            Me(Me.tableTableJoin.SubMergedMass3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSubMergedMass4Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.SubMergedMass4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSubMergedMass4Null()
            Me(Me.tableTableJoin.SubMergedMass4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSubMergedMass5Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.SubMergedMass5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSubMergedMass5Null()
            Me(Me.tableTableJoin.SubMergedMass5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSubMergedMass6Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.SubMergedMass6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSubMergedMass6Null()
            Me(Me.tableTableJoin.SubMergedMass6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSubMergedMass7Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.SubMergedMass7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSubMergedMass7Null()
            Me(Me.tableTableJoin.SubMergedMass7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSubMergedMass8Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.SubMergedMass8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSubMergedMass8Null()
            Me(Me.tableTableJoin.SubMergedMass8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSubMergedMass9Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.SubMergedMass9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSubMergedMass9Null()
            Me(Me.tableTableJoin.SubMergedMass9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSubMergedMass10Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.SubMergedMass10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSubMergedMass10Null()
            Me(Me.tableTableJoin.SubMergedMass10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDensity1Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Density1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDensity1Null()
            Me(Me.tableTableJoin.Density1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDensity2Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Density2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDensity2Null()
            Me(Me.tableTableJoin.Density2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDensity3Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Density3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDensity3Null()
            Me(Me.tableTableJoin.Density3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDensity4Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Density4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDensity4Null()
            Me(Me.tableTableJoin.Density4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDensity5Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Density5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDensity5Null()
            Me(Me.tableTableJoin.Density5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDensity6Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Density6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDensity6Null()
            Me(Me.tableTableJoin.Density6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDensity7Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Density7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDensity7Null()
            Me(Me.tableTableJoin.Density7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDensity8Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Density8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDensity8Null()
            Me(Me.tableTableJoin.Density8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDensity9Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Density9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDensity9Null()
            Me(Me.tableTableJoin.Density9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDensity10Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Density10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDensity10Null()
            Me(Me.tableTableJoin.Density10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAveDensityNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.AveDensityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAveDensityNull()
            Me(Me.tableTableJoin.AveDensityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaxLoad1Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.MaxLoad1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaxLoad1Null()
            Me(Me.tableTableJoin.MaxLoad1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaxLoad2Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.MaxLoad2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaxLoad2Null()
            Me(Me.tableTableJoin.MaxLoad2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaxLoad3Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.MaxLoad3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaxLoad3Null()
            Me(Me.tableTableJoin.MaxLoad3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaxLoad4Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.MaxLoad4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaxLoad4Null()
            Me(Me.tableTableJoin.MaxLoad4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaxLoad5Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.MaxLoad5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaxLoad5Null()
            Me(Me.tableTableJoin.MaxLoad5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaxLoad6Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.MaxLoad6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaxLoad6Null()
            Me(Me.tableTableJoin.MaxLoad6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaxLoad7Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.MaxLoad7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaxLoad7Null()
            Me(Me.tableTableJoin.MaxLoad7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaxLoad8Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.MaxLoad8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaxLoad8Null()
            Me(Me.tableTableJoin.MaxLoad8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaxLoad9Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.MaxLoad9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaxLoad9Null()
            Me(Me.tableTableJoin.MaxLoad9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaxLoad10Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.MaxLoad10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaxLoad10Null()
            Me(Me.tableTableJoin.MaxLoad10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCompStrength1Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.CompStrength1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCompStrength1Null()
            Me(Me.tableTableJoin.CompStrength1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCompStrength2Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.CompStrength2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCompStrength2Null()
            Me(Me.tableTableJoin.CompStrength2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCompStrength3Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.CompStrength3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCompStrength3Null()
            Me(Me.tableTableJoin.CompStrength3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCompStrength4Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.CompStrength4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCompStrength4Null()
            Me(Me.tableTableJoin.CompStrength4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCompStrength5Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.CompStrength5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCompStrength5Null()
            Me(Me.tableTableJoin.CompStrength5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCompStrength6Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.CompStrength6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCompStrength6Null()
            Me(Me.tableTableJoin.CompStrength6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCompStrength7Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.CompStrength7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCompStrength7Null()
            Me(Me.tableTableJoin.CompStrength7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCompStrength8Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.CompStrength8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCompStrength8Null()
            Me(Me.tableTableJoin.CompStrength8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCompStrength9Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.CompStrength9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCompStrength9Null()
            Me(Me.tableTableJoin.CompStrength9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCompStrength10Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.CompStrength10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCompStrength10Null()
            Me(Me.tableTableJoin.CompStrength10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAveStrengthNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.AveStrengthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAveStrengthNull()
            Me(Me.tableTableJoin.AveStrengthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFractureType1Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.FractureType1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFractureType1Null()
            Me(Me.tableTableJoin.FractureType1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFractureType2Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.FractureType2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFractureType2Null()
            Me(Me.tableTableJoin.FractureType2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFractureType3Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.FractureType3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFractureType3Null()
            Me(Me.tableTableJoin.FractureType3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFractureType4Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.FractureType4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFractureType4Null()
            Me(Me.tableTableJoin.FractureType4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFractureType5Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.FractureType5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFractureType5Null()
            Me(Me.tableTableJoin.FractureType5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFractureType6Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.FractureType6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFractureType6Null()
            Me(Me.tableTableJoin.FractureType6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFractureType7Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.FractureType7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFractureType7Null()
            Me(Me.tableTableJoin.FractureType7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFractureType8Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.FractureType8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFractureType8Null()
            Me(Me.tableTableJoin.FractureType8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFractureType9Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.FractureType9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFractureType9Null()
            Me(Me.tableTableJoin.FractureType9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFractureType10Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.FractureType10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFractureType10Null()
            Me(Me.tableTableJoin.FractureType10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsStructuralElementNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.StructuralElementColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetStructuralElementNull()
            Me(Me.tableTableJoin.StructuralElementColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimenShapeNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.SpecimenShapeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimenShapeNull()
            Me(Me.tableTableJoin.SpecimenShapeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTestedByNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.TestedByColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTestedByNull()
            Me(Me.tableTableJoin.TestedByColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCheckedByNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.CheckedByColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCheckedByNull()
            Me(Me.tableTableJoin.CheckedByColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsApprovedByNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.ApprovedByColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetApprovedByNull()
            Me(Me.tableTableJoin.ApprovedByColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCheckedDateNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.CheckedDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCheckedDateNull()
            Me(Me.tableTableJoin.CheckedDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsApprovedDateNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.ApprovedDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetApprovedDateNull()
            Me(Me.tableTableJoin.ApprovedDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsProjectStartNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.ProjectStartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetProjectStartNull()
            Me(Me.tableTableJoin.ProjectStartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsProjectEndNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.ProjectEndColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetProjectEndNull()
            Me(Me.tableTableJoin.ProjectEndColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsArea1Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Area1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetArea1Null()
            Me(Me.tableTableJoin.Area1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsArea2Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Area2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetArea2Null()
            Me(Me.tableTableJoin.Area2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsArea3Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Area3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetArea3Null()
            Me(Me.tableTableJoin.Area3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsArea4Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Area4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetArea4Null()
            Me(Me.tableTableJoin.Area4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsArea5Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Area5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetArea5Null()
            Me(Me.tableTableJoin.Area5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsArea6Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Area6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetArea6Null()
            Me(Me.tableTableJoin.Area6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsArea7Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Area7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetArea7Null()
            Me(Me.tableTableJoin.Area7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsArea8Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Area8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetArea8Null()
            Me(Me.tableTableJoin.Area8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsArea9Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Area9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetArea9Null()
            Me(Me.tableTableJoin.Area9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsArea10Null() As Boolean
            Return Me.IsNull(Me.tableTableJoin.Area10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetArea10Null()
            Me(Me.tableTableJoin.Area10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimenAgeNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.SpecimenAgeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimenAgeNull()
            Me(Me.tableTableJoin.SpecimenAgeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCompliledbyNull() As Boolean
            Return Me.IsNull(Me.tableTableJoin.CompliledbyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCompliledbyNull()
            Me(Me.tableTableJoin.CompliledbyColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class UserstableRow
        Inherits Global.System.Data.DataRow
        
        Private tableUserstable As UserstableDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableUserstable = CType(Me.Table,UserstableDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UserID() As Integer
            Get
                Return CType(Me(Me.tableUserstable.UserIDColumn),Integer)
            End Get
            Set
                Me(Me.tableUserstable.UserIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Designation() As String
            Get
                Try 
                    Return CType(Me(Me.tableUserstable.DesignationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Designation' in table 'Userstable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUserstable.DesignationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FirstName() As String
            Get
                Try 
                    Return CType(Me(Me.tableUserstable.FirstNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FirstName' in table 'Userstable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUserstable.FirstNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LastName() As String
            Get
                Try 
                    Return CType(Me(Me.tableUserstable.LastNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LastName' in table 'Userstable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUserstable.LastNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Password() As String
            Get
                Try 
                    Return CType(Me(Me.tableUserstable.PasswordColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Password' in table 'Userstable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUserstable.PasswordColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UserName() As String
            Get
                Try 
                    Return CType(Me(Me.tableUserstable.UserNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UserName' in table 'Userstable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUserstable.UserNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Status() As String
            Get
                Try 
                    Return CType(Me(Me.tableUserstable.StatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Status' in table 'Userstable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUserstable.StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UserPhoto() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableUserstable.UserPhotoColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UserPhoto' in table 'Userstable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUserstable.UserPhotoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDesignationNull() As Boolean
            Return Me.IsNull(Me.tableUserstable.DesignationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDesignationNull()
            Me(Me.tableUserstable.DesignationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFirstNameNull() As Boolean
            Return Me.IsNull(Me.tableUserstable.FirstNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFirstNameNull()
            Me(Me.tableUserstable.FirstNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLastNameNull() As Boolean
            Return Me.IsNull(Me.tableUserstable.LastNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLastNameNull()
            Me(Me.tableUserstable.LastNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPasswordNull() As Boolean
            Return Me.IsNull(Me.tableUserstable.PasswordColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPasswordNull()
            Me(Me.tableUserstable.PasswordColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUserNameNull() As Boolean
            Return Me.IsNull(Me.tableUserstable.UserNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUserNameNull()
            Me(Me.tableUserstable.UserNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsStatusNull() As Boolean
            Return Me.IsNull(Me.tableUserstable.StatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetStatusNull()
            Me(Me.tableUserstable.StatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUserPhotoNull() As Boolean
            Return Me.IsNull(Me.tableUserstable.UserPhotoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUserPhotoNull()
            Me(Me.tableUserstable.UserPhotoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class BatchTableRow
        Inherits Global.System.Data.DataRow
        
        Private tableBatchTable As BatchTableDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableBatchTable = CType(Me.Table,BatchTableDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ProjectID() As Integer
            Get
                Return CType(Me(Me.tableBatchTable.ProjectIDColumn),Integer)
            End Get
            Set
                Me(Me.tableBatchTable.ProjectIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BatchId() As Integer
            Get
                Return CType(Me(Me.tableBatchTable.BatchIdColumn),Integer)
            End Get
            Set
                Me(Me.tableBatchTable.BatchIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BatchIdentificationNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.BatchIdentificationNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BatchIdentificationNo' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.BatchIdentificationNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NameOfSampler() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.NameOfSamplerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NameOfSampler' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.NameOfSamplerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BatchDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.BatchDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BatchDate' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.BatchDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BatchTime() As System.TimeSpan
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.BatchTimeColumn),Global.System.TimeSpan)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BatchTime' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.BatchTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Testdate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.TestdateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Testdate' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.TestdateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CuringConditions() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.CuringConditionsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CuringConditions' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.CuringConditionsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TestingLaboratory() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.TestingLaboratoryColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestingLaboratory' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.TestingLaboratoryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TestCertificate() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.TestCertificateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestCertificate' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.TestCertificateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SupplySource() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.SupplySourceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SupplySource' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.SupplySourceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ConcreteGrade() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.ConcreteGradeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConcreteGrade' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.ConcreteGradeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SpecificationOfConcreteMix() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.SpecificationOfConcreteMixColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SpecificationOfConcreteMix' in table 'BatchTable' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.SpecificationOfConcreteMixColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NoOfSpecimen() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.NoOfSpecimenColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NoOfSpecimen' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.NoOfSpecimenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SpecimenCondition() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.SpecimenConditionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SpecimenCondition' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.SpecimenConditionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MethodOfCompaction() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.MethodOfCompactionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MethodOfCompaction' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.MethodOfCompactionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DateDelivered() As Date
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.DateDeliveredColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateDelivered' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.DateDeliveredColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TestMethod() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.TestMethodColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestMethod' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.TestMethodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen1D() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Specimen1DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen1D' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Specimen1DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen2D() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Specimen2DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen2D' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Specimen2DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen3D() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Specimen3DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen3D' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Specimen3DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen4D() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Specimen4DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen4D' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Specimen4DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen5D() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Specimen5DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen5D' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Specimen5DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen6D() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Specimen6DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen6D' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Specimen6DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen7D() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Specimen7DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen7D' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Specimen7DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen8D() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Specimen8DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen8D' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Specimen8DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen9D() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Specimen9DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen9D' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Specimen9DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen10D() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Specimen10DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen10D' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Specimen10DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen1L() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Specimen1LColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen1L' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Specimen1LColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen2L() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Specimen2LColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen2L' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Specimen2LColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen3L() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Specimen3LColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen3L' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Specimen3LColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen4L() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Specimen4LColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen4L' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Specimen4LColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen5L() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Specimen5LColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen5L' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Specimen5LColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen6L() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Specimen6LColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen6L' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Specimen6LColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen7L() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Specimen7LColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen7L' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Specimen7LColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen8L() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Specimen8LColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen8L' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Specimen8LColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen9L() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Specimen9LColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen9L' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Specimen9LColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen10L() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Specimen10LColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen10L' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Specimen10LColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen1H() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Specimen1HColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen1H' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Specimen1HColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen2H() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Specimen2HColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen2H' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Specimen2HColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen3H() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Specimen3HColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen3H' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Specimen3HColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen4H() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Specimen4HColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen4H' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Specimen4HColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen5H() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Specimen5HColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen5H' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Specimen5HColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen6H() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Specimen6HColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen6H' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Specimen6HColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen7H() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Specimen7HColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen7H' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Specimen7HColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen8H() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Specimen8HColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen8H' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Specimen8HColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen9H() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Specimen9HColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen9H' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Specimen9HColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Specimen10H() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Specimen10HColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specimen10H' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Specimen10HColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mass1() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Mass1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mass1' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Mass1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mass2() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Mass2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mass2' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Mass2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mass3() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Mass3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mass3' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Mass3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mass4() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Mass4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mass4' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Mass4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mass5() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Mass5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mass5' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Mass5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mass6() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Mass6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mass6' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Mass6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mass7() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Mass7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mass7' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Mass7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mass8() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Mass8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mass8' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Mass8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mass9() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Mass9Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mass9' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Mass9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mass10() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Mass10Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mass10' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Mass10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AveMass() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.AveMassColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AveMass' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.AveMassColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SubMergedMass1() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.SubMergedMass1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubMergedMass1' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.SubMergedMass1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SubMergedMass2() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.SubMergedMass2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubMergedMass2' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.SubMergedMass2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SubMergedMass3() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.SubMergedMass3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubMergedMass3' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.SubMergedMass3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SubMergedMass4() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.SubMergedMass4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubMergedMass4' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.SubMergedMass4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SubMergedMass5() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.SubMergedMass5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubMergedMass5' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.SubMergedMass5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SubMergedMass6() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.SubMergedMass6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubMergedMass6' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.SubMergedMass6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SubMergedMass7() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.SubMergedMass7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubMergedMass7' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.SubMergedMass7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SubMergedMass8() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.SubMergedMass8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubMergedMass8' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.SubMergedMass8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SubMergedMass9() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.SubMergedMass9Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubMergedMass9' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.SubMergedMass9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SubMergedMass10() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.SubMergedMass10Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubMergedMass10' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.SubMergedMass10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Density1() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Density1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Density1' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Density1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Density2() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Density2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Density2' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Density2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Density3() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Density3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Density3' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Density3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Density4() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Density4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Density4' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Density4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Density5() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Density5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Density5' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Density5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Density6() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Density6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Density6' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Density6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Density7() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Density7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Density7' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Density7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Density8() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Density8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Density8' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Density8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Density9() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Density9Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Density9' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Density9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Density10() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Density10Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Density10' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Density10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AveDensity() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.AveDensityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AveDensity' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.AveDensityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaxLoad1() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.MaxLoad1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaxLoad1' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.MaxLoad1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaxLoad2() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.MaxLoad2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaxLoad2' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.MaxLoad2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaxLoad3() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.MaxLoad3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaxLoad3' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.MaxLoad3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaxLoad4() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.MaxLoad4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaxLoad4' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.MaxLoad4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaxLoad5() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.MaxLoad5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaxLoad5' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.MaxLoad5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaxLoad6() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.MaxLoad6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaxLoad6' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.MaxLoad6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaxLoad7() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.MaxLoad7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaxLoad7' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.MaxLoad7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaxLoad8() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.MaxLoad8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaxLoad8' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.MaxLoad8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaxLoad9() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.MaxLoad9Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaxLoad9' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.MaxLoad9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MaxLoad10() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.MaxLoad10Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaxLoad10' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.MaxLoad10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CompStrength1() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.CompStrength1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompStrength1' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.CompStrength1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CompStrength2() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.CompStrength2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompStrength2' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.CompStrength2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CompStrength3() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.CompStrength3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompStrength3' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.CompStrength3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CompStrength4() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.CompStrength4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompStrength4' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.CompStrength4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CompStrength5() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.CompStrength5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompStrength5' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.CompStrength5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CompStrength6() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.CompStrength6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompStrength6' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.CompStrength6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CompStrength7() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.CompStrength7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompStrength7' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.CompStrength7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CompStrength8() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.CompStrength8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompStrength8' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.CompStrength8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CompStrength9() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.CompStrength9Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompStrength9' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.CompStrength9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CompStrength10() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.CompStrength10Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompStrength10' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.CompStrength10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AveStrength() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.AveStrengthColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AveStrength' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.AveStrengthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FractureType1() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.FractureType1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FractureType1' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.FractureType1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FractureType2() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.FractureType2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FractureType2' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.FractureType2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FractureType3() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.FractureType3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FractureType3' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.FractureType3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FractureType4() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.FractureType4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FractureType4' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.FractureType4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FractureType5() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.FractureType5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FractureType5' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.FractureType5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FractureType6() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.FractureType6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FractureType6' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.FractureType6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FractureType7() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.FractureType7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FractureType7' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.FractureType7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FractureType8() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.FractureType8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FractureType8' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.FractureType8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FractureType9() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.FractureType9Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FractureType9' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.FractureType9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FractureType10() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.FractureType10Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FractureType10' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.FractureType10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SpecimenAge() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.SpecimenAgeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SpecimenAge' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.SpecimenAgeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property StructuralElement() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.StructuralElementColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StructuralElement' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.StructuralElementColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SpecimenShape() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.SpecimenShapeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SpecimenShape' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.SpecimenShapeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TestedBy() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.TestedByColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestedBy' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.TestedByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CheckedBy() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.CheckedByColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CheckedBy' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.CheckedByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ApprovedBy() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.ApprovedByColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ApprovedBy' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.ApprovedByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CheckedDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.CheckedDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CheckedDate' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.CheckedDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ApprovedDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.ApprovedDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ApprovedDate' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.ApprovedDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Area1() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Area1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Area1' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Area1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Area2() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Area2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Area2' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Area2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Area3() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Area3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Area3' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Area3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Area4() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Area4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Area4' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Area4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Area5() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Area5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Area5' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Area5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Area6() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Area6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Area6' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Area6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Area7() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Area7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Area7' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Area7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Area8() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Area8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Area8' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Area8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Area9() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Area9Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Area9' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Area9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Area10() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.Area10Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Area10' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.Area10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Compliledby() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable.CompliledbyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Compliledby' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable.CompliledbyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _1() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable._1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column '1' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable._1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _2() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable._2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column '2' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable._2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _3() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable._3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column '3' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable._3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _4() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable._4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column '4' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable._4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _5() As String
            Get
                Try 
                    Return CType(Me(Me.tableBatchTable._5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column '5' in table 'BatchTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBatchTable._5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBatchIdentificationNoNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.BatchIdentificationNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBatchIdentificationNoNull()
            Me(Me.tableBatchTable.BatchIdentificationNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNameOfSamplerNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.NameOfSamplerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNameOfSamplerNull()
            Me(Me.tableBatchTable.NameOfSamplerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBatchDateNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.BatchDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBatchDateNull()
            Me(Me.tableBatchTable.BatchDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBatchTimeNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.BatchTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBatchTimeNull()
            Me(Me.tableBatchTable.BatchTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTestdateNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.TestdateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTestdateNull()
            Me(Me.tableBatchTable.TestdateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCuringConditionsNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.CuringConditionsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCuringConditionsNull()
            Me(Me.tableBatchTable.CuringConditionsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTestingLaboratoryNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.TestingLaboratoryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTestingLaboratoryNull()
            Me(Me.tableBatchTable.TestingLaboratoryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTestCertificateNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.TestCertificateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTestCertificateNull()
            Me(Me.tableBatchTable.TestCertificateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSupplySourceNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.SupplySourceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSupplySourceNull()
            Me(Me.tableBatchTable.SupplySourceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsConcreteGradeNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.ConcreteGradeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetConcreteGradeNull()
            Me(Me.tableBatchTable.ConcreteGradeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecificationOfConcreteMixNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.SpecificationOfConcreteMixColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecificationOfConcreteMixNull()
            Me(Me.tableBatchTable.SpecificationOfConcreteMixColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNoOfSpecimenNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.NoOfSpecimenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNoOfSpecimenNull()
            Me(Me.tableBatchTable.NoOfSpecimenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimenConditionNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.SpecimenConditionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimenConditionNull()
            Me(Me.tableBatchTable.SpecimenConditionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMethodOfCompactionNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.MethodOfCompactionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMethodOfCompactionNull()
            Me(Me.tableBatchTable.MethodOfCompactionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDateDeliveredNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.DateDeliveredColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDateDeliveredNull()
            Me(Me.tableBatchTable.DateDeliveredColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTestMethodNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.TestMethodColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTestMethodNull()
            Me(Me.tableBatchTable.TestMethodColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen1DNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Specimen1DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen1DNull()
            Me(Me.tableBatchTable.Specimen1DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen2DNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Specimen2DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen2DNull()
            Me(Me.tableBatchTable.Specimen2DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen3DNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Specimen3DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen3DNull()
            Me(Me.tableBatchTable.Specimen3DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen4DNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Specimen4DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen4DNull()
            Me(Me.tableBatchTable.Specimen4DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen5DNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Specimen5DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen5DNull()
            Me(Me.tableBatchTable.Specimen5DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen6DNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Specimen6DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen6DNull()
            Me(Me.tableBatchTable.Specimen6DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen7DNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Specimen7DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen7DNull()
            Me(Me.tableBatchTable.Specimen7DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen8DNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Specimen8DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen8DNull()
            Me(Me.tableBatchTable.Specimen8DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen9DNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Specimen9DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen9DNull()
            Me(Me.tableBatchTable.Specimen9DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen10DNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Specimen10DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen10DNull()
            Me(Me.tableBatchTable.Specimen10DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen1LNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Specimen1LColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen1LNull()
            Me(Me.tableBatchTable.Specimen1LColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen2LNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Specimen2LColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen2LNull()
            Me(Me.tableBatchTable.Specimen2LColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen3LNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Specimen3LColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen3LNull()
            Me(Me.tableBatchTable.Specimen3LColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen4LNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Specimen4LColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen4LNull()
            Me(Me.tableBatchTable.Specimen4LColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen5LNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Specimen5LColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen5LNull()
            Me(Me.tableBatchTable.Specimen5LColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen6LNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Specimen6LColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen6LNull()
            Me(Me.tableBatchTable.Specimen6LColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen7LNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Specimen7LColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen7LNull()
            Me(Me.tableBatchTable.Specimen7LColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen8LNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Specimen8LColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen8LNull()
            Me(Me.tableBatchTable.Specimen8LColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen9LNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Specimen9LColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen9LNull()
            Me(Me.tableBatchTable.Specimen9LColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen10LNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Specimen10LColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen10LNull()
            Me(Me.tableBatchTable.Specimen10LColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen1HNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Specimen1HColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen1HNull()
            Me(Me.tableBatchTable.Specimen1HColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen2HNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Specimen2HColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen2HNull()
            Me(Me.tableBatchTable.Specimen2HColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen3HNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Specimen3HColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen3HNull()
            Me(Me.tableBatchTable.Specimen3HColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen4HNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Specimen4HColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen4HNull()
            Me(Me.tableBatchTable.Specimen4HColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen5HNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Specimen5HColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen5HNull()
            Me(Me.tableBatchTable.Specimen5HColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen6HNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Specimen6HColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen6HNull()
            Me(Me.tableBatchTable.Specimen6HColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen7HNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Specimen7HColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen7HNull()
            Me(Me.tableBatchTable.Specimen7HColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen8HNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Specimen8HColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen8HNull()
            Me(Me.tableBatchTable.Specimen8HColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen9HNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Specimen9HColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen9HNull()
            Me(Me.tableBatchTable.Specimen9HColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimen10HNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Specimen10HColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimen10HNull()
            Me(Me.tableBatchTable.Specimen10HColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMass1Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Mass1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMass1Null()
            Me(Me.tableBatchTable.Mass1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMass2Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Mass2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMass2Null()
            Me(Me.tableBatchTable.Mass2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMass3Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Mass3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMass3Null()
            Me(Me.tableBatchTable.Mass3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMass4Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Mass4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMass4Null()
            Me(Me.tableBatchTable.Mass4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMass5Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Mass5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMass5Null()
            Me(Me.tableBatchTable.Mass5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMass6Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Mass6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMass6Null()
            Me(Me.tableBatchTable.Mass6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMass7Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Mass7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMass7Null()
            Me(Me.tableBatchTable.Mass7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMass8Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Mass8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMass8Null()
            Me(Me.tableBatchTable.Mass8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMass9Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Mass9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMass9Null()
            Me(Me.tableBatchTable.Mass9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMass10Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Mass10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMass10Null()
            Me(Me.tableBatchTable.Mass10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAveMassNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.AveMassColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAveMassNull()
            Me(Me.tableBatchTable.AveMassColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSubMergedMass1Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.SubMergedMass1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSubMergedMass1Null()
            Me(Me.tableBatchTable.SubMergedMass1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSubMergedMass2Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.SubMergedMass2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSubMergedMass2Null()
            Me(Me.tableBatchTable.SubMergedMass2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSubMergedMass3Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.SubMergedMass3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSubMergedMass3Null()
            Me(Me.tableBatchTable.SubMergedMass3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSubMergedMass4Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.SubMergedMass4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSubMergedMass4Null()
            Me(Me.tableBatchTable.SubMergedMass4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSubMergedMass5Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.SubMergedMass5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSubMergedMass5Null()
            Me(Me.tableBatchTable.SubMergedMass5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSubMergedMass6Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.SubMergedMass6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSubMergedMass6Null()
            Me(Me.tableBatchTable.SubMergedMass6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSubMergedMass7Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.SubMergedMass7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSubMergedMass7Null()
            Me(Me.tableBatchTable.SubMergedMass7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSubMergedMass8Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.SubMergedMass8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSubMergedMass8Null()
            Me(Me.tableBatchTable.SubMergedMass8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSubMergedMass9Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.SubMergedMass9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSubMergedMass9Null()
            Me(Me.tableBatchTable.SubMergedMass9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSubMergedMass10Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.SubMergedMass10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSubMergedMass10Null()
            Me(Me.tableBatchTable.SubMergedMass10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDensity1Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Density1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDensity1Null()
            Me(Me.tableBatchTable.Density1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDensity2Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Density2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDensity2Null()
            Me(Me.tableBatchTable.Density2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDensity3Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Density3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDensity3Null()
            Me(Me.tableBatchTable.Density3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDensity4Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Density4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDensity4Null()
            Me(Me.tableBatchTable.Density4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDensity5Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Density5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDensity5Null()
            Me(Me.tableBatchTable.Density5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDensity6Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Density6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDensity6Null()
            Me(Me.tableBatchTable.Density6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDensity7Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Density7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDensity7Null()
            Me(Me.tableBatchTable.Density7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDensity8Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Density8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDensity8Null()
            Me(Me.tableBatchTable.Density8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDensity9Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Density9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDensity9Null()
            Me(Me.tableBatchTable.Density9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDensity10Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Density10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDensity10Null()
            Me(Me.tableBatchTable.Density10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAveDensityNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.AveDensityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAveDensityNull()
            Me(Me.tableBatchTable.AveDensityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaxLoad1Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.MaxLoad1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaxLoad1Null()
            Me(Me.tableBatchTable.MaxLoad1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaxLoad2Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.MaxLoad2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaxLoad2Null()
            Me(Me.tableBatchTable.MaxLoad2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaxLoad3Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.MaxLoad3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaxLoad3Null()
            Me(Me.tableBatchTable.MaxLoad3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaxLoad4Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.MaxLoad4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaxLoad4Null()
            Me(Me.tableBatchTable.MaxLoad4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaxLoad5Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.MaxLoad5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaxLoad5Null()
            Me(Me.tableBatchTable.MaxLoad5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaxLoad6Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.MaxLoad6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaxLoad6Null()
            Me(Me.tableBatchTable.MaxLoad6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaxLoad7Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.MaxLoad7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaxLoad7Null()
            Me(Me.tableBatchTable.MaxLoad7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaxLoad8Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.MaxLoad8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaxLoad8Null()
            Me(Me.tableBatchTable.MaxLoad8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaxLoad9Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.MaxLoad9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaxLoad9Null()
            Me(Me.tableBatchTable.MaxLoad9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMaxLoad10Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.MaxLoad10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMaxLoad10Null()
            Me(Me.tableBatchTable.MaxLoad10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCompStrength1Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.CompStrength1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCompStrength1Null()
            Me(Me.tableBatchTable.CompStrength1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCompStrength2Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.CompStrength2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCompStrength2Null()
            Me(Me.tableBatchTable.CompStrength2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCompStrength3Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.CompStrength3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCompStrength3Null()
            Me(Me.tableBatchTable.CompStrength3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCompStrength4Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.CompStrength4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCompStrength4Null()
            Me(Me.tableBatchTable.CompStrength4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCompStrength5Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.CompStrength5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCompStrength5Null()
            Me(Me.tableBatchTable.CompStrength5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCompStrength6Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.CompStrength6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCompStrength6Null()
            Me(Me.tableBatchTable.CompStrength6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCompStrength7Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.CompStrength7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCompStrength7Null()
            Me(Me.tableBatchTable.CompStrength7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCompStrength8Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.CompStrength8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCompStrength8Null()
            Me(Me.tableBatchTable.CompStrength8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCompStrength9Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.CompStrength9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCompStrength9Null()
            Me(Me.tableBatchTable.CompStrength9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCompStrength10Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.CompStrength10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCompStrength10Null()
            Me(Me.tableBatchTable.CompStrength10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAveStrengthNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.AveStrengthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAveStrengthNull()
            Me(Me.tableBatchTable.AveStrengthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFractureType1Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.FractureType1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFractureType1Null()
            Me(Me.tableBatchTable.FractureType1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFractureType2Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.FractureType2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFractureType2Null()
            Me(Me.tableBatchTable.FractureType2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFractureType3Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.FractureType3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFractureType3Null()
            Me(Me.tableBatchTable.FractureType3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFractureType4Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.FractureType4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFractureType4Null()
            Me(Me.tableBatchTable.FractureType4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFractureType5Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.FractureType5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFractureType5Null()
            Me(Me.tableBatchTable.FractureType5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFractureType6Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.FractureType6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFractureType6Null()
            Me(Me.tableBatchTable.FractureType6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFractureType7Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.FractureType7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFractureType7Null()
            Me(Me.tableBatchTable.FractureType7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFractureType8Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.FractureType8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFractureType8Null()
            Me(Me.tableBatchTable.FractureType8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFractureType9Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.FractureType9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFractureType9Null()
            Me(Me.tableBatchTable.FractureType9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFractureType10Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.FractureType10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFractureType10Null()
            Me(Me.tableBatchTable.FractureType10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimenAgeNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.SpecimenAgeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimenAgeNull()
            Me(Me.tableBatchTable.SpecimenAgeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsStructuralElementNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.StructuralElementColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetStructuralElementNull()
            Me(Me.tableBatchTable.StructuralElementColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpecimenShapeNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.SpecimenShapeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpecimenShapeNull()
            Me(Me.tableBatchTable.SpecimenShapeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTestedByNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.TestedByColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTestedByNull()
            Me(Me.tableBatchTable.TestedByColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCheckedByNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.CheckedByColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCheckedByNull()
            Me(Me.tableBatchTable.CheckedByColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsApprovedByNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.ApprovedByColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetApprovedByNull()
            Me(Me.tableBatchTable.ApprovedByColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCheckedDateNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.CheckedDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCheckedDateNull()
            Me(Me.tableBatchTable.CheckedDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsApprovedDateNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.ApprovedDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetApprovedDateNull()
            Me(Me.tableBatchTable.ApprovedDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsArea1Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Area1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetArea1Null()
            Me(Me.tableBatchTable.Area1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsArea2Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Area2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetArea2Null()
            Me(Me.tableBatchTable.Area2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsArea3Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Area3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetArea3Null()
            Me(Me.tableBatchTable.Area3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsArea4Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Area4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetArea4Null()
            Me(Me.tableBatchTable.Area4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsArea5Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Area5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetArea5Null()
            Me(Me.tableBatchTable.Area5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsArea6Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Area6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetArea6Null()
            Me(Me.tableBatchTable.Area6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsArea7Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Area7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetArea7Null()
            Me(Me.tableBatchTable.Area7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsArea8Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Area8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetArea8Null()
            Me(Me.tableBatchTable.Area8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsArea9Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Area9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetArea9Null()
            Me(Me.tableBatchTable.Area9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsArea10Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable.Area10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetArea10Null()
            Me(Me.tableBatchTable.Area10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCompliledbyNull() As Boolean
            Return Me.IsNull(Me.tableBatchTable.CompliledbyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCompliledbyNull()
            Me(Me.tableBatchTable.CompliledbyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_1Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable._1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_1Null()
            Me(Me.tableBatchTable._1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_2Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable._2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_2Null()
            Me(Me.tableBatchTable._2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_3Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable._3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_3Null()
            Me(Me.tableBatchTable._3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_4Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable._4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_4Null()
            Me(Me.tableBatchTable._4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_5Null() As Boolean
            Return Me.IsNull(Me.tableBatchTable._5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_5Null()
            Me(Me.tableBatchTable._5Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class ProjectsTableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ProjectsTableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As ProjectsTableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As ProjectsTableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class TableJoinRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TableJoinRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As TableJoinRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As TableJoinRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class UserstableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As UserstableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As UserstableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As UserstableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class BatchTableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As BatchTableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As BatchTableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As BatchTableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace TerraConcDataSetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ProjectsTableTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ProjectsTable"
            tableMapping.ColumnMappings.Add("ProjectName", "ProjectName")
            tableMapping.ColumnMappings.Add("ProjectAddress", "ProjectAddress")
            tableMapping.ColumnMappings.Add("City", "City")
            tableMapping.ColumnMappings.Add("State", "State")
            tableMapping.ColumnMappings.Add("Country", "Country")
            tableMapping.ColumnMappings.Add("ClientName", "ClientName")
            tableMapping.ColumnMappings.Add("ClientAddress", "ClientAddress")
            tableMapping.ColumnMappings.Add("ContactPerson", "ContactPerson")
            tableMapping.ColumnMappings.Add("ContactPhoneNo", "ContactPhoneNo")
            tableMapping.ColumnMappings.Add("ContactEmail", "ContactEmail")
            tableMapping.ColumnMappings.Add("PlotNo", "PlotNo")
            tableMapping.ColumnMappings.Add("DateOfPour", "DateOfPour")
            tableMapping.ColumnMappings.Add("StructureType", "StructureType")
            tableMapping.ColumnMappings.Add("ProjectStart", "ProjectStart")
            tableMapping.ColumnMappings.Add("ProjectEnd", "ProjectEnd")
            tableMapping.ColumnMappings.Add("ProjectID", "ProjectID")
            tableMapping.ColumnMappings.Add("TimeOfPour", "TimeOfPour")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [ProjectsTable] WHERE (([ProjectID] = @Original_ProjectID) AND ((@IsN"& _ 
                "ull_ProjectName = 1 AND [ProjectName] IS NULL) OR ([ProjectName] = @Original_Pro"& _ 
                "jectName)) AND ((@IsNull_ProjectAddress = 1 AND [ProjectAddress] IS NULL) OR ([P"& _ 
                "rojectAddress] = @Original_ProjectAddress)) AND ((@IsNull_City = 1 AND [City] IS"& _ 
                " NULL) OR ([City] = @Original_City)) AND ((@IsNull_State = 1 AND [State] IS NULL"& _ 
                ") OR ([State] = @Original_State)) AND ((@IsNull_Country = 1 AND [Country] IS NUL"& _ 
                "L) OR ([Country] = @Original_Country)) AND ((@IsNull_ClientName = 1 AND [ClientN"& _ 
                "ame] IS NULL) OR ([ClientName] = @Original_ClientName)) AND ((@IsNull_ClientAddr"& _ 
                "ess = 1 AND [ClientAddress] IS NULL) OR ([ClientAddress] = @Original_ClientAddre"& _ 
                "ss)) AND ((@IsNull_ContactPerson = 1 AND [ContactPerson] IS NULL) OR ([ContactPe"& _ 
                "rson] = @Original_ContactPerson)) AND ((@IsNull_ContactPhoneNo = 1 AND [ContactP"& _ 
                "honeNo] IS NULL) OR ([ContactPhoneNo] = @Original_ContactPhoneNo)) AND ((@IsNull"& _ 
                "_ContactEmail = 1 AND [ContactEmail] IS NULL) OR ([ContactEmail] = @Original_Con"& _ 
                "tactEmail)) AND ((@IsNull_PlotNo = 1 AND [PlotNo] IS NULL) OR ([PlotNo] = @Origi"& _ 
                "nal_PlotNo)) AND ((@IsNull_StructureType = 1 AND [StructureType] IS NULL) OR ([S"& _ 
                "tructureType] = @Original_StructureType)) AND ((@IsNull_ProjectStart = 1 AND [Pr"& _ 
                "ojectStart] IS NULL) OR ([ProjectStart] = @Original_ProjectStart)) AND ((@IsNull"& _ 
                "_ProjectEnd = 1 AND [ProjectEnd] IS NULL) OR ([ProjectEnd] = @Original_ProjectEn"& _ 
                "d)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ProjectID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ProjectName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ProjectName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ProjectAddress", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectAddress", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ProjectAddress", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectAddress", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_City", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "City", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_City", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "City", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_State", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "State", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_State", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "State", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Country", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Country", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Country", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Country", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientAddress", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientAddress", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientAddress", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientAddress", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ContactPerson", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ContactPerson", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ContactPerson", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ContactPerson", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ContactPhoneNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ContactPhoneNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ContactPhoneNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ContactPhoneNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ContactEmail", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ContactEmail", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ContactEmail", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ContactEmail", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PlotNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PlotNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PlotNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PlotNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_StructureType", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StructureType", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_StructureType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StructureType", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ProjectStart", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectStart", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ProjectStart", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectStart", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ProjectEnd", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectEnd", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ProjectEnd", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectEnd", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [ProjectsTable] ([ProjectName], [ProjectAddress], [City], [State], [C"& _ 
                "ountry], [ClientName], [ClientAddress], [ContactPerson], [ContactPhoneNo], [Cont"& _ 
                "actEmail], [PlotNo], [StructureType], [ProjectStart], [ProjectEnd]) VALUES (@Pro"& _ 
                "jectName, @ProjectAddress, @City, @State, @Country, @ClientName, @ClientAddress,"& _ 
                " @ContactPerson, @ContactPhoneNo, @ContactEmail, @PlotNo, @StructureType, @Proje"& _ 
                "ctStart, @ProjectEnd);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ProjectID, ProjectName, ProjectAddress, City, Sta"& _ 
                "te, Country, ClientName, ClientAddress, ContactPerson, ContactPhoneNo, ContactEm"& _ 
                "ail, PlotNo, StructureType, ProjectStart, ProjectEnd FROM ProjectsTable WHERE (P"& _ 
                "rojectID = SCOPE_IDENTITY()) ORDER BY ProjectID"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProjectName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProjectAddress", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectAddress", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@City", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "City", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@State", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "State", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Country", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Country", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientAddress", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientAddress", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ContactPerson", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ContactPerson", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ContactPhoneNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ContactPhoneNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ContactEmail", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ContactEmail", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PlotNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PlotNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StructureType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StructureType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProjectStart", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectStart", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProjectEnd", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectEnd", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [ProjectsTable] SET [ProjectName] = @ProjectName, [ProjectAddress] = @Proj"& _ 
                "ectAddress, [City] = @City, [State] = @State, [Country] = @Country, [ClientName]"& _ 
                " = @ClientName, [ClientAddress] = @ClientAddress, [ContactPerson] = @ContactPers"& _ 
                "on, [ContactPhoneNo] = @ContactPhoneNo, [ContactEmail] = @ContactEmail, [PlotNo]"& _ 
                " = @PlotNo, [StructureType] = @StructureType, [ProjectStart] = @ProjectStart, [P"& _ 
                "rojectEnd] = @ProjectEnd WHERE (([ProjectID] = @Original_ProjectID) AND ((@IsNul"& _ 
                "l_ProjectName = 1 AND [ProjectName] IS NULL) OR ([ProjectName] = @Original_Proje"& _ 
                "ctName)) AND ((@IsNull_ProjectAddress = 1 AND [ProjectAddress] IS NULL) OR ([Pro"& _ 
                "jectAddress] = @Original_ProjectAddress)) AND ((@IsNull_City = 1 AND [City] IS N"& _ 
                "ULL) OR ([City] = @Original_City)) AND ((@IsNull_State = 1 AND [State] IS NULL) "& _ 
                "OR ([State] = @Original_State)) AND ((@IsNull_Country = 1 AND [Country] IS NULL)"& _ 
                " OR ([Country] = @Original_Country)) AND ((@IsNull_ClientName = 1 AND [ClientNam"& _ 
                "e] IS NULL) OR ([ClientName] = @Original_ClientName)) AND ((@IsNull_ClientAddres"& _ 
                "s = 1 AND [ClientAddress] IS NULL) OR ([ClientAddress] = @Original_ClientAddress"& _ 
                ")) AND ((@IsNull_ContactPerson = 1 AND [ContactPerson] IS NULL) OR ([ContactPers"& _ 
                "on] = @Original_ContactPerson)) AND ((@IsNull_ContactPhoneNo = 1 AND [ContactPho"& _ 
                "neNo] IS NULL) OR ([ContactPhoneNo] = @Original_ContactPhoneNo)) AND ((@IsNull_C"& _ 
                "ontactEmail = 1 AND [ContactEmail] IS NULL) OR ([ContactEmail] = @Original_Conta"& _ 
                "ctEmail)) AND ((@IsNull_PlotNo = 1 AND [PlotNo] IS NULL) OR ([PlotNo] = @Origina"& _ 
                "l_PlotNo)) AND ((@IsNull_StructureType = 1 AND [StructureType] IS NULL) OR ([Str"& _ 
                "uctureType] = @Original_StructureType)) AND ((@IsNull_ProjectStart = 1 AND [Proj"& _ 
                "ectStart] IS NULL) OR ([ProjectStart] = @Original_ProjectStart)) AND ((@IsNull_P"& _ 
                "rojectEnd = 1 AND [ProjectEnd] IS NULL) OR ([ProjectEnd] = @Original_ProjectEnd)"& _ 
                "));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ProjectID, ProjectName, ProjectAddress, City, State, Country, Client"& _ 
                "Name, ClientAddress, ContactPerson, ContactPhoneNo, ContactEmail, PlotNo, Struct"& _ 
                "ureType, ProjectStart, ProjectEnd FROM ProjectsTable WHERE (ProjectID = @Project"& _ 
                "ID) ORDER BY ProjectID"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProjectName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProjectAddress", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectAddress", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@City", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "City", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@State", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "State", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Country", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Country", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClientAddress", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientAddress", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ContactPerson", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ContactPerson", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ContactPhoneNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ContactPhoneNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ContactEmail", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ContactEmail", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PlotNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PlotNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StructureType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StructureType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProjectStart", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectStart", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProjectEnd", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectEnd", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ProjectID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ProjectName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ProjectName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ProjectAddress", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectAddress", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ProjectAddress", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectAddress", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_City", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "City", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_City", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "City", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_State", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "State", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_State", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "State", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Country", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Country", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Country", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Country", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ClientAddress", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientAddress", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ClientAddress", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientAddress", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ContactPerson", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ContactPerson", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ContactPerson", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ContactPerson", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ContactPhoneNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ContactPhoneNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ContactPhoneNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ContactPhoneNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ContactEmail", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ContactEmail", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ContactEmail", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ContactEmail", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PlotNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PlotNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PlotNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PlotNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_StructureType", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StructureType", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_StructureType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StructureType", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ProjectStart", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectStart", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ProjectStart", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectStart", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ProjectEnd", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectEnd", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ProjectEnd", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectEnd", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProjectID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.TerraConc.My.MySettings.Default.TerraConcConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(7) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT      ProjectsTable.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM          ProjectsTable"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY ProjectID"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT City, ClientAddress, ClientName, ContactEmail, ContactPerson, ContactPhone"& _ 
                "No, Country, PlotNo, ProjectAddress, ProjectEnd, ProjectID, ProjectName, Project"& _ 
                "Start, State, StructureType FROM ProjectsTable WHERE (ProjectID = @Pid)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Pid", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT      ProjectsTable.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM          ProjectsTable"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE (City LIKE '%' + "& _ 
                "@Plcn + '%')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY ProjectID"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Plcn", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "City", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT      ProjectsTable.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM          ProjectsTable"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" WHERE (ClientName LIKE"& _ 
                " '%' + @Cname + '%')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY ProjectID"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Cname", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ClientName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT      ProjectsTable.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM          ProjectsTable"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where (Country Like ' %"& _ 
                "' +@City + '%')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY ProjectID"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@City", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Country", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT      ProjectsTable.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM          ProjectsTable"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE (ProjectAddress"& _ 
                " LIKE '%' + @Plcn + '%')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY ProjectID"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Plcn", Global.System.Data.SqlDbType.NVarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectAddress", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(6).Connection = Me.Connection
            Me._commandCollection(6).CommandText = "SELECT      ProjectsTable.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM          ProjectsTable"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" WHERE (ProjectName LIK"& _ 
                "E '%' + @Pname + '%')"
            Me._commandCollection(6).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Pname", Global.System.Data.SqlDbType.NVarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(7).Connection = Me.Connection
            Me._commandCollection(7).CommandText = "SELECT      ProjectsTable.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM          ProjectsTable"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" WHERE (ProjectStart LI"& _ 
                "KE '%' + @Start + '%')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY ProjectID"
            Me._commandCollection(7).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Start", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectStart", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As TerraConcDataSet.ProjectsTableDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As TerraConcDataSet.ProjectsTableDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As TerraConcDataSet.ProjectsTableDataTable = New TerraConcDataSet.ProjectsTableDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As TerraConcDataSet.ProjectsTableDataTable, ByVal Pid As Long) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Pid,Long)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy(ByVal Pid As Long) As TerraConcDataSet.ProjectsTableDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Pid,Long)
            Dim dataTable As TerraConcDataSet.ProjectsTableDataTable = New TerraConcDataSet.ProjectsTableDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCity(ByVal dataTable As TerraConcDataSet.ProjectsTableDataTable, ByVal Plcn As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (Plcn Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Plcn,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy3(ByVal Plcn As String) As TerraConcDataSet.ProjectsTableDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (Plcn Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Plcn,String)
            End If
            Dim dataTable As TerraConcDataSet.ProjectsTableDataTable = New TerraConcDataSet.ProjectsTableDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCName(ByVal dataTable As TerraConcDataSet.ProjectsTableDataTable, ByVal Cname As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (Cname Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Cname,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy5(ByVal Cname As String) As TerraConcDataSet.ProjectsTableDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (Cname Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Cname,String)
            End If
            Dim dataTable As TerraConcDataSet.ProjectsTableDataTable = New TerraConcDataSet.ProjectsTableDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCountry(ByVal dataTable As TerraConcDataSet.ProjectsTableDataTable, ByVal City As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            If (City Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(City,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy4(ByVal City As String) As TerraConcDataSet.ProjectsTableDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            If (City Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(City,String)
            End If
            Dim dataTable As TerraConcDataSet.ProjectsTableDataTable = New TerraConcDataSet.ProjectsTableDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByPLcn(ByVal dataTable As TerraConcDataSet.ProjectsTableDataTable, ByVal Plcn As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            If (Plcn Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Plcn,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy2(ByVal Plcn As String) As TerraConcDataSet.ProjectsTableDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            If (Plcn Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Plcn,String)
            End If
            Dim dataTable As TerraConcDataSet.ProjectsTableDataTable = New TerraConcDataSet.ProjectsTableDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByPname(ByVal dataTable As TerraConcDataSet.ProjectsTableDataTable, ByVal Pname As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            If (Pname Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Pname,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy1(ByVal Pname As String) As TerraConcDataSet.ProjectsTableDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            If (Pname Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Pname,String)
            End If
            Dim dataTable As TerraConcDataSet.ProjectsTableDataTable = New TerraConcDataSet.ProjectsTableDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByPStart(ByVal dataTable As TerraConcDataSet.ProjectsTableDataTable, ByVal Start As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(7)
            If (Start Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Start,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy6(ByVal Start As String) As TerraConcDataSet.ProjectsTableDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(7)
            If (Start Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Start,String)
            End If
            Dim dataTable As TerraConcDataSet.ProjectsTableDataTable = New TerraConcDataSet.ProjectsTableDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As TerraConcDataSet.ProjectsTableDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As TerraConcDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "ProjectsTable")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ProjectID As Integer, ByVal Original_ProjectName As String, ByVal Original_ProjectAddress As String, ByVal Original_City As String, ByVal Original_State As String, ByVal Original_Country As String, ByVal Original_ClientName As String, ByVal Original_ClientAddress As String, ByVal Original_ContactPerson As String, ByVal Original_ContactPhoneNo As String, ByVal Original_ContactEmail As String, ByVal Original_PlotNo As String, ByVal Original_StructureType As String, ByVal Original_ProjectStart As Global.System.Nullable(Of Date), ByVal Original_ProjectEnd As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ProjectID,Integer)
            If (Original_ProjectName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_ProjectName,String)
            End If
            If (Original_ProjectAddress Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_ProjectAddress,String)
            End If
            If (Original_City Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_City,String)
            End If
            If (Original_State Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_State,String)
            End If
            If (Original_Country Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_Country,String)
            End If
            If (Original_ClientName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_ClientName,String)
            End If
            If (Original_ClientAddress Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_ClientAddress,String)
            End If
            If (Original_ContactPerson Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_ContactPerson,String)
            End If
            If (Original_ContactPhoneNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_ContactPhoneNo,String)
            End If
            If (Original_ContactEmail Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_ContactEmail,String)
            End If
            If (Original_PlotNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_PlotNo,String)
            End If
            If (Original_StructureType Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_StructureType,String)
            End If
            If (Original_ProjectStart.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_ProjectStart.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_ProjectEnd.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_ProjectEnd.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ProjectName As String, ByVal ProjectAddress As String, ByVal City As String, ByVal State As String, ByVal Country As String, ByVal ClientName As String, ByVal ClientAddress As String, ByVal ContactPerson As String, ByVal ContactPhoneNo As String, ByVal ContactEmail As String, ByVal PlotNo As String, ByVal StructureType As String, ByVal ProjectStart As Global.System.Nullable(Of Date), ByVal ProjectEnd As Global.System.Nullable(Of Date)) As Integer
            If (ProjectName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(ProjectName,String)
            End If
            If (ProjectAddress Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(ProjectAddress,String)
            End If
            If (City Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(City,String)
            End If
            If (State Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(State,String)
            End If
            If (Country Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Country,String)
            End If
            If (ClientName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(ClientName,String)
            End If
            If (ClientAddress Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(ClientAddress,String)
            End If
            If (ContactPerson Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(ContactPerson,String)
            End If
            If (ContactPhoneNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(ContactPhoneNo,String)
            End If
            If (ContactEmail Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(ContactEmail,String)
            End If
            If (PlotNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(PlotNo,String)
            End If
            If (StructureType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(StructureType,String)
            End If
            If (ProjectStart.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(ProjectStart.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (ProjectEnd.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(ProjectEnd.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ProjectName As String,  _
                    ByVal ProjectAddress As String,  _
                    ByVal City As String,  _
                    ByVal State As String,  _
                    ByVal Country As String,  _
                    ByVal ClientName As String,  _
                    ByVal ClientAddress As String,  _
                    ByVal ContactPerson As String,  _
                    ByVal ContactPhoneNo As String,  _
                    ByVal ContactEmail As String,  _
                    ByVal PlotNo As String,  _
                    ByVal StructureType As String,  _
                    ByVal ProjectStart As Global.System.Nullable(Of Date),  _
                    ByVal ProjectEnd As Global.System.Nullable(Of Date),  _
                    ByVal Original_ProjectID As Integer,  _
                    ByVal Original_ProjectName As String,  _
                    ByVal Original_ProjectAddress As String,  _
                    ByVal Original_City As String,  _
                    ByVal Original_State As String,  _
                    ByVal Original_Country As String,  _
                    ByVal Original_ClientName As String,  _
                    ByVal Original_ClientAddress As String,  _
                    ByVal Original_ContactPerson As String,  _
                    ByVal Original_ContactPhoneNo As String,  _
                    ByVal Original_ContactEmail As String,  _
                    ByVal Original_PlotNo As String,  _
                    ByVal Original_StructureType As String,  _
                    ByVal Original_ProjectStart As Global.System.Nullable(Of Date),  _
                    ByVal Original_ProjectEnd As Global.System.Nullable(Of Date),  _
                    ByVal ProjectID As Integer) As Integer
            If (ProjectName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ProjectName,String)
            End If
            If (ProjectAddress Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(ProjectAddress,String)
            End If
            If (City Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(City,String)
            End If
            If (State Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(State,String)
            End If
            If (Country Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Country,String)
            End If
            If (ClientName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(ClientName,String)
            End If
            If (ClientAddress Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(ClientAddress,String)
            End If
            If (ContactPerson Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(ContactPerson,String)
            End If
            If (ContactPhoneNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(ContactPhoneNo,String)
            End If
            If (ContactEmail Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(ContactEmail,String)
            End If
            If (PlotNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(PlotNo,String)
            End If
            If (StructureType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(StructureType,String)
            End If
            If (ProjectStart.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(ProjectStart.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (ProjectEnd.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(ProjectEnd.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_ProjectID,Integer)
            If (Original_ProjectName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_ProjectName,String)
            End If
            If (Original_ProjectAddress Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_ProjectAddress,String)
            End If
            If (Original_City Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_City,String)
            End If
            If (Original_State Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_State,String)
            End If
            If (Original_Country Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_Country,String)
            End If
            If (Original_ClientName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_ClientName,String)
            End If
            If (Original_ClientAddress Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_ClientAddress,String)
            End If
            If (Original_ContactPerson Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_ContactPerson,String)
            End If
            If (Original_ContactPhoneNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_ContactPhoneNo,String)
            End If
            If (Original_ContactEmail Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_ContactEmail,String)
            End If
            If (Original_PlotNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_PlotNo,String)
            End If
            If (Original_StructureType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_StructureType,String)
            End If
            If (Original_ProjectStart.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_ProjectStart.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_ProjectEnd.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_ProjectEnd.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(43).Value = CType(ProjectID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ProjectName As String,  _
                    ByVal ProjectAddress As String,  _
                    ByVal City As String,  _
                    ByVal State As String,  _
                    ByVal Country As String,  _
                    ByVal ClientName As String,  _
                    ByVal ClientAddress As String,  _
                    ByVal ContactPerson As String,  _
                    ByVal ContactPhoneNo As String,  _
                    ByVal ContactEmail As String,  _
                    ByVal PlotNo As String,  _
                    ByVal StructureType As String,  _
                    ByVal ProjectStart As Global.System.Nullable(Of Date),  _
                    ByVal ProjectEnd As Global.System.Nullable(Of Date),  _
                    ByVal Original_ProjectID As Integer,  _
                    ByVal Original_ProjectName As String,  _
                    ByVal Original_ProjectAddress As String,  _
                    ByVal Original_City As String,  _
                    ByVal Original_State As String,  _
                    ByVal Original_Country As String,  _
                    ByVal Original_ClientName As String,  _
                    ByVal Original_ClientAddress As String,  _
                    ByVal Original_ContactPerson As String,  _
                    ByVal Original_ContactPhoneNo As String,  _
                    ByVal Original_ContactEmail As String,  _
                    ByVal Original_PlotNo As String,  _
                    ByVal Original_StructureType As String,  _
                    ByVal Original_ProjectStart As Global.System.Nullable(Of Date),  _
                    ByVal Original_ProjectEnd As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(ProjectName, ProjectAddress, City, State, Country, ClientName, ClientAddress, ContactPerson, ContactPhoneNo, ContactEmail, PlotNo, StructureType, ProjectStart, ProjectEnd, Original_ProjectID, Original_ProjectName, Original_ProjectAddress, Original_City, Original_State, Original_Country, Original_ClientName, Original_ClientAddress, Original_ContactPerson, Original_ContactPhoneNo, Original_ContactEmail, Original_PlotNo, Original_StructureType, Original_ProjectStart, Original_ProjectEnd, Original_ProjectID)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TableJoinTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TableJoin"
            tableMapping.ColumnMappings.Add("ProjectName", "ProjectName")
            tableMapping.ColumnMappings.Add("ProjectAddress", "ProjectAddress")
            tableMapping.ColumnMappings.Add("City", "City")
            tableMapping.ColumnMappings.Add("State", "State")
            tableMapping.ColumnMappings.Add("Country", "Country")
            tableMapping.ColumnMappings.Add("ClientName", "ClientName")
            tableMapping.ColumnMappings.Add("ClientAddress", "ClientAddress")
            tableMapping.ColumnMappings.Add("ContactPerson", "ContactPerson")
            tableMapping.ColumnMappings.Add("ContactPhoneNo", "ContactPhoneNo")
            tableMapping.ColumnMappings.Add("ContactEmail", "ContactEmail")
            tableMapping.ColumnMappings.Add("PlotNo", "PlotNo")
            tableMapping.ColumnMappings.Add("StructureType", "StructureType")
            tableMapping.ColumnMappings.Add("BatchIdentificationNo", "BatchIdentificationNo")
            tableMapping.ColumnMappings.Add("NameOfSampler", "NameOfSampler")
            tableMapping.ColumnMappings.Add("BatchDate", "BatchDate")
            tableMapping.ColumnMappings.Add("BatchTime", "BatchTime")
            tableMapping.ColumnMappings.Add("Testdate", "Testdate")
            tableMapping.ColumnMappings.Add("CuringConditions", "CuringConditions")
            tableMapping.ColumnMappings.Add("TestingLaboratory", "TestingLaboratory")
            tableMapping.ColumnMappings.Add("TestCertificate", "TestCertificate")
            tableMapping.ColumnMappings.Add("SupplySource", "SupplySource")
            tableMapping.ColumnMappings.Add("ConcreteGrade", "ConcreteGrade")
            tableMapping.ColumnMappings.Add("SpecificationOfConcreteMix", "SpecificationOfConcreteMix")
            tableMapping.ColumnMappings.Add("NoOfSpecimen", "NoOfSpecimen")
            tableMapping.ColumnMappings.Add("SpecimenCondition", "SpecimenCondition")
            tableMapping.ColumnMappings.Add("MethodOfCompaction", "MethodOfCompaction")
            tableMapping.ColumnMappings.Add("DateDelivered", "DateDelivered")
            tableMapping.ColumnMappings.Add("TestMethod", "TestMethod")
            tableMapping.ColumnMappings.Add("Specimen1D", "Specimen1D")
            tableMapping.ColumnMappings.Add("Specimen2D", "Specimen2D")
            tableMapping.ColumnMappings.Add("Specimen3D", "Specimen3D")
            tableMapping.ColumnMappings.Add("Specimen4D", "Specimen4D")
            tableMapping.ColumnMappings.Add("Specimen5D", "Specimen5D")
            tableMapping.ColumnMappings.Add("Specimen6D", "Specimen6D")
            tableMapping.ColumnMappings.Add("Specimen7D", "Specimen7D")
            tableMapping.ColumnMappings.Add("Specimen8D", "Specimen8D")
            tableMapping.ColumnMappings.Add("Specimen9D", "Specimen9D")
            tableMapping.ColumnMappings.Add("Specimen10D", "Specimen10D")
            tableMapping.ColumnMappings.Add("Specimen1L", "Specimen1L")
            tableMapping.ColumnMappings.Add("Specimen2L", "Specimen2L")
            tableMapping.ColumnMappings.Add("Specimen3L", "Specimen3L")
            tableMapping.ColumnMappings.Add("Specimen4L", "Specimen4L")
            tableMapping.ColumnMappings.Add("Specimen5L", "Specimen5L")
            tableMapping.ColumnMappings.Add("Specimen6L", "Specimen6L")
            tableMapping.ColumnMappings.Add("Specimen7L", "Specimen7L")
            tableMapping.ColumnMappings.Add("Specimen8L", "Specimen8L")
            tableMapping.ColumnMappings.Add("Specimen9L", "Specimen9L")
            tableMapping.ColumnMappings.Add("Specimen10L", "Specimen10L")
            tableMapping.ColumnMappings.Add("Specimen1H", "Specimen1H")
            tableMapping.ColumnMappings.Add("Specimen2H", "Specimen2H")
            tableMapping.ColumnMappings.Add("Specimen3H", "Specimen3H")
            tableMapping.ColumnMappings.Add("Specimen4H", "Specimen4H")
            tableMapping.ColumnMappings.Add("Specimen5H", "Specimen5H")
            tableMapping.ColumnMappings.Add("Specimen6H", "Specimen6H")
            tableMapping.ColumnMappings.Add("Specimen7H", "Specimen7H")
            tableMapping.ColumnMappings.Add("Specimen8H", "Specimen8H")
            tableMapping.ColumnMappings.Add("Specimen9H", "Specimen9H")
            tableMapping.ColumnMappings.Add("Specimen10H", "Specimen10H")
            tableMapping.ColumnMappings.Add("Mass1", "Mass1")
            tableMapping.ColumnMappings.Add("Mass2", "Mass2")
            tableMapping.ColumnMappings.Add("Mass3", "Mass3")
            tableMapping.ColumnMappings.Add("Mass4", "Mass4")
            tableMapping.ColumnMappings.Add("Mass5", "Mass5")
            tableMapping.ColumnMappings.Add("Mass6", "Mass6")
            tableMapping.ColumnMappings.Add("Mass7", "Mass7")
            tableMapping.ColumnMappings.Add("Mass8", "Mass8")
            tableMapping.ColumnMappings.Add("Mass9", "Mass9")
            tableMapping.ColumnMappings.Add("Mass10", "Mass10")
            tableMapping.ColumnMappings.Add("AveMass", "AveMass")
            tableMapping.ColumnMappings.Add("SubMergedMass1", "SubMergedMass1")
            tableMapping.ColumnMappings.Add("SubMergedMass2", "SubMergedMass2")
            tableMapping.ColumnMappings.Add("SubMergedMass3", "SubMergedMass3")
            tableMapping.ColumnMappings.Add("SubMergedMass4", "SubMergedMass4")
            tableMapping.ColumnMappings.Add("SubMergedMass5", "SubMergedMass5")
            tableMapping.ColumnMappings.Add("SubMergedMass6", "SubMergedMass6")
            tableMapping.ColumnMappings.Add("SubMergedMass7", "SubMergedMass7")
            tableMapping.ColumnMappings.Add("SubMergedMass8", "SubMergedMass8")
            tableMapping.ColumnMappings.Add("SubMergedMass9", "SubMergedMass9")
            tableMapping.ColumnMappings.Add("SubMergedMass10", "SubMergedMass10")
            tableMapping.ColumnMappings.Add("Density1", "Density1")
            tableMapping.ColumnMappings.Add("Density2", "Density2")
            tableMapping.ColumnMappings.Add("Density3", "Density3")
            tableMapping.ColumnMappings.Add("Density4", "Density4")
            tableMapping.ColumnMappings.Add("Density5", "Density5")
            tableMapping.ColumnMappings.Add("Density6", "Density6")
            tableMapping.ColumnMappings.Add("Density7", "Density7")
            tableMapping.ColumnMappings.Add("Density8", "Density8")
            tableMapping.ColumnMappings.Add("Density9", "Density9")
            tableMapping.ColumnMappings.Add("Density10", "Density10")
            tableMapping.ColumnMappings.Add("AveDensity", "AveDensity")
            tableMapping.ColumnMappings.Add("MaxLoad1", "MaxLoad1")
            tableMapping.ColumnMappings.Add("MaxLoad2", "MaxLoad2")
            tableMapping.ColumnMappings.Add("MaxLoad3", "MaxLoad3")
            tableMapping.ColumnMappings.Add("MaxLoad4", "MaxLoad4")
            tableMapping.ColumnMappings.Add("MaxLoad5", "MaxLoad5")
            tableMapping.ColumnMappings.Add("MaxLoad6", "MaxLoad6")
            tableMapping.ColumnMappings.Add("MaxLoad7", "MaxLoad7")
            tableMapping.ColumnMappings.Add("MaxLoad8", "MaxLoad8")
            tableMapping.ColumnMappings.Add("MaxLoad9", "MaxLoad9")
            tableMapping.ColumnMappings.Add("MaxLoad10", "MaxLoad10")
            tableMapping.ColumnMappings.Add("CompStrength1", "CompStrength1")
            tableMapping.ColumnMappings.Add("CompStrength2", "CompStrength2")
            tableMapping.ColumnMappings.Add("CompStrength3", "CompStrength3")
            tableMapping.ColumnMappings.Add("CompStrength4", "CompStrength4")
            tableMapping.ColumnMappings.Add("CompStrength5", "CompStrength5")
            tableMapping.ColumnMappings.Add("CompStrength6", "CompStrength6")
            tableMapping.ColumnMappings.Add("CompStrength7", "CompStrength7")
            tableMapping.ColumnMappings.Add("CompStrength8", "CompStrength8")
            tableMapping.ColumnMappings.Add("CompStrength9", "CompStrength9")
            tableMapping.ColumnMappings.Add("CompStrength10", "CompStrength10")
            tableMapping.ColumnMappings.Add("AveStrength", "AveStrength")
            tableMapping.ColumnMappings.Add("FractureType1", "FractureType1")
            tableMapping.ColumnMappings.Add("FractureType2", "FractureType2")
            tableMapping.ColumnMappings.Add("FractureType3", "FractureType3")
            tableMapping.ColumnMappings.Add("FractureType4", "FractureType4")
            tableMapping.ColumnMappings.Add("FractureType5", "FractureType5")
            tableMapping.ColumnMappings.Add("FractureType6", "FractureType6")
            tableMapping.ColumnMappings.Add("FractureType7", "FractureType7")
            tableMapping.ColumnMappings.Add("FractureType8", "FractureType8")
            tableMapping.ColumnMappings.Add("FractureType9", "FractureType9")
            tableMapping.ColumnMappings.Add("FractureType10", "FractureType10")
            tableMapping.ColumnMappings.Add("StructuralElement", "StructuralElement")
            tableMapping.ColumnMappings.Add("SpecimenShape", "SpecimenShape")
            tableMapping.ColumnMappings.Add("TestedBy", "TestedBy")
            tableMapping.ColumnMappings.Add("CheckedBy", "CheckedBy")
            tableMapping.ColumnMappings.Add("ApprovedBy", "ApprovedBy")
            tableMapping.ColumnMappings.Add("CheckedDate", "CheckedDate")
            tableMapping.ColumnMappings.Add("ApprovedDate", "ApprovedDate")
            tableMapping.ColumnMappings.Add("ProjectID", "ProjectID")
            tableMapping.ColumnMappings.Add("ProjectStart", "ProjectStart")
            tableMapping.ColumnMappings.Add("ProjectEnd", "ProjectEnd")
            tableMapping.ColumnMappings.Add("Expr1", "Expr1")
            tableMapping.ColumnMappings.Add("BatchId", "BatchId")
            tableMapping.ColumnMappings.Add("Area1", "Area1")
            tableMapping.ColumnMappings.Add("Area2", "Area2")
            tableMapping.ColumnMappings.Add("Area3", "Area3")
            tableMapping.ColumnMappings.Add("Area4", "Area4")
            tableMapping.ColumnMappings.Add("Area5", "Area5")
            tableMapping.ColumnMappings.Add("Area6", "Area6")
            tableMapping.ColumnMappings.Add("Area7", "Area7")
            tableMapping.ColumnMappings.Add("Area8", "Area8")
            tableMapping.ColumnMappings.Add("Area9", "Area9")
            tableMapping.ColumnMappings.Add("Area10", "Area10")
            tableMapping.ColumnMappings.Add("SpecimenAge", "SpecimenAge")
            tableMapping.ColumnMappings.Add("Compliledby", "Compliledby")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.TerraConc.My.MySettings.Default.TerraConcConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT      ProjectsTable.ProjectID, ProjectsTable.ProjectName, ProjectsTable.Pro"& _ 
                "jectAddress, ProjectsTable.City, ProjectsTable.State, ProjectsTable.Country, Pro"& _ 
                "jectsTable.ClientName, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        ProjectsTable.ClientAddress, Pr"& _ 
                "ojectsTable.ContactPerson, ProjectsTable.ContactPhoneNo, ProjectsTable.ContactEm"& _ 
                "ail, ProjectsTable.PlotNo, ProjectsTable.StructureType, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "  ProjectsTable.ProjectStart, ProjectsTable.ProjectEnd, BatchTable.ProjectID AS "& _ 
                "Expr1, BatchTable.BatchId, BatchTable.BatchIdentificationNo, BatchTable.NameOfSa"& _ 
                "mpler, BatchTable.BatchDate, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        BatchTable.BatchTime, Bat"& _ 
                "chTable.Testdate, BatchTable.CuringConditions, BatchTable.TestingLaboratory, Bat"& _ 
                "chTable.TestCertificate, BatchTable.SupplySource, BatchTable.ConcreteGrade, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                      BatchTable.SpecificationOfConcreteMix, BatchTable.NoOfSpec"& _ 
                "imen, BatchTable.SpecimenCondition, BatchTable.MethodOfCompaction, BatchTable.Da"& _ 
                "teDelivered, BatchTable.TestMethod, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        BatchTable.Specime"& _ 
                "n1D, BatchTable.Specimen2D, BatchTable.Specimen3D, BatchTable.Specimen4D, BatchT"& _ 
                "able.Specimen5D, BatchTable.Specimen6D, BatchTable.Specimen7D, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "         BatchTable.Specimen8D, BatchTable.Specimen9D, BatchTable.Specimen10D, B"& _ 
                "atchTable.Specimen1L, BatchTable.Specimen2L, BatchTable.Specimen3L, BatchTable.S"& _ 
                "pecimen4L, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        BatchTable.Specimen5L, BatchTable.Specimen6"& _ 
                "L, BatchTable.Specimen7L, BatchTable.Specimen8L, BatchTable.Specimen9L, BatchTab"& _ 
                "le.Specimen10L, BatchTable.Specimen1H, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        BatchTable.Spec"& _ 
                "imen2H, BatchTable.Specimen3H, BatchTable.Specimen4H, BatchTable.Specimen5H, Bat"& _ 
                "chTable.Specimen6H, BatchTable.Specimen7H, BatchTable.Specimen8H, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            "& _ 
                "            BatchTable.Specimen9H, BatchTable.Specimen10H, BatchTable.Area1, Bat"& _ 
                "chTable.Area2, BatchTable.Area3, BatchTable.Area4, BatchTable.Area5, BatchTable."& _ 
                "Area6, BatchTable.Area7, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        BatchTable.Area8, BatchTable."& _ 
                "Area9, BatchTable.Area10, BatchTable.Mass1, BatchTable.Mass2, BatchTable.Mass3, "& _ 
                "BatchTable.Mass4, BatchTable.Mass5, BatchTable.Mass6, BatchTable.Mass7, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                  BatchTable.Mass8, BatchTable.Mass9, BatchTable.Mass10, BatchTa"& _ 
                "ble.AveMass, BatchTable.SubMergedMass1, BatchTable.SubMergedMass2, BatchTable.Su"& _ 
                "bMergedMass3, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        BatchTable.SubMergedMass4, BatchTable.Su"& _ 
                "bMergedMass5, BatchTable.SubMergedMass6, BatchTable.SubMergedMass7, BatchTable.S"& _ 
                "ubMergedMass8, BatchTable.SubMergedMass9, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        BatchTable.S"& _ 
                "ubMergedMass10, BatchTable.Density1, BatchTable.Density2, BatchTable.Density3, B"& _ 
                "atchTable.Density4, BatchTable.Density5, BatchTable.Density6, BatchTable.Density"& _ 
                "7, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        BatchTable.Density8, BatchTable.Density9, BatchTabl"& _ 
                "e.Density10, BatchTable.AveDensity, BatchTable.MaxLoad1, BatchTable.MaxLoad2, Ba"& _ 
                "tchTable.MaxLoad3, BatchTable.MaxLoad4, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        BatchTable.Max"& _ 
                "Load5, BatchTable.MaxLoad6, BatchTable.MaxLoad7, BatchTable.MaxLoad8, BatchTable"& _ 
                ".MaxLoad9, BatchTable.MaxLoad10, BatchTable.CompStrength1, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "     BatchTable.CompStrength2, BatchTable.CompStrength3, BatchTable.CompStrength"& _ 
                "4, BatchTable.CompStrength5, BatchTable.CompStrength6, BatchTable.CompStrength7,"& _ 
                " "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        BatchTable.CompStrength8, BatchTable.CompStrength9, B"& _ 
                "atchTable.CompStrength10, BatchTable.AveStrength, BatchTable.FractureType1, Batc"& _ 
                "hTable.FractureType2, BatchTable.FractureType3, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        BatchT"& _ 
                "able.FractureType4, BatchTable.FractureType5, BatchTable.FractureType6, BatchTab"& _ 
                "le.FractureType7, BatchTable.FractureType8, BatchTable.FractureType9, BatchTable"& _ 
                ".FractureType10, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        BatchTable.SpecimenAge, BatchTable.St"& _ 
                "ructuralElement, BatchTable.SpecimenShape, BatchTable.TestedBy, BatchTable.Check"& _ 
                "edBy, BatchTable.ApprovedBy, BatchTable.CheckedDate, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        B"& _ 
                "atchTable.ApprovedDate, BatchTable.Compliledby"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM          ProjectsTable INNE"& _ 
                "R JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        BatchTable ON ProjectsTable.ProjectID = BatchTab"& _ 
                "le.ProjectID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE      (BatchTable.ProjectID = @Pid)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Pid", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Expr1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT      BatchTable.ProjectID, BatchTable.BatchId, BatchTable.BatchIdentificat"& _ 
                "ionNo, BatchTable.NameOfSampler, BatchTable.BatchDate, BatchTable.BatchTime, Bat"& _ 
                "chTable.Testdate, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        BatchTable.CuringConditions, BatchTa"& _ 
                "ble.TestingLaboratory, BatchTable.TestCertificate, BatchTable.SupplySource, Batc"& _ 
                "hTable.ConcreteGrade, BatchTable.SpecificationOfConcreteMix, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "       BatchTable.NoOfSpecimen, BatchTable.SpecimenCondition, BatchTable.MethodO"& _ 
                "fCompaction, BatchTable.DateDelivered, BatchTable.TestMethod, BatchTable.Specime"& _ 
                "n1D, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        BatchTable.Specimen2D, BatchTable.Specimen3D, Bat"& _ 
                "chTable.Specimen4D, BatchTable.Specimen5D, BatchTable.Specimen6D, BatchTable.Spe"& _ 
                "cimen7D, BatchTable.Specimen8D, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        BatchTable.Specimen9D,"& _ 
                " BatchTable.Specimen10D, BatchTable.Specimen1L, BatchTable.Specimen2L, BatchTabl"& _ 
                "e.Specimen3L, BatchTable.Specimen4L, BatchTable.Specimen5L, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "      BatchTable.Specimen6L, BatchTable.Specimen7L, BatchTable.Specimen8L, Batch"& _ 
                "Table.Specimen9L, BatchTable.Specimen10L, BatchTable.Specimen1H, BatchTable.Spec"& _ 
                "imen2H, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        BatchTable.Specimen3H, BatchTable.Specimen4H, "& _ 
                "BatchTable.Specimen5H, BatchTable.Specimen6H, BatchTable.Specimen7H, BatchTable."& _ 
                "Specimen8H, BatchTable.Specimen9H, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        BatchTable.Specimen"& _ 
                "10H, BatchTable.Area1, BatchTable.Area2, BatchTable.Area3, BatchTable.Area4, Bat"& _ 
                "chTable.Area5, BatchTable.Area6, BatchTable.Area7, BatchTable.Area8, BatchTable."& _ 
                "Area9, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        BatchTable.Area10, BatchTable.Mass1, BatchTable"& _ 
                ".Mass2, BatchTable.Mass3, BatchTable.Mass4, BatchTable.Mass5, BatchTable.Mass6, "& _ 
                "BatchTable.Mass7, BatchTable.Mass8, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        BatchTable.Mass9, "& _ 
                "BatchTable.Mass10, BatchTable.AveMass, BatchTable.SubMergedMass1, BatchTable.Sub"& _ 
                "MergedMass2, BatchTable.SubMergedMass3, BatchTable.SubMergedMass4, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "             BatchTable.SubMergedMass5, BatchTable.SubMergedMass6, BatchTable.Su"& _ 
                "bMergedMass7, BatchTable.SubMergedMass8, BatchTable.SubMergedMass9, BatchTable.S"& _ 
                "ubMergedMass10, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        BatchTable.Density1, BatchTable.Densit"& _ 
                "y2, BatchTable.Density3, BatchTable.Density4, BatchTable.Density5, BatchTable.De"& _ 
                "nsity6, BatchTable.Density7, BatchTable.Density8, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        Batc"& _ 
                "hTable.Density9, BatchTable.Density10, BatchTable.AveDensity, BatchTable.MaxLoad"& _ 
                "1, BatchTable.MaxLoad2, BatchTable.MaxLoad3, BatchTable.MaxLoad4, BatchTable.Max"& _ 
                "Load5, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        BatchTable.MaxLoad6, BatchTable.MaxLoad7, Batch"& _ 
                "Table.MaxLoad8, BatchTable.MaxLoad9, BatchTable.MaxLoad10, BatchTable.CompStreng"& _ 
                "th1, BatchTable.CompStrength2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        BatchTable.CompStrength"& _ 
                "3, BatchTable.CompStrength4, BatchTable.CompStrength5, BatchTable.CompStrength6,"& _ 
                " BatchTable.CompStrength7, BatchTable.CompStrength8, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        B"& _ 
                "atchTable.CompStrength9, BatchTable.CompStrength10, BatchTable.AveStrength, Batc"& _ 
                "hTable.FractureType1, BatchTable.FractureType2, BatchTable.FractureType3, BatchT"& _ 
                "able.FractureType4, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        BatchTable.FractureType5, BatchTab"& _ 
                "le.FractureType6, BatchTable.FractureType7, BatchTable.FractureType8, BatchTable"& _ 
                ".FractureType9, BatchTable.FractureType10, BatchTable.SpecimenAge, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "             BatchTable.StructuralElement, BatchTable.SpecimenShape, BatchTable."& _ 
                "TestedBy, BatchTable.CheckedBy, BatchTable.ApprovedBy, BatchTable.CheckedDate, B"& _ 
                "atchTable.ApprovedDate, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        BatchTable.Compliledby, BatchT"& _ 
                "able.[1], BatchTable.[2], BatchTable.[3], BatchTable.[4], BatchTable.[5], Projec"& _ 
                "tsTable.ProjectID AS Expr1, ProjectsTable.ProjectID AS Expr7, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "        ProjectsTable.ProjectName, ProjectsTable.ProjectAddress, ProjectsTable.C"& _ 
                "ity, ProjectsTable.State, ProjectsTable.Country, ProjectsTable.ClientName, Proje"& _ 
                "ctsTable.ClientAddress, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        ProjectsTable.ContactPerson, P"& _ 
                "rojectsTable.ContactPhoneNo, ProjectsTable.ContactEmail, ProjectsTable.PlotNo, P"& _ 
                "rojectsTable.StructureType, ProjectsTable.ProjectStart, ProjectsTable.ProjectEnd"& _ 
                ", "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        BatchTable.[1] AS Expr2, BatchTable.[2] AS Expr3, Ba"& _ 
                "tchTable.[3] AS Expr4, BatchTable.[4] AS Expr5, BatchTable.[5] AS Expr6"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM   "& _ 
                "       BatchTable INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        ProjectsTable ON BatchTabl"& _ 
                "e.ProjectID = ProjectsTable.ProjectID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE      (BatchTable.ProjectID = @Pid) "& _ 
                "AND (BatchTable.BatchId = @Bid)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Pid", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Bid", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BatchId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As TerraConcDataSet.TableJoinDataTable, ByVal Pid As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Pid,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Pid As Integer) As TerraConcDataSet.TableJoinDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Pid,Integer)
            Dim dataTable As TerraConcDataSet.TableJoinDataTable = New TerraConcDataSet.TableJoinDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As TerraConcDataSet.TableJoinDataTable, ByVal Pid As Integer, ByVal Bid As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Pid,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Bid,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy(ByVal Pid As Integer, ByVal Bid As Integer) As TerraConcDataSet.TableJoinDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Pid,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Bid,Integer)
            Dim dataTable As TerraConcDataSet.TableJoinDataTable = New TerraConcDataSet.TableJoinDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class UserstableTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Userstable"
            tableMapping.ColumnMappings.Add("UserID", "UserID")
            tableMapping.ColumnMappings.Add("Designation", "Designation")
            tableMapping.ColumnMappings.Add("FirstName", "FirstName")
            tableMapping.ColumnMappings.Add("LastName", "LastName")
            tableMapping.ColumnMappings.Add("Password", "Password")
            tableMapping.ColumnMappings.Add("UserName", "UserName")
            tableMapping.ColumnMappings.Add("Status", "Status")
            tableMapping.ColumnMappings.Add("UserPhoto", "UserPhoto")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [Userstable] WHERE (([UserID] = @Original_UserID) AND ((@IsNull_Desig"& _ 
                "nation = 1 AND [Designation] IS NULL) OR ([Designation] = @Original_Designation)"& _ 
                ") AND ((@IsNull_FirstName = 1 AND [FirstName] IS NULL) OR ([FirstName] = @Origin"& _ 
                "al_FirstName)) AND ((@IsNull_LastName = 1 AND [LastName] IS NULL) OR ([LastName]"& _ 
                " = @Original_LastName)) AND ((@IsNull_Password = 1 AND [Password] IS NULL) OR (["& _ 
                "Password] = @Original_Password)) AND ((@IsNull_UserName = 1 AND [UserName] IS NU"& _ 
                "LL) OR ([UserName] = @Original_UserName)) AND ((@IsNull_Status = 1 AND [Status] "& _ 
                "IS NULL) OR ([Status] = @Original_Status)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UserID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UserID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Designation", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Designation", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Designation", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Designation", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FirstName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FirstName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LastName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LastName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LastName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LastName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Password", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Password", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Password", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Password", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UserName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UserName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UserName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UserName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Status", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Status", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Status", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Status", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [Userstable] ([Designation], [FirstName], [LastName], [Password], [Us"& _ 
                "erName], [Status], [UserPhoto]) VALUES (@Designation, @FirstName, @LastName, @Pa"& _ 
                "ssword, @UserName, @Status, @UserPhoto);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT UserID, Designation, FirstName,"& _ 
                " LastName, Password, UserName, Status, UserPhoto FROM Userstable WHERE (UserID ="& _ 
                " SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Designation", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Designation", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FirstName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LastName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LastName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Password", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Password", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UserName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UserName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Status", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Status", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UserPhoto", Global.System.Data.SqlDbType.VarBinary, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UserPhoto", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [Userstable] SET [Designation] = @Designation, [FirstName] = @FirstName, ["& _ 
                "LastName] = @LastName, [Password] = @Password, [UserName] = @UserName, [Status] "& _ 
                "= @Status, [UserPhoto] = @UserPhoto WHERE (([UserID] = @Original_UserID) AND ((@"& _ 
                "IsNull_Designation = 1 AND [Designation] IS NULL) OR ([Designation] = @Original_"& _ 
                "Designation)) AND ((@IsNull_FirstName = 1 AND [FirstName] IS NULL) OR ([FirstNam"& _ 
                "e] = @Original_FirstName)) AND ((@IsNull_LastName = 1 AND [LastName] IS NULL) OR"& _ 
                " ([LastName] = @Original_LastName)) AND ((@IsNull_Password = 1 AND [Password] IS"& _ 
                " NULL) OR ([Password] = @Original_Password)) AND ((@IsNull_UserName = 1 AND [Use"& _ 
                "rName] IS NULL) OR ([UserName] = @Original_UserName)) AND ((@IsNull_Status = 1 A"& _ 
                "ND [Status] IS NULL) OR ([Status] = @Original_Status)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT UserID, Designa"& _ 
                "tion, FirstName, LastName, Password, UserName, Status, UserPhoto FROM Userstable"& _ 
                " WHERE (UserID = @UserID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Designation", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Designation", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FirstName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LastName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LastName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Password", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Password", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UserName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UserName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Status", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Status", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UserPhoto", Global.System.Data.SqlDbType.VarBinary, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UserPhoto", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UserID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UserID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Designation", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Designation", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Designation", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Designation", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FirstName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FirstName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LastName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LastName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LastName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LastName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Password", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Password", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Password", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Password", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UserName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UserName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UserName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UserName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Status", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Status", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Status", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Status", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UserID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "UserID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.TerraConc.My.MySettings.Default.TerraConcConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(6) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT UserID, Designation, FirstName, LastName, Password, UserName, Status, User"& _ 
                "Photo FROM Userstable"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT COUNT(*) FROM Userstable"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where userid=@Id"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "UserID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT Designation, FirstName, LastName, Password, Status, UserID, UserName, User"& _ 
                "Photo FROM Userstable WHERE (UserID = @Id)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "UserID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "INSERT INTO [Userstable] ([Designation], [FirstName], [LastName], [Password], [Us"& _ 
                "erName], [Status], [UserPicture]) VALUES (@Designation, @FirstName, @LastName, @"& _ 
                "Password, @UserName, @Status, @UserPicture);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT UserID, Designation, FirstN"& _ 
                "ame, LastName, Password, UserName, Status, UserPicture FROM Userstable WHERE (Us"& _ 
                "erID = SCOPE_IDENTITY())"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Designation", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Designation", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FirstName", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LastName", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "LastName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Password", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Password", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UserName", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "UserName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Status", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Status", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UserPicture", Global.System.Data.SqlDbType.Image, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, "UserPicture", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT Max(userid) FROM Userstable"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "UPDATE [Userstable] SET [Designation] = @Designation, [FirstName] = @FirstName, ["& _ 
                "LastName] = @LastName, [Password] = @Password, [UserName] = @UserName, [Status] "& _ 
                "= @Status, [UserPicture] = @UserPicture WHERE  (UserID = @UserID)"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Designation", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Designation", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FirstName", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LastName", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "LastName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Password", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Password", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UserName", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "UserName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Status", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Status", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UserPicture", Global.System.Data.SqlDbType.Image, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, "UserPicture", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UserID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "UserID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(6) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(6).Connection = Me.Connection
            Me._commandCollection(6).CommandText = "UPDATE      Userstable"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET               Designation = @D, LastName = @l, FirstN"& _ 
                "ame = @f, Password = @p, UserName = @u, Status = @s"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE      (UserID = @Id)"
            Me._commandCollection(6).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@D", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Designation", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@l", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "LastName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@f", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Password", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@u", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "UserName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@s", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Status", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "UserID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As TerraConcDataSet.UserstableDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As TerraConcDataSet.UserstableDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As TerraConcDataSet.UserstableDataTable = New TerraConcDataSet.UserstableDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As TerraConcDataSet.UserstableDataTable, ByVal Id As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Id,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy2(ByVal Id As Integer) As TerraConcDataSet.UserstableDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Id,Integer)
            Dim dataTable As TerraConcDataSet.UserstableDataTable = New TerraConcDataSet.UserstableDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As TerraConcDataSet.UserstableDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As TerraConcDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Userstable")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_UserID As Integer, ByVal Original_Designation As String, ByVal Original_FirstName As String, ByVal Original_LastName As String, ByVal Original_Password As String, ByVal Original_UserName As String, ByVal Original_Status As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_UserID,Integer)
            If (Original_Designation Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Designation,String)
            End If
            If (Original_FirstName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_FirstName,String)
            End If
            If (Original_LastName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_LastName,String)
            End If
            If (Original_Password Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_Password,String)
            End If
            If (Original_UserName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_UserName,String)
            End If
            If (Original_Status Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_Status,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Designation As String, ByVal FirstName As String, ByVal LastName As String, ByVal Password As String, ByVal UserName As String, ByVal Status As String, ByVal UserPhoto() As Byte) As Integer
            If (Designation Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Designation,String)
            End If
            If (FirstName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(FirstName,String)
            End If
            If (LastName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(LastName,String)
            End If
            If (Password Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Password,String)
            End If
            If (UserName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(UserName,String)
            End If
            If (Status Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Status,String)
            End If
            If (UserPhoto Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(UserPhoto,Byte())
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Designation As String, ByVal FirstName As String, ByVal LastName As String, ByVal Password As String, ByVal UserName As String, ByVal Status As String, ByVal UserPhoto() As Byte, ByVal Original_UserID As Integer, ByVal Original_Designation As String, ByVal Original_FirstName As String, ByVal Original_LastName As String, ByVal Original_Password As String, ByVal Original_UserName As String, ByVal Original_Status As String, ByVal UserID As Integer) As Integer
            If (Designation Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Designation,String)
            End If
            If (FirstName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(FirstName,String)
            End If
            If (LastName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(LastName,String)
            End If
            If (Password Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Password,String)
            End If
            If (UserName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(UserName,String)
            End If
            If (Status Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Status,String)
            End If
            If (UserPhoto Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(UserPhoto,Byte())
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_UserID,Integer)
            If (Original_Designation Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_Designation,String)
            End If
            If (Original_FirstName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_FirstName,String)
            End If
            If (Original_LastName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_LastName,String)
            End If
            If (Original_Password Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_Password,String)
            End If
            If (Original_UserName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_UserName,String)
            End If
            If (Original_Status Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_Status,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(UserID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Designation As String, ByVal FirstName As String, ByVal LastName As String, ByVal Password As String, ByVal UserName As String, ByVal Status As String, ByVal UserPhoto() As Byte, ByVal Original_UserID As Integer, ByVal Original_Designation As String, ByVal Original_FirstName As String, ByVal Original_LastName As String, ByVal Original_Password As String, ByVal Original_UserName As String, ByVal Original_Status As String) As Integer
            Return Me.Update(Designation, FirstName, LastName, Password, UserName, Status, UserPhoto, Original_UserID, Original_Designation, Original_FirstName, Original_LastName, Original_Password, Original_UserName, Original_Status, Original_UserID)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function CheckQuery(ByVal Id As Integer) As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            command.Parameters(0).Value = CType(Id,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)()
            Else
                Return New Global.System.Nullable(Of Integer)(CType(returnValue,Integer))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function InsertQuery(ByVal Designation As String, ByVal FirstName As String, ByVal LastName As String, ByVal Password As String, ByVal UserName As String, ByVal Status As String, ByVal UserPicture() As Byte) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            If (Designation Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(Designation,String)
            End If
            If (FirstName Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(FirstName,String)
            End If
            If (LastName Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(LastName,String)
            End If
            If (Password Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(Password,String)
            End If
            If (UserName Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(UserName,String)
            End If
            If (Status Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(Status,String)
            End If
            If (UserPicture Is Nothing) Then
                command.Parameters(6).Value = Global.System.DBNull.Value
            Else
                command.Parameters(6).Value = CType(UserPicture,Byte())
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function maxQuery() As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(4)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateQuery(ByVal Designation As String, ByVal FirstName As String, ByVal LastName As String, ByVal Password As String, ByVal UserName As String, ByVal Status As String, ByVal UserPicture() As Byte, ByVal UserID As Integer) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(5)
            If (Designation Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(Designation,String)
            End If
            If (FirstName Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(FirstName,String)
            End If
            If (LastName Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(LastName,String)
            End If
            If (Password Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(Password,String)
            End If
            If (UserName Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(UserName,String)
            End If
            If (Status Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(Status,String)
            End If
            If (UserPicture Is Nothing) Then
                command.Parameters(6).Value = Global.System.DBNull.Value
            Else
                command.Parameters(6).Value = CType(UserPicture,Byte())
            End If
            command.Parameters(7).Value = CType(UserID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateU(ByVal D As String, ByVal l As String, ByVal f As String, ByVal p As String, ByVal u As String, ByVal s As String, ByVal Id As Integer) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(6)
            If (D Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(D,String)
            End If
            If (l Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(l,String)
            End If
            If (f Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(f,String)
            End If
            If (p Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(p,String)
            End If
            If (u Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(u,String)
            End If
            If (s Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(s,String)
            End If
            command.Parameters(6).Value = CType(Id,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class BatchTableTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "BatchTable"
            tableMapping.ColumnMappings.Add("ProjectID", "ProjectID")
            tableMapping.ColumnMappings.Add("BatchId", "BatchId")
            tableMapping.ColumnMappings.Add("BatchIdentificationNo", "BatchIdentificationNo")
            tableMapping.ColumnMappings.Add("NameOfSampler", "NameOfSampler")
            tableMapping.ColumnMappings.Add("BatchDate", "BatchDate")
            tableMapping.ColumnMappings.Add("BatchTime", "BatchTime")
            tableMapping.ColumnMappings.Add("Testdate", "Testdate")
            tableMapping.ColumnMappings.Add("CuringConditions", "CuringConditions")
            tableMapping.ColumnMappings.Add("TestingLaboratory", "TestingLaboratory")
            tableMapping.ColumnMappings.Add("TestCertificate", "TestCertificate")
            tableMapping.ColumnMappings.Add("SupplySource", "SupplySource")
            tableMapping.ColumnMappings.Add("ConcreteGrade", "ConcreteGrade")
            tableMapping.ColumnMappings.Add("SpecificationOfConcreteMix", "SpecificationOfConcreteMix")
            tableMapping.ColumnMappings.Add("NoOfSpecimen", "NoOfSpecimen")
            tableMapping.ColumnMappings.Add("SpecimenCondition", "SpecimenCondition")
            tableMapping.ColumnMappings.Add("MethodOfCompaction", "MethodOfCompaction")
            tableMapping.ColumnMappings.Add("DateDelivered", "DateDelivered")
            tableMapping.ColumnMappings.Add("TestMethod", "TestMethod")
            tableMapping.ColumnMappings.Add("Specimen1D", "Specimen1D")
            tableMapping.ColumnMappings.Add("Specimen2D", "Specimen2D")
            tableMapping.ColumnMappings.Add("Specimen3D", "Specimen3D")
            tableMapping.ColumnMappings.Add("Specimen4D", "Specimen4D")
            tableMapping.ColumnMappings.Add("Specimen5D", "Specimen5D")
            tableMapping.ColumnMappings.Add("Specimen6D", "Specimen6D")
            tableMapping.ColumnMappings.Add("Specimen7D", "Specimen7D")
            tableMapping.ColumnMappings.Add("Specimen8D", "Specimen8D")
            tableMapping.ColumnMappings.Add("Specimen9D", "Specimen9D")
            tableMapping.ColumnMappings.Add("Specimen10D", "Specimen10D")
            tableMapping.ColumnMappings.Add("Specimen1L", "Specimen1L")
            tableMapping.ColumnMappings.Add("Specimen2L", "Specimen2L")
            tableMapping.ColumnMappings.Add("Specimen3L", "Specimen3L")
            tableMapping.ColumnMappings.Add("Specimen4L", "Specimen4L")
            tableMapping.ColumnMappings.Add("Specimen5L", "Specimen5L")
            tableMapping.ColumnMappings.Add("Specimen6L", "Specimen6L")
            tableMapping.ColumnMappings.Add("Specimen7L", "Specimen7L")
            tableMapping.ColumnMappings.Add("Specimen8L", "Specimen8L")
            tableMapping.ColumnMappings.Add("Specimen9L", "Specimen9L")
            tableMapping.ColumnMappings.Add("Specimen10L", "Specimen10L")
            tableMapping.ColumnMappings.Add("Specimen1H", "Specimen1H")
            tableMapping.ColumnMappings.Add("Specimen2H", "Specimen2H")
            tableMapping.ColumnMappings.Add("Specimen3H", "Specimen3H")
            tableMapping.ColumnMappings.Add("Specimen4H", "Specimen4H")
            tableMapping.ColumnMappings.Add("Specimen5H", "Specimen5H")
            tableMapping.ColumnMappings.Add("Specimen6H", "Specimen6H")
            tableMapping.ColumnMappings.Add("Specimen7H", "Specimen7H")
            tableMapping.ColumnMappings.Add("Specimen8H", "Specimen8H")
            tableMapping.ColumnMappings.Add("Specimen9H", "Specimen9H")
            tableMapping.ColumnMappings.Add("Specimen10H", "Specimen10H")
            tableMapping.ColumnMappings.Add("Mass1", "Mass1")
            tableMapping.ColumnMappings.Add("Mass2", "Mass2")
            tableMapping.ColumnMappings.Add("Mass3", "Mass3")
            tableMapping.ColumnMappings.Add("Mass4", "Mass4")
            tableMapping.ColumnMappings.Add("Mass5", "Mass5")
            tableMapping.ColumnMappings.Add("Mass6", "Mass6")
            tableMapping.ColumnMappings.Add("Mass7", "Mass7")
            tableMapping.ColumnMappings.Add("Mass8", "Mass8")
            tableMapping.ColumnMappings.Add("Mass9", "Mass9")
            tableMapping.ColumnMappings.Add("Mass10", "Mass10")
            tableMapping.ColumnMappings.Add("AveMass", "AveMass")
            tableMapping.ColumnMappings.Add("SubMergedMass1", "SubMergedMass1")
            tableMapping.ColumnMappings.Add("SubMergedMass2", "SubMergedMass2")
            tableMapping.ColumnMappings.Add("SubMergedMass3", "SubMergedMass3")
            tableMapping.ColumnMappings.Add("SubMergedMass4", "SubMergedMass4")
            tableMapping.ColumnMappings.Add("SubMergedMass5", "SubMergedMass5")
            tableMapping.ColumnMappings.Add("SubMergedMass6", "SubMergedMass6")
            tableMapping.ColumnMappings.Add("SubMergedMass7", "SubMergedMass7")
            tableMapping.ColumnMappings.Add("SubMergedMass8", "SubMergedMass8")
            tableMapping.ColumnMappings.Add("SubMergedMass9", "SubMergedMass9")
            tableMapping.ColumnMappings.Add("SubMergedMass10", "SubMergedMass10")
            tableMapping.ColumnMappings.Add("Density1", "Density1")
            tableMapping.ColumnMappings.Add("Density2", "Density2")
            tableMapping.ColumnMappings.Add("Density3", "Density3")
            tableMapping.ColumnMappings.Add("Density4", "Density4")
            tableMapping.ColumnMappings.Add("Density5", "Density5")
            tableMapping.ColumnMappings.Add("Density6", "Density6")
            tableMapping.ColumnMappings.Add("Density7", "Density7")
            tableMapping.ColumnMappings.Add("Density8", "Density8")
            tableMapping.ColumnMappings.Add("Density9", "Density9")
            tableMapping.ColumnMappings.Add("Density10", "Density10")
            tableMapping.ColumnMappings.Add("AveDensity", "AveDensity")
            tableMapping.ColumnMappings.Add("MaxLoad1", "MaxLoad1")
            tableMapping.ColumnMappings.Add("MaxLoad2", "MaxLoad2")
            tableMapping.ColumnMappings.Add("MaxLoad3", "MaxLoad3")
            tableMapping.ColumnMappings.Add("MaxLoad4", "MaxLoad4")
            tableMapping.ColumnMappings.Add("MaxLoad5", "MaxLoad5")
            tableMapping.ColumnMappings.Add("MaxLoad6", "MaxLoad6")
            tableMapping.ColumnMappings.Add("MaxLoad7", "MaxLoad7")
            tableMapping.ColumnMappings.Add("MaxLoad8", "MaxLoad8")
            tableMapping.ColumnMappings.Add("MaxLoad9", "MaxLoad9")
            tableMapping.ColumnMappings.Add("MaxLoad10", "MaxLoad10")
            tableMapping.ColumnMappings.Add("CompStrength1", "CompStrength1")
            tableMapping.ColumnMappings.Add("CompStrength2", "CompStrength2")
            tableMapping.ColumnMappings.Add("CompStrength3", "CompStrength3")
            tableMapping.ColumnMappings.Add("CompStrength4", "CompStrength4")
            tableMapping.ColumnMappings.Add("CompStrength5", "CompStrength5")
            tableMapping.ColumnMappings.Add("CompStrength6", "CompStrength6")
            tableMapping.ColumnMappings.Add("CompStrength7", "CompStrength7")
            tableMapping.ColumnMappings.Add("CompStrength8", "CompStrength8")
            tableMapping.ColumnMappings.Add("CompStrength9", "CompStrength9")
            tableMapping.ColumnMappings.Add("CompStrength10", "CompStrength10")
            tableMapping.ColumnMappings.Add("AveStrength", "AveStrength")
            tableMapping.ColumnMappings.Add("FractureType1", "FractureType1")
            tableMapping.ColumnMappings.Add("FractureType2", "FractureType2")
            tableMapping.ColumnMappings.Add("FractureType3", "FractureType3")
            tableMapping.ColumnMappings.Add("FractureType4", "FractureType4")
            tableMapping.ColumnMappings.Add("FractureType5", "FractureType5")
            tableMapping.ColumnMappings.Add("FractureType6", "FractureType6")
            tableMapping.ColumnMappings.Add("FractureType7", "FractureType7")
            tableMapping.ColumnMappings.Add("FractureType8", "FractureType8")
            tableMapping.ColumnMappings.Add("FractureType9", "FractureType9")
            tableMapping.ColumnMappings.Add("FractureType10", "FractureType10")
            tableMapping.ColumnMappings.Add("SpecimenAge", "SpecimenAge")
            tableMapping.ColumnMappings.Add("StructuralElement", "StructuralElement")
            tableMapping.ColumnMappings.Add("SpecimenShape", "SpecimenShape")
            tableMapping.ColumnMappings.Add("TestedBy", "TestedBy")
            tableMapping.ColumnMappings.Add("CheckedBy", "CheckedBy")
            tableMapping.ColumnMappings.Add("ApprovedBy", "ApprovedBy")
            tableMapping.ColumnMappings.Add("CheckedDate", "CheckedDate")
            tableMapping.ColumnMappings.Add("ApprovedDate", "ApprovedDate")
            tableMapping.ColumnMappings.Add("Area1", "Area1")
            tableMapping.ColumnMappings.Add("Area2", "Area2")
            tableMapping.ColumnMappings.Add("Area3", "Area3")
            tableMapping.ColumnMappings.Add("Area4", "Area4")
            tableMapping.ColumnMappings.Add("Area5", "Area5")
            tableMapping.ColumnMappings.Add("Area6", "Area6")
            tableMapping.ColumnMappings.Add("Area7", "Area7")
            tableMapping.ColumnMappings.Add("Area8", "Area8")
            tableMapping.ColumnMappings.Add("Area9", "Area9")
            tableMapping.ColumnMappings.Add("Area10", "Area10")
            tableMapping.ColumnMappings.Add("Compliledby", "Compliledby")
            tableMapping.ColumnMappings.Add("1", "1")
            tableMapping.ColumnMappings.Add("2", "2")
            tableMapping.ColumnMappings.Add("3", "3")
            tableMapping.ColumnMappings.Add("4", "4")
            tableMapping.ColumnMappings.Add("5", "5")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [BatchTable] WHERE (([ProjectID] = @Original_ProjectID) AND ([BatchId"& _ 
                "] = @Original_BatchId) AND ((@IsNull_BatchIdentificationNo = 1 AND [BatchIdentif"& _ 
                "icationNo] IS NULL) OR ([BatchIdentificationNo] = @Original_BatchIdentificationN"& _ 
                "o)) AND ((@IsNull_NameOfSampler = 1 AND [NameOfSampler] IS NULL) OR ([NameOfSamp"& _ 
                "ler] = @Original_NameOfSampler)) AND ((@IsNull_BatchDate = 1 AND [BatchDate] IS "& _ 
                "NULL) OR ([BatchDate] = @Original_BatchDate)) AND ((@IsNull_BatchTime = 1 AND [B"& _ 
                "atchTime] IS NULL) OR ([BatchTime] = @Original_BatchTime)) AND ((@IsNull_Testdat"& _ 
                "e = 1 AND [Testdate] IS NULL) OR ([Testdate] = @Original_Testdate)) AND ((@IsNul"& _ 
                "l_CuringConditions = 1 AND [CuringConditions] IS NULL) OR ([CuringConditions] = "& _ 
                "@Original_CuringConditions)) AND ((@IsNull_TestingLaboratory = 1 AND [TestingLab"& _ 
                "oratory] IS NULL) OR ([TestingLaboratory] = @Original_TestingLaboratory)) AND (("& _ 
                "@IsNull_TestCertificate = 1 AND [TestCertificate] IS NULL) OR ([TestCertificate]"& _ 
                " = @Original_TestCertificate)) AND ((@IsNull_SupplySource = 1 AND [SupplySource]"& _ 
                " IS NULL) OR ([SupplySource] = @Original_SupplySource)) AND ((@IsNull_ConcreteGr"& _ 
                "ade = 1 AND [ConcreteGrade] IS NULL) OR ([ConcreteGrade] = @Original_ConcreteGra"& _ 
                "de)) AND ((@IsNull_SpecificationOfConcreteMix = 1 AND [SpecificationOfConcreteMi"& _ 
                "x] IS NULL) OR ([SpecificationOfConcreteMix] = @Original_SpecificationOfConcrete"& _ 
                "Mix)) AND ((@IsNull_NoOfSpecimen = 1 AND [NoOfSpecimen] IS NULL) OR ([NoOfSpecim"& _ 
                "en] = @Original_NoOfSpecimen)) AND ((@IsNull_SpecimenCondition = 1 AND [Specimen"& _ 
                "Condition] IS NULL) OR ([SpecimenCondition] = @Original_SpecimenCondition)) AND "& _ 
                "((@IsNull_MethodOfCompaction = 1 AND [MethodOfCompaction] IS NULL) OR ([MethodOf"& _ 
                "Compaction] = @Original_MethodOfCompaction)) AND ((@IsNull_DateDelivered = 1 AND"& _ 
                " [DateDelivered] IS NULL) OR ([DateDelivered] = @Original_DateDelivered)) AND (("& _ 
                "@IsNull_TestMethod = 1 AND [TestMethod] IS NULL) OR ([TestMethod] = @Original_Te"& _ 
                "stMethod)) AND ((@IsNull_Specimen1D = 1 AND [Specimen1D] IS NULL) OR ([Specimen1"& _ 
                "D] = @Original_Specimen1D)) AND ((@IsNull_Specimen2D = 1 AND [Specimen2D] IS NUL"& _ 
                "L) OR ([Specimen2D] = @Original_Specimen2D)) AND ((@IsNull_Specimen3D = 1 AND [S"& _ 
                "pecimen3D] IS NULL) OR ([Specimen3D] = @Original_Specimen3D)) AND ((@IsNull_Spec"& _ 
                "imen4D = 1 AND [Specimen4D] IS NULL) OR ([Specimen4D] = @Original_Specimen4D)) A"& _ 
                "ND ((@IsNull_Specimen5D = 1 AND [Specimen5D] IS NULL) OR ([Specimen5D] = @Origin"& _ 
                "al_Specimen5D)) AND ((@IsNull_Specimen6D = 1 AND [Specimen6D] IS NULL) OR ([Spec"& _ 
                "imen6D] = @Original_Specimen6D)) AND ((@IsNull_Specimen7D = 1 AND [Specimen7D] I"& _ 
                "S NULL) OR ([Specimen7D] = @Original_Specimen7D)) AND ((@IsNull_Specimen8D = 1 A"& _ 
                "ND [Specimen8D] IS NULL) OR ([Specimen8D] = @Original_Specimen8D)) AND ((@IsNull"& _ 
                "_Specimen9D = 1 AND [Specimen9D] IS NULL) OR ([Specimen9D] = @Original_Specimen9"& _ 
                "D)) AND ((@IsNull_Specimen10D = 1 AND [Specimen10D] IS NULL) OR ([Specimen10D] ="& _ 
                " @Original_Specimen10D)) AND ((@IsNull_Specimen1L = 1 AND [Specimen1L] IS NULL) "& _ 
                "OR ([Specimen1L] = @Original_Specimen1L)) AND ((@IsNull_Specimen2L = 1 AND [Spec"& _ 
                "imen2L] IS NULL) OR ([Specimen2L] = @Original_Specimen2L)) AND ((@IsNull_Specime"& _ 
                "n3L = 1 AND [Specimen3L] IS NULL) OR ([Specimen3L] = @Original_Specimen3L)) AND "& _ 
                "((@IsNull_Specimen4L = 1 AND [Specimen4L] IS NULL) OR ([Specimen4L] = @Original_"& _ 
                "Specimen4L)) AND ((@IsNull_Specimen5L = 1 AND [Specimen5L] IS NULL) OR ([Specime"& _ 
                "n5L] = @Original_Specimen5L)) AND ((@IsNull_Specimen6L = 1 AND [Specimen6L] IS N"& _ 
                "ULL) OR ([Specimen6L] = @Original_Specimen6L)) AND ((@IsNull_Specimen7L = 1 AND "& _ 
                "[Specimen7L] IS NULL) OR ([Specimen7L] = @Original_Specimen7L)) AND ((@IsNull_Sp"& _ 
                "ecimen8L = 1 AND [Specimen8L] IS NULL) OR ([Specimen8L] = @Original_Specimen8L))"& _ 
                " AND ((@IsNull_Specimen9L = 1 AND [Specimen9L] IS NULL) OR ([Specimen9L] = @Orig"& _ 
                "inal_Specimen9L)) AND ((@IsNull_Specimen10L = 1 AND [Specimen10L] IS NULL) OR (["& _ 
                "Specimen10L] = @Original_Specimen10L)) AND ((@IsNull_Specimen1H = 1 AND [Specime"& _ 
                "n1H] IS NULL) OR ([Specimen1H] = @Original_Specimen1H)) AND ((@IsNull_Specimen2H"& _ 
                " = 1 AND [Specimen2H] IS NULL) OR ([Specimen2H] = @Original_Specimen2H)) AND ((@"& _ 
                "IsNull_Specimen3H = 1 AND [Specimen3H] IS NULL) OR ([Specimen3H] = @Original_Spe"& _ 
                "cimen3H)) AND ((@IsNull_Specimen4H = 1 AND [Specimen4H] IS NULL) OR ([Specimen4H"& _ 
                "] = @Original_Specimen4H)) AND ((@IsNull_Specimen5H = 1 AND [Specimen5H] IS NULL"& _ 
                ") OR ([Specimen5H] = @Original_Specimen5H)) AND ((@IsNull_Specimen6H = 1 AND [Sp"& _ 
                "ecimen6H] IS NULL) OR ([Specimen6H] = @Original_Specimen6H)) AND ((@IsNull_Speci"& _ 
                "men7H = 1 AND [Specimen7H] IS NULL) OR ([Specimen7H] = @Original_Specimen7H)) AN"& _ 
                "D ((@IsNull_Specimen8H = 1 AND [Specimen8H] IS NULL) OR ([Specimen8H] = @Origina"& _ 
                "l_Specimen8H)) AND ((@IsNull_Specimen9H = 1 AND [Specimen9H] IS NULL) OR ([Speci"& _ 
                "men9H] = @Original_Specimen9H)) AND ((@IsNull_Specimen10H = 1 AND [Specimen10H] "& _ 
                "IS NULL) OR ([Specimen10H] = @Original_Specimen10H)) AND ((@IsNull_Mass1 = 1 AND"& _ 
                " [Mass1] IS NULL) OR ([Mass1] = @Original_Mass1)) AND ((@IsNull_Mass2 = 1 AND [M"& _ 
                "ass2] IS NULL) OR ([Mass2] = @Original_Mass2)) AND ((@IsNull_Mass3 = 1 AND [Mass"& _ 
                "3] IS NULL) OR ([Mass3] = @Original_Mass3)) AND ((@IsNull_Mass4 = 1 AND [Mass4] "& _ 
                "IS NULL) OR ([Mass4] = @Original_Mass4)) AND ((@IsNull_Mass5 = 1 AND [Mass5] IS "& _ 
                "NULL) OR ([Mass5] = @Original_Mass5)) AND ((@IsNull_Mass6 = 1 AND [Mass6] IS NUL"& _ 
                "L) OR ([Mass6] = @Original_Mass6)) AND ((@IsNull_Mass7 = 1 AND [Mass7] IS NULL) "& _ 
                "OR ([Mass7] = @Original_Mass7)) AND ((@IsNull_Mass8 = 1 AND [Mass8] IS NULL) OR "& _ 
                "([Mass8] = @Original_Mass8)) AND ((@IsNull_Mass9 = 1 AND [Mass9] IS NULL) OR ([M"& _ 
                "ass9] = @Original_Mass9)) AND ((@IsNull_Mass10 = 1 AND [Mass10] IS NULL) OR ([Ma"& _ 
                "ss10] = @Original_Mass10)) AND ((@IsNull_AveMass = 1 AND [AveMass] IS NULL) OR ("& _ 
                "[AveMass] = @Original_AveMass)) AND ((@IsNull_SubMergedMass1 = 1 AND [SubMergedM"& _ 
                "ass1] IS NULL) OR ([SubMergedMass1] = @Original_SubMergedMass1)) AND ((@IsNull_S"& _ 
                "ubMergedMass2 = 1 AND [SubMergedMass2] IS NULL) OR ([SubMergedMass2] = @Original"& _ 
                "_SubMergedMass2)) AND ((@IsNull_SubMergedMass3 = 1 AND [SubMergedMass3] IS NULL)"& _ 
                " OR ([SubMergedMass3] = @Original_SubMergedMass3)) AND ((@IsNull_SubMergedMass4 "& _ 
                "= 1 AND [SubMergedMass4] IS NULL) OR ([SubMergedMass4] = @Original_SubMergedMass"& _ 
                "4)) AND ((@IsNull_SubMergedMass5 = 1 AND [SubMergedMass5] IS NULL) OR ([SubMerge"& _ 
                "dMass5] = @Original_SubMergedMass5)) AND ((@IsNull_SubMergedMass6 = 1 AND [SubMe"& _ 
                "rgedMass6] IS NULL) OR ([SubMergedMass6] = @Original_SubMergedMass6)) AND ((@IsN"& _ 
                "ull_SubMergedMass7 = 1 AND [SubMergedMass7] IS NULL) OR ([SubMergedMass7] = @Ori"& _ 
                "ginal_SubMergedMass7)) AND ((@IsNull_SubMergedMass8 = 1 AND [SubMergedMass8] IS "& _ 
                "NULL) OR ([SubMergedMass8] = @Original_SubMergedMass8)) AND ((@IsNull_SubMergedM"& _ 
                "ass9 = 1 AND [SubMergedMass9] IS NULL) OR ([SubMergedMass9] = @Original_SubMerge"& _ 
                "dMass9)) AND ((@IsNull_SubMergedMass10 = 1 AND [SubMergedMass10] IS NULL) OR ([S"& _ 
                "ubMergedMass10] = @Original_SubMergedMass10)) AND ((@IsNull_Density1 = 1 AND [De"& _ 
                "nsity1] IS NULL) OR ([Density1] = @Original_Density1)) AND ((@IsNull_Density2 = "& _ 
                "1 AND [Density2] IS NULL) OR ([Density2] = @Original_Density2)) AND ((@IsNull_De"& _ 
                "nsity3 = 1 AND [Density3] IS NULL) OR ([Density3] = @Original_Density3)) AND ((@"& _ 
                "IsNull_Density4 = 1 AND [Density4] IS NULL) OR ([Density4] = @Original_Density4)"& _ 
                ") AND ((@IsNull_Density5 = 1 AND [Density5] IS NULL) OR ([Density5] = @Original_"& _ 
                "Density5)) AND ((@IsNull_Density6 = 1 AND [Density6] IS NULL) OR ([Density6] = @"& _ 
                "Original_Density6)) AND ((@IsNull_Density7 = 1 AND [Density7] IS NULL) OR ([Dens"& _ 
                "ity7] = @Original_Density7)) AND ((@IsNull_Density8 = 1 AND [Density8] IS NULL) "& _ 
                "OR ([Density8] = @Original_Density8)) AND ((@IsNull_Density9 = 1 AND [Density9] "& _ 
                "IS NULL) OR ([Density9] = @Original_Density9)) AND ((@IsNull_Density10 = 1 AND ["& _ 
                "Density10] IS NULL) OR ([Density10] = @Original_Density10)) AND ((@IsNull_AveDen"& _ 
                "sity = 1 AND [AveDensity] IS NULL) OR ([AveDensity] = @Original_AveDensity)) AND"& _ 
                " ((@IsNull_MaxLoad1 = 1 AND [MaxLoad1] IS NULL) OR ([MaxLoad1] = @Original_MaxLo"& _ 
                "ad1)) AND ((@IsNull_MaxLoad2 = 1 AND [MaxLoad2] IS NULL) OR ([MaxLoad2] = @Origi"& _ 
                "nal_MaxLoad2)) AND ((@IsNull_MaxLoad3 = 1 AND [MaxLoad3] IS NULL) OR ([MaxLoad3]"& _ 
                " = @Original_MaxLoad3)) AND ((@IsNull_MaxLoad4 = 1 AND [MaxLoad4] IS NULL) OR (["& _ 
                "MaxLoad4] = @Original_MaxLoad4)) AND ((@IsNull_MaxLoad5 = 1 AND [MaxLoad5] IS NU"& _ 
                "LL) OR ([MaxLoad5] = @Original_MaxLoad5)) AND ((@IsNull_MaxLoad6 = 1 AND [MaxLoa"& _ 
                "d6] IS NULL) OR ([MaxLoad6] = @Original_MaxLoad6)) AND ((@IsNull_MaxLoad7 = 1 AN"& _ 
                "D [MaxLoad7] IS NULL) OR ([MaxLoad7] = @Original_MaxLoad7)) AND ((@IsNull_MaxLoa"& _ 
                "d8 = 1 AND [MaxLoad8] IS NULL) OR ([MaxLoad8] = @Original_MaxLoad8)) AND ((@IsNu"& _ 
                "ll_MaxLoad9 = 1 AND [MaxLoad9] IS NULL) OR ([MaxLoad9] = @Original_MaxLoad9)) AN"& _ 
                "D ((@IsNull_MaxLoad10 = 1 AND [MaxLoad10] IS NULL) OR ([MaxLoad10] = @Original_M"& _ 
                "axLoad10)) AND ((@IsNull_CompStrength1 = 1 AND [CompStrength1] IS NULL) OR ([Com"& _ 
                "pStrength1] = @Original_CompStrength1)) AND ((@IsNull_CompStrength2 = 1 AND [Com"& _ 
                "pStrength2] IS NULL) OR ([CompStrength2] = @Original_CompStrength2)) AND ((@IsNu"& _ 
                "ll_CompStrength3 = 1 AND [CompStrength3] IS NULL) OR ([CompStrength3] = @Origina"& _ 
                "l_CompStrength3)) AND ((@IsNull_CompStrength4 = 1 AND [CompStrength4] IS NULL) O"& _ 
                "R ([CompStrength4] = @Original_CompStrength4)) AND ((@IsNull_CompStrength5 = 1 A"& _ 
                "ND [CompStrength5] IS NULL) OR ([CompStrength5] = @Original_CompStrength5)) AND "& _ 
                "((@IsNull_CompStrength6 = 1 AND [CompStrength6] IS NULL) OR ([CompStrength6] = @"& _ 
                "Original_CompStrength6)) AND ((@IsNull_CompStrength7 = 1 AND [CompStrength7] IS "& _ 
                "NULL) OR ([CompStrength7] = @Original_CompStrength7)) AND ((@IsNull_CompStrength"& _ 
                "8 = 1 AND [CompStrength8] IS NULL) OR ([CompStrength8] = @Original_CompStrength8"& _ 
                ")) AND ((@IsNull_CompStrength9 = 1 AND [CompStrength9] IS NULL) OR ([CompStrengt"& _ 
                "h9] = @Original_CompStrength9)) AND ((@IsNull_CompStrength10 = 1 AND [CompStreng"& _ 
                "th10] IS NULL) OR ([CompStrength10] = @Original_CompStrength10)) AND ((@IsNull_A"& _ 
                "veStrength = 1 AND [AveStrength] IS NULL) OR ([AveStrength] = @Original_AveStren"& _ 
                "gth)) AND ((@IsNull_FractureType1 = 1 AND [FractureType1] IS NULL) OR ([Fracture"& _ 
                "Type1] = @Original_FractureType1)) AND ((@IsNull_FractureType2 = 1 AND [Fracture"& _ 
                "Type2] IS NULL) OR ([FractureType2] = @Original_FractureType2)) AND ((@IsNull_Fr"& _ 
                "actureType3 = 1 AND [FractureType3] IS NULL) OR ([FractureType3] = @Original_Fra"& _ 
                "ctureType3)) AND ((@IsNull_FractureType4 = 1 AND [FractureType4] IS NULL) OR ([F"& _ 
                "ractureType4] = @Original_FractureType4)) AND ((@IsNull_FractureType5 = 1 AND [F"& _ 
                "ractureType5] IS NULL) OR ([FractureType5] = @Original_FractureType5)) AND ((@Is"& _ 
                "Null_FractureType6 = 1 AND [FractureType6] IS NULL) OR ([FractureType6] = @Origi"& _ 
                "nal_FractureType6)) AND ((@IsNull_FractureType7 = 1 AND [FractureType7] IS NULL)"& _ 
                " OR ([FractureType7] = @Original_FractureType7)) AND ((@IsNull_FractureType8 = 1"& _ 
                " AND [FractureType8] IS NULL) OR ([FractureType8] = @Original_FractureType8)) AN"& _ 
                "D ((@IsNull_FractureType9 = 1 AND [FractureType9] IS NULL) OR ([FractureType9] ="& _ 
                " @Original_FractureType9)) AND ((@IsNull_FractureType10 = 1 AND [FractureType10]"& _ 
                " IS NULL) OR ([FractureType10] = @Original_FractureType10)) AND ((@IsNull_Specim"& _ 
                "enAge = 1 AND [SpecimenAge] IS NULL) OR ([SpecimenAge] = @Original_SpecimenAge))"& _ 
                " AND ((@IsNull_StructuralElement = 1 AND [StructuralElement] IS NULL) OR ([Struc"& _ 
                "turalElement] = @Original_StructuralElement)) AND ((@IsNull_SpecimenShape = 1 AN"& _ 
                "D [SpecimenShape] IS NULL) OR ([SpecimenShape] = @Original_SpecimenShape)) AND ("& _ 
                "(@IsNull_TestedBy = 1 AND [TestedBy] IS NULL) OR ([TestedBy] = @Original_TestedB"& _ 
                "y)) AND ((@IsNull_CheckedBy = 1 AND [CheckedBy] IS NULL) OR ([CheckedBy] = @Orig"& _ 
                "inal_CheckedBy)) AND ((@IsNull_ApprovedBy = 1 AND [ApprovedBy] IS NULL) OR ([App"& _ 
                "rovedBy] = @Original_ApprovedBy)) AND ((@IsNull_CheckedDate = 1 AND [CheckedDate"& _ 
                "] IS NULL) OR ([CheckedDate] = @Original_CheckedDate)) AND ((@IsNull_ApprovedDat"& _ 
                "e = 1 AND [ApprovedDate] IS NULL) OR ([ApprovedDate] = @Original_ApprovedDate)) "& _ 
                "AND ((@IsNull_Area1 = 1 AND [Area1] IS NULL) OR ([Area1] = @Original_Area1)) AND"& _ 
                " ((@IsNull_Area2 = 1 AND [Area2] IS NULL) OR ([Area2] = @Original_Area2)) AND (("& _ 
                "@IsNull_Area3 = 1 AND [Area3] IS NULL) OR ([Area3] = @Original_Area3)) AND ((@Is"& _ 
                "Null_Area4 = 1 AND [Area4] IS NULL) OR ([Area4] = @Original_Area4)) AND ((@IsNul"& _ 
                "l_Area5 = 1 AND [Area5] IS NULL) OR ([Area5] = @Original_Area5)) AND ((@IsNull_A"& _ 
                "rea6 = 1 AND [Area6] IS NULL) OR ([Area6] = @Original_Area6)) AND ((@IsNull_Area"& _ 
                "7 = 1 AND [Area7] IS NULL) OR ([Area7] = @Original_Area7)) AND ((@IsNull_Area8 ="& _ 
                " 1 AND [Area8] IS NULL) OR ([Area8] = @Original_Area8)) AND ((@IsNull_Area9 = 1 "& _ 
                "AND [Area9] IS NULL) OR ([Area9] = @Original_Area9)) AND ((@IsNull_Area10 = 1 AN"& _ 
                "D [Area10] IS NULL) OR ([Area10] = @Original_Area10)) AND ((@IsNull_Compliledby "& _ 
                "= 1 AND [Compliledby] IS NULL) OR ([Compliledby] = @Original_Compliledby)) AND ("& _ 
                "(@p3 = 1 AND [1] IS NULL) OR ([1] = @p2)) AND ((@p6 = 1 AND [2] IS NULL) OR ([2]"& _ 
                " = @p5)) AND ((@p9 = 1 AND [3] IS NULL) OR ([3] = @p8)) AND ((@p12 = 1 AND [4] I"& _ 
                "S NULL) OR ([4] = @p11)) AND ((@p15 = 1 AND [5] IS NULL) OR ([5] = @p14)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ProjectID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BatchId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BatchId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BatchIdentificationNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BatchIdentificationNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BatchIdentificationNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BatchIdentificationNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NameOfSampler", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NameOfSampler", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NameOfSampler", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NameOfSampler", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BatchDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BatchDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BatchDate", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BatchDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BatchTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BatchTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BatchTime", Global.System.Data.SqlDbType.Time, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BatchTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Testdate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Testdate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Testdate", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Testdate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CuringConditions", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CuringConditions", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CuringConditions", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CuringConditions", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TestingLaboratory", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TestingLaboratory", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TestingLaboratory", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TestingLaboratory", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TestCertificate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TestCertificate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TestCertificate", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TestCertificate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SupplySource", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SupplySource", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SupplySource", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SupplySource", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ConcreteGrade", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConcreteGrade", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ConcreteGrade", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConcreteGrade", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SpecificationOfConcreteMix", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpecificationOfConcreteMix", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SpecificationOfConcreteMix", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpecificationOfConcreteMix", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NoOfSpecimen", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NoOfSpecimen", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NoOfSpecimen", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NoOfSpecimen", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SpecimenCondition", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpecimenCondition", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SpecimenCondition", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpecimenCondition", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MethodOfCompaction", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MethodOfCompaction", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MethodOfCompaction", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MethodOfCompaction", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DateDelivered", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateDelivered", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DateDelivered", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateDelivered", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TestMethod", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TestMethod", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TestMethod", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TestMethod", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen1D", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen1D", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen1D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen1D", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen2D", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen2D", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen2D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen2D", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen3D", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen3D", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen3D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen3D", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen4D", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen4D", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen4D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen4D", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen5D", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen5D", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen5D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen5D", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen6D", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen6D", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen6D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen6D", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen7D", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen7D", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen7D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen7D", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen8D", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen8D", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen8D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen8D", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen9D", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen9D", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen9D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen9D", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen10D", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen10D", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen10D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen10D", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen1L", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen1L", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen1L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen1L", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen2L", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen2L", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen2L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen2L", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen3L", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen3L", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen3L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen3L", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen4L", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen4L", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen4L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen4L", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen5L", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen5L", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen5L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen5L", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen6L", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen6L", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen6L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen6L", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen7L", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen7L", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen7L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen7L", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen8L", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen8L", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen8L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen8L", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen9L", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen9L", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen9L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen9L", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen10L", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen10L", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen10L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen10L", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen1H", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen1H", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen1H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen1H", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen2H", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen2H", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen2H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen2H", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen3H", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen3H", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen3H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen3H", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen4H", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen4H", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen4H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen4H", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen5H", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen5H", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen5H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen5H", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen6H", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen6H", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen6H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen6H", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen7H", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen7H", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen7H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen7H", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen8H", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen8H", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen8H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen8H", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen9H", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen9H", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen9H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen9H", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen10H", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen10H", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen10H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen10H", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Mass1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Mass1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Mass2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Mass2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Mass3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Mass3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Mass4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Mass4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Mass5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Mass5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Mass6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass6", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Mass6", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass6", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Mass7", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass7", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Mass7", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass7", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Mass8", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass8", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Mass8", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass8", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Mass9", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass9", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Mass9", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass9", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Mass10", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass10", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Mass10", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass10", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AveMass", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AveMass", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AveMass", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AveMass", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SubMergedMass1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SubMergedMass1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SubMergedMass2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SubMergedMass2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SubMergedMass3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SubMergedMass3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SubMergedMass4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SubMergedMass4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SubMergedMass5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SubMergedMass5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SubMergedMass6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass6", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SubMergedMass6", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass6", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SubMergedMass7", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass7", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SubMergedMass7", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass7", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SubMergedMass8", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass8", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SubMergedMass8", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass8", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SubMergedMass9", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass9", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SubMergedMass9", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass9", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SubMergedMass10", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass10", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SubMergedMass10", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass10", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Density1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Density1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Density2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Density2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Density3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Density3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Density4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Density4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Density5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Density5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Density6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density6", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Density6", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density6", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Density7", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density7", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Density7", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density7", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Density8", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density8", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Density8", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density8", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Density9", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density9", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Density9", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density9", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Density10", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density10", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Density10", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density10", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AveDensity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AveDensity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AveDensity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AveDensity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaxLoad1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaxLoad1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaxLoad2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaxLoad2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaxLoad3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaxLoad3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaxLoad4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaxLoad4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaxLoad5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaxLoad5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaxLoad6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad6", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaxLoad6", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad6", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaxLoad7", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad7", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaxLoad7", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad7", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaxLoad8", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad8", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaxLoad8", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad8", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaxLoad9", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad9", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaxLoad9", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad9", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaxLoad10", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad10", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaxLoad10", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad10", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CompStrength1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CompStrength1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CompStrength2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CompStrength2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CompStrength3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CompStrength3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CompStrength4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CompStrength4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CompStrength5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CompStrength5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CompStrength6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength6", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CompStrength6", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength6", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CompStrength7", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength7", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CompStrength7", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength7", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CompStrength8", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength8", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CompStrength8", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength8", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CompStrength9", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength9", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CompStrength9", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength9", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CompStrength10", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength10", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CompStrength10", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength10", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AveStrength", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AveStrength", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AveStrength", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AveStrength", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FractureType1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FractureType1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FractureType2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FractureType2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FractureType3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FractureType3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FractureType4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FractureType4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FractureType5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FractureType5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FractureType6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType6", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FractureType6", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType6", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FractureType7", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType7", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FractureType7", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType7", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FractureType8", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType8", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FractureType8", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType8", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FractureType9", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType9", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FractureType9", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType9", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FractureType10", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType10", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FractureType10", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType10", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SpecimenAge", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpecimenAge", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SpecimenAge", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpecimenAge", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_StructuralElement", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StructuralElement", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_StructuralElement", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StructuralElement", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SpecimenShape", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpecimenShape", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SpecimenShape", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpecimenShape", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TestedBy", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TestedBy", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TestedBy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TestedBy", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CheckedBy", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CheckedBy", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CheckedBy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CheckedBy", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ApprovedBy", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ApprovedBy", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ApprovedBy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ApprovedBy", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CheckedDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CheckedDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CheckedDate", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CheckedDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ApprovedDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ApprovedDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ApprovedDate", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ApprovedDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Area1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Area1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Area2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Area2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Area3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Area3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Area4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Area4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Area5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Area5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Area6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area6", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Area6", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area6", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Area7", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area7", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Area7", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area7", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Area8", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area8", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Area8", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area8", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Area9", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area9", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Area9", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area9", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Area10", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area10", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Area10", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area10", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Compliledby", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Compliledby", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Compliledby", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Compliledby", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p9", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p8", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p12", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p11", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p15", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p14", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [BatchTable] ([ProjectID], [BatchIdentificationNo], [NameOfSampler], "& _ 
                "[BatchDate], [BatchTime], [Testdate], [CuringConditions], [TestingLaboratory], ["& _ 
                "TestCertificate], [SupplySource], [ConcreteGrade], [SpecificationOfConcreteMix],"& _ 
                " [NoOfSpecimen], [SpecimenCondition], [MethodOfCompaction], [DateDelivered], [Te"& _ 
                "stMethod], [Specimen1D], [Specimen2D], [Specimen3D], [Specimen4D], [Specimen5D],"& _ 
                " [Specimen6D], [Specimen7D], [Specimen8D], [Specimen9D], [Specimen10D], [Specime"& _ 
                "n1L], [Specimen2L], [Specimen3L], [Specimen4L], [Specimen5L], [Specimen6L], [Spe"& _ 
                "cimen7L], [Specimen8L], [Specimen9L], [Specimen10L], [Specimen1H], [Specimen2H],"& _ 
                " [Specimen3H], [Specimen4H], [Specimen5H], [Specimen6H], [Specimen7H], [Specimen"& _ 
                "8H], [Specimen9H], [Specimen10H], [Mass1], [Mass2], [Mass3], [Mass4], [Mass5], ["& _ 
                "Mass6], [Mass7], [Mass8], [Mass9], [Mass10], [AveMass], [SubMergedMass1], [SubMe"& _ 
                "rgedMass2], [SubMergedMass3], [SubMergedMass4], [SubMergedMass5], [SubMergedMass"& _ 
                "6], [SubMergedMass7], [SubMergedMass8], [SubMergedMass9], [SubMergedMass10], [De"& _ 
                "nsity1], [Density2], [Density3], [Density4], [Density5], [Density6], [Density7],"& _ 
                " [Density8], [Density9], [Density10], [AveDensity], [MaxLoad1], [MaxLoad2], [Max"& _ 
                "Load3], [MaxLoad4], [MaxLoad5], [MaxLoad6], [MaxLoad7], [MaxLoad8], [MaxLoad9], "& _ 
                "[MaxLoad10], [CompStrength1], [CompStrength2], [CompStrength3], [CompStrength4],"& _ 
                " [CompStrength5], [CompStrength6], [CompStrength7], [CompStrength8], [CompStreng"& _ 
                "th9], [CompStrength10], [AveStrength], [FractureType1], [FractureType2], [Fractu"& _ 
                "reType3], [FractureType4], [FractureType5], [FractureType6], [FractureType7], [F"& _ 
                "ractureType8], [FractureType9], [FractureType10], [StructuralElement], [Specimen"& _ 
                "Shape], [TestedBy], [CheckedBy], [ApprovedBy], [CheckedDate], [ApprovedDate], [A"& _ 
                "rea1], [Area2], [Area3], [Area4], [Area5], [Area6], [Area7], [Area8], [Area9], ["& _ 
                "Area10], [Compliledby], [1], [2], [3], [4], [5]) VALUES (@ProjectID, @BatchIdent"& _ 
                "ificationNo, @NameOfSampler, @BatchDate, @BatchTime, @Testdate, @CuringCondition"& _ 
                "s, @TestingLaboratory, @TestCertificate, @SupplySource, @ConcreteGrade, @Specifi"& _ 
                "cationOfConcreteMix, @NoOfSpecimen, @SpecimenCondition, @MethodOfCompaction, @Da"& _ 
                "teDelivered, @TestMethod, @Specimen1D, @Specimen2D, @Specimen3D, @Specimen4D, @S"& _ 
                "pecimen5D, @Specimen6D, @Specimen7D, @Specimen8D, @Specimen9D, @Specimen10D, @Sp"& _ 
                "ecimen1L, @Specimen2L, @Specimen3L, @Specimen4L, @Specimen5L, @Specimen6L, @Spec"& _ 
                "imen7L, @Specimen8L, @Specimen9L, @Specimen10L, @Specimen1H, @Specimen2H, @Speci"& _ 
                "men3H, @Specimen4H, @Specimen5H, @Specimen6H, @Specimen7H, @Specimen8H, @Specime"& _ 
                "n9H, @Specimen10H, @Mass1, @Mass2, @Mass3, @Mass4, @Mass5, @Mass6, @Mass7, @Mass"& _ 
                "8, @Mass9, @Mass10, @AveMass, @SubMergedMass1, @SubMergedMass2, @SubMergedMass3,"& _ 
                " @SubMergedMass4, @SubMergedMass5, @SubMergedMass6, @SubMergedMass7, @SubMergedM"& _ 
                "ass8, @SubMergedMass9, @SubMergedMass10, @Density1, @Density2, @Density3, @Densi"& _ 
                "ty4, @Density5, @Density6, @Density7, @Density8, @Density9, @Density10, @AveDens"& _ 
                "ity, @MaxLoad1, @MaxLoad2, @MaxLoad3, @MaxLoad4, @MaxLoad5, @MaxLoad6, @MaxLoad7"& _ 
                ", @MaxLoad8, @MaxLoad9, @MaxLoad10, @CompStrength1, @CompStrength2, @CompStrengt"& _ 
                "h3, @CompStrength4, @CompStrength5, @CompStrength6, @CompStrength7, @CompStrengt"& _ 
                "h8, @CompStrength9, @CompStrength10, @AveStrength, @FractureType1, @FractureType"& _ 
                "2, @FractureType3, @FractureType4, @FractureType5, @FractureType6, @FractureType"& _ 
                "7, @FractureType8, @FractureType9, @FractureType10, @StructuralElement, @Specime"& _ 
                "nShape, @TestedBy, @CheckedBy, @ApprovedBy, @CheckedDate, @ApprovedDate, @Area1,"& _ 
                " @Area2, @Area3, @Area4, @Area5, @Area6, @Area7, @Area8, @Area9, @Area10, @Compl"& _ 
                "iledby, @p1, @p4, @p7, @p10, @p13);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ProjectID, BatchId, BatchIdentificat"& _ 
                "ionNo, NameOfSampler, BatchDate, BatchTime, Testdate, CuringConditions, TestingL"& _ 
                "aboratory, TestCertificate, SupplySource, ConcreteGrade, SpecificationOfConcrete"& _ 
                "Mix, NoOfSpecimen, SpecimenCondition, MethodOfCompaction, DateDelivered, TestMet"& _ 
                "hod, Specimen1D, Specimen2D, Specimen3D, Specimen4D, Specimen5D, Specimen6D, Spe"& _ 
                "cimen7D, Specimen8D, Specimen9D, Specimen10D, Specimen1L, Specimen2L, Specimen3L"& _ 
                ", Specimen4L, Specimen5L, Specimen6L, Specimen7L, Specimen8L, Specimen9L, Specim"& _ 
                "en10L, Specimen1H, Specimen2H, Specimen3H, Specimen4H, Specimen5H, Specimen6H, S"& _ 
                "pecimen7H, Specimen8H, Specimen9H, Specimen10H, Mass1, Mass2, Mass3, Mass4, Mass"& _ 
                "5, Mass6, Mass7, Mass8, Mass9, Mass10, AveMass, SubMergedMass1, SubMergedMass2, "& _ 
                "SubMergedMass3, SubMergedMass4, SubMergedMass5, SubMergedMass6, SubMergedMass7, "& _ 
                "SubMergedMass8, SubMergedMass9, SubMergedMass10, Density1, Density2, Density3, D"& _ 
                "ensity4, Density5, Density6, Density7, Density8, Density9, Density10, AveDensity"& _ 
                ", MaxLoad1, MaxLoad2, MaxLoad3, MaxLoad4, MaxLoad5, MaxLoad6, MaxLoad7, MaxLoad8"& _ 
                ", MaxLoad9, MaxLoad10, CompStrength1, CompStrength2, CompStrength3, CompStrength"& _ 
                "4, CompStrength5, CompStrength6, CompStrength7, CompStrength8, CompStrength9, Co"& _ 
                "mpStrength10, AveStrength, FractureType1, FractureType2, FractureType3, Fracture"& _ 
                "Type4, FractureType5, FractureType6, FractureType7, FractureType8, FractureType9"& _ 
                ", FractureType10, SpecimenAge, StructuralElement, SpecimenShape, TestedBy, Check"& _ 
                "edBy, ApprovedBy, CheckedDate, ApprovedDate, Area1, Area2, Area3, Area4, Area5, "& _ 
                "Area6, Area7, Area8, Area9, Area10, Compliledby, [1], [2], [3], [4], [5] FROM Ba"& _ 
                "tchTable AS BatchTable WHERE (BatchId = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProjectID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BatchIdentificationNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BatchIdentificationNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NameOfSampler", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NameOfSampler", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BatchDate", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BatchDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BatchTime", Global.System.Data.SqlDbType.Time, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BatchTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Testdate", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Testdate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CuringConditions", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CuringConditions", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TestingLaboratory", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TestingLaboratory", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TestCertificate", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TestCertificate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SupplySource", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SupplySource", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConcreteGrade", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConcreteGrade", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SpecificationOfConcreteMix", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpecificationOfConcreteMix", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NoOfSpecimen", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NoOfSpecimen", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SpecimenCondition", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpecimenCondition", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MethodOfCompaction", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MethodOfCompaction", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateDelivered", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateDelivered", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TestMethod", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TestMethod", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen1D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen1D", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen2D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen2D", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen3D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen3D", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen4D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen4D", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen5D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen5D", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen6D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen6D", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen7D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen7D", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen8D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen8D", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen9D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen9D", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen10D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen10D", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen1L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen1L", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen2L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen2L", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen3L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen3L", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen4L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen4L", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen5L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen5L", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen6L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen6L", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen7L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen7L", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen8L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen8L", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen9L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen9L", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen10L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen10L", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen1H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen1H", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen2H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen2H", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen3H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen3H", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen4H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen4H", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen5H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen5H", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen6H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen6H", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen7H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen7H", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen8H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen8H", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen9H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen9H", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen10H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen10H", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mass1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mass2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mass3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mass4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mass5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mass6", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mass7", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass7", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mass8", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass8", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mass9", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass9", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mass10", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AveMass", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AveMass", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubMergedMass1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubMergedMass2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubMergedMass3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubMergedMass4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubMergedMass5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubMergedMass6", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubMergedMass7", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass7", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubMergedMass8", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass8", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubMergedMass9", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass9", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubMergedMass10", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Density1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Density2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Density3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Density4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Density5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Density6", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Density7", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density7", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Density8", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density8", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Density9", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density9", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Density10", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AveDensity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AveDensity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaxLoad1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaxLoad2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaxLoad3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaxLoad4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaxLoad5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaxLoad6", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaxLoad7", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad7", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaxLoad8", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad8", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaxLoad9", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad9", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaxLoad10", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CompStrength1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CompStrength2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CompStrength3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CompStrength4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CompStrength5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CompStrength6", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CompStrength7", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength7", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CompStrength8", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength8", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CompStrength9", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength9", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CompStrength10", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AveStrength", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AveStrength", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FractureType1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FractureType2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FractureType3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FractureType4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FractureType5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FractureType6", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FractureType7", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType7", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FractureType8", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType8", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FractureType9", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType9", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FractureType10", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StructuralElement", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StructuralElement", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SpecimenShape", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpecimenShape", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TestedBy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TestedBy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CheckedBy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CheckedBy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ApprovedBy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ApprovedBy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CheckedDate", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CheckedDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ApprovedDate", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ApprovedDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Area1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Area2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Area3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Area4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Area5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Area6", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Area7", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area7", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Area8", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area8", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Area9", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area9", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Area10", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Compliledby", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Compliledby", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p7", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p10", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p13", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [BatchTable] SET [ProjectID] = @ProjectID, [BatchIdentificationNo] = @Batc"& _ 
                "hIdentificationNo, [NameOfSampler] = @NameOfSampler, [BatchDate] = @BatchDate, ["& _ 
                "BatchTime] = @BatchTime, [Testdate] = @Testdate, [CuringConditions] = @CuringCon"& _ 
                "ditions, [TestingLaboratory] = @TestingLaboratory, [TestCertificate] = @TestCert"& _ 
                "ificate, [SupplySource] = @SupplySource, [ConcreteGrade] = @ConcreteGrade, [Spec"& _ 
                "ificationOfConcreteMix] = @SpecificationOfConcreteMix, [NoOfSpecimen] = @NoOfSpe"& _ 
                "cimen, [SpecimenCondition] = @SpecimenCondition, [MethodOfCompaction] = @MethodO"& _ 
                "fCompaction, [DateDelivered] = @DateDelivered, [TestMethod] = @TestMethod, [Spec"& _ 
                "imen1D] = @Specimen1D, [Specimen2D] = @Specimen2D, [Specimen3D] = @Specimen3D, ["& _ 
                "Specimen4D] = @Specimen4D, [Specimen5D] = @Specimen5D, [Specimen6D] = @Specimen6"& _ 
                "D, [Specimen7D] = @Specimen7D, [Specimen8D] = @Specimen8D, [Specimen9D] = @Speci"& _ 
                "men9D, [Specimen10D] = @Specimen10D, [Specimen1L] = @Specimen1L, [Specimen2L] = "& _ 
                "@Specimen2L, [Specimen3L] = @Specimen3L, [Specimen4L] = @Specimen4L, [Specimen5L"& _ 
                "] = @Specimen5L, [Specimen6L] = @Specimen6L, [Specimen7L] = @Specimen7L, [Specim"& _ 
                "en8L] = @Specimen8L, [Specimen9L] = @Specimen9L, [Specimen10L] = @Specimen10L, ["& _ 
                "Specimen1H] = @Specimen1H, [Specimen2H] = @Specimen2H, [Specimen3H] = @Specimen3"& _ 
                "H, [Specimen4H] = @Specimen4H, [Specimen5H] = @Specimen5H, [Specimen6H] = @Speci"& _ 
                "men6H, [Specimen7H] = @Specimen7H, [Specimen8H] = @Specimen8H, [Specimen9H] = @S"& _ 
                "pecimen9H, [Specimen10H] = @Specimen10H, [Mass1] = @Mass1, [Mass2] = @Mass2, [Ma"& _ 
                "ss3] = @Mass3, [Mass4] = @Mass4, [Mass5] = @Mass5, [Mass6] = @Mass6, [Mass7] = @"& _ 
                "Mass7, [Mass8] = @Mass8, [Mass9] = @Mass9, [Mass10] = @Mass10, [AveMass] = @AveM"& _ 
                "ass, [SubMergedMass1] = @SubMergedMass1, [SubMergedMass2] = @SubMergedMass2, [Su"& _ 
                "bMergedMass3] = @SubMergedMass3, [SubMergedMass4] = @SubMergedMass4, [SubMergedM"& _ 
                "ass5] = @SubMergedMass5, [SubMergedMass6] = @SubMergedMass6, [SubMergedMass7] = "& _ 
                "@SubMergedMass7, [SubMergedMass8] = @SubMergedMass8, [SubMergedMass9] = @SubMerg"& _ 
                "edMass9, [SubMergedMass10] = @SubMergedMass10, [Density1] = @Density1, [Density2"& _ 
                "] = @Density2, [Density3] = @Density3, [Density4] = @Density4, [Density5] = @Den"& _ 
                "sity5, [Density6] = @Density6, [Density7] = @Density7, [Density8] = @Density8, ["& _ 
                "Density9] = @Density9, [Density10] = @Density10, [AveDensity] = @AveDensity, [Ma"& _ 
                "xLoad1] = @MaxLoad1, [MaxLoad2] = @MaxLoad2, [MaxLoad3] = @MaxLoad3, [MaxLoad4] "& _ 
                "= @MaxLoad4, [MaxLoad5] = @MaxLoad5, [MaxLoad6] = @MaxLoad6, [MaxLoad7] = @MaxLo"& _ 
                "ad7, [MaxLoad8] = @MaxLoad8, [MaxLoad9] = @MaxLoad9, [MaxLoad10] = @MaxLoad10, ["& _ 
                "CompStrength1] = @CompStrength1, [CompStrength2] = @CompStrength2, [CompStrength"& _ 
                "3] = @CompStrength3, [CompStrength4] = @CompStrength4, [CompStrength5] = @CompSt"& _ 
                "rength5, [CompStrength6] = @CompStrength6, [CompStrength7] = @CompStrength7, [Co"& _ 
                "mpStrength8] = @CompStrength8, [CompStrength9] = @CompStrength9, [CompStrength10"& _ 
                "] = @CompStrength10, [AveStrength] = @AveStrength, [FractureType1] = @FractureTy"& _ 
                "pe1, [FractureType2] = @FractureType2, [FractureType3] = @FractureType3, [Fractu"& _ 
                "reType4] = @FractureType4, [FractureType5] = @FractureType5, [FractureType6] = @"& _ 
                "FractureType6, [FractureType7] = @FractureType7, [FractureType8] = @FractureType"& _ 
                "8, [FractureType9] = @FractureType9, [FractureType10] = @FractureType10, [Struct"& _ 
                "uralElement] = @StructuralElement, [SpecimenShape] = @SpecimenShape, [TestedBy] "& _ 
                "= @TestedBy, [CheckedBy] = @CheckedBy, [ApprovedBy] = @ApprovedBy, [CheckedDate]"& _ 
                " = @CheckedDate, [ApprovedDate] = @ApprovedDate, [Area1] = @Area1, [Area2] = @Ar"& _ 
                "ea2, [Area3] = @Area3, [Area4] = @Area4, [Area5] = @Area5, [Area6] = @Area6, [Ar"& _ 
                "ea7] = @Area7, [Area8] = @Area8, [Area9] = @Area9, [Area10] = @Area10, [Complile"& _ 
                "dby] = @Compliledby, [1] = @p1, [2] = @p4, [3] = @p7, [4] = @p10, [5] = @p13 WHE"& _ 
                "RE (([ProjectID] = @Original_ProjectID) AND ([BatchId] = @Original_BatchId) AND "& _ 
                "((@IsNull_BatchIdentificationNo = 1 AND [BatchIdentificationNo] IS NULL) OR ([Ba"& _ 
                "tchIdentificationNo] = @Original_BatchIdentificationNo)) AND ((@IsNull_NameOfSam"& _ 
                "pler = 1 AND [NameOfSampler] IS NULL) OR ([NameOfSampler] = @Original_NameOfSamp"& _ 
                "ler)) AND ((@IsNull_BatchDate = 1 AND [BatchDate] IS NULL) OR ([BatchDate] = @Or"& _ 
                "iginal_BatchDate)) AND ((@IsNull_BatchTime = 1 AND [BatchTime] IS NULL) OR ([Bat"& _ 
                "chTime] = @Original_BatchTime)) AND ((@IsNull_Testdate = 1 AND [Testdate] IS NUL"& _ 
                "L) OR ([Testdate] = @Original_Testdate)) AND ((@IsNull_CuringConditions = 1 AND "& _ 
                "[CuringConditions] IS NULL) OR ([CuringConditions] = @Original_CuringConditions)"& _ 
                ") AND ((@IsNull_TestingLaboratory = 1 AND [TestingLaboratory] IS NULL) OR ([Test"& _ 
                "ingLaboratory] = @Original_TestingLaboratory)) AND ((@IsNull_TestCertificate = 1"& _ 
                " AND [TestCertificate] IS NULL) OR ([TestCertificate] = @Original_TestCertificat"& _ 
                "e)) AND ((@IsNull_SupplySource = 1 AND [SupplySource] IS NULL) OR ([SupplySource"& _ 
                "] = @Original_SupplySource)) AND ((@IsNull_ConcreteGrade = 1 AND [ConcreteGrade]"& _ 
                " IS NULL) OR ([ConcreteGrade] = @Original_ConcreteGrade)) AND ((@IsNull_Specific"& _ 
                "ationOfConcreteMix = 1 AND [SpecificationOfConcreteMix] IS NULL) OR ([Specificat"& _ 
                "ionOfConcreteMix] = @Original_SpecificationOfConcreteMix)) AND ((@IsNull_NoOfSpe"& _ 
                "cimen = 1 AND [NoOfSpecimen] IS NULL) OR ([NoOfSpecimen] = @Original_NoOfSpecime"& _ 
                "n)) AND ((@IsNull_SpecimenCondition = 1 AND [SpecimenCondition] IS NULL) OR ([Sp"& _ 
                "ecimenCondition] = @Original_SpecimenCondition)) AND ((@IsNull_MethodOfCompactio"& _ 
                "n = 1 AND [MethodOfCompaction] IS NULL) OR ([MethodOfCompaction] = @Original_Met"& _ 
                "hodOfCompaction)) AND ((@IsNull_DateDelivered = 1 AND [DateDelivered] IS NULL) O"& _ 
                "R ([DateDelivered] = @Original_DateDelivered)) AND ((@IsNull_TestMethod = 1 AND "& _ 
                "[TestMethod] IS NULL) OR ([TestMethod] = @Original_TestMethod)) AND ((@IsNull_Sp"& _ 
                "ecimen1D = 1 AND [Specimen1D] IS NULL) OR ([Specimen1D] = @Original_Specimen1D))"& _ 
                " AND ((@IsNull_Specimen2D = 1 AND [Specimen2D] IS NULL) OR ([Specimen2D] = @Orig"& _ 
                "inal_Specimen2D)) AND ((@IsNull_Specimen3D = 1 AND [Specimen3D] IS NULL) OR ([Sp"& _ 
                "ecimen3D] = @Original_Specimen3D)) AND ((@IsNull_Specimen4D = 1 AND [Specimen4D]"& _ 
                " IS NULL) OR ([Specimen4D] = @Original_Specimen4D)) AND ((@IsNull_Specimen5D = 1"& _ 
                " AND [Specimen5D] IS NULL) OR ([Specimen5D] = @Original_Specimen5D)) AND ((@IsNu"& _ 
                "ll_Specimen6D = 1 AND [Specimen6D] IS NULL) OR ([Specimen6D] = @Original_Specime"& _ 
                "n6D)) AND ((@IsNull_Specimen7D = 1 AND [Specimen7D] IS NULL) OR ([Specimen7D] = "& _ 
                "@Original_Specimen7D)) AND ((@IsNull_Specimen8D = 1 AND [Specimen8D] IS NULL) OR"& _ 
                " ([Specimen8D] = @Original_Specimen8D)) AND ((@IsNull_Specimen9D = 1 AND [Specim"& _ 
                "en9D] IS NULL) OR ([Specimen9D] = @Original_Specimen9D)) AND ((@IsNull_Specimen1"& _ 
                "0D = 1 AND [Specimen10D] IS NULL) OR ([Specimen10D] = @Original_Specimen10D)) AN"& _ 
                "D ((@IsNull_Specimen1L = 1 AND [Specimen1L] IS NULL) OR ([Specimen1L] = @Origina"& _ 
                "l_Specimen1L)) AND ((@IsNull_Specimen2L = 1 AND [Specimen2L] IS NULL) OR ([Speci"& _ 
                "men2L] = @Original_Specimen2L)) AND ((@IsNull_Specimen3L = 1 AND [Specimen3L] IS"& _ 
                " NULL) OR ([Specimen3L] = @Original_Specimen3L)) AND ((@IsNull_Specimen4L = 1 AN"& _ 
                "D [Specimen4L] IS NULL) OR ([Specimen4L] = @Original_Specimen4L)) AND ((@IsNull_"& _ 
                "Specimen5L = 1 AND [Specimen5L] IS NULL) OR ([Specimen5L] = @Original_Specimen5L"& _ 
                ")) AND ((@IsNull_Specimen6L = 1 AND [Specimen6L] IS NULL) OR ([Specimen6L] = @Or"& _ 
                "iginal_Specimen6L)) AND ((@IsNull_Specimen7L = 1 AND [Specimen7L] IS NULL) OR (["& _ 
                "Specimen7L] = @Original_Specimen7L)) AND ((@IsNull_Specimen8L = 1 AND [Specimen8"& _ 
                "L] IS NULL) OR ([Specimen8L] = @Original_Specimen8L)) AND ((@IsNull_Specimen9L ="& _ 
                " 1 AND [Specimen9L] IS NULL) OR ([Specimen9L] = @Original_Specimen9L)) AND ((@Is"& _ 
                "Null_Specimen10L = 1 AND [Specimen10L] IS NULL) OR ([Specimen10L] = @Original_Sp"& _ 
                "ecimen10L)) AND ((@IsNull_Specimen1H = 1 AND [Specimen1H] IS NULL) OR ([Specimen"& _ 
                "1H] = @Original_Specimen1H)) AND ((@IsNull_Specimen2H = 1 AND [Specimen2H] IS NU"& _ 
                "LL) OR ([Specimen2H] = @Original_Specimen2H)) AND ((@IsNull_Specimen3H = 1 AND ["& _ 
                "Specimen3H] IS NULL) OR ([Specimen3H] = @Original_Specimen3H)) AND ((@IsNull_Spe"& _ 
                "cimen4H = 1 AND [Specimen4H] IS NULL) OR ([Specimen4H] = @Original_Specimen4H)) "& _ 
                "AND ((@IsNull_Specimen5H = 1 AND [Specimen5H] IS NULL) OR ([Specimen5H] = @Origi"& _ 
                "nal_Specimen5H)) AND ((@IsNull_Specimen6H = 1 AND [Specimen6H] IS NULL) OR ([Spe"& _ 
                "cimen6H] = @Original_Specimen6H)) AND ((@IsNull_Specimen7H = 1 AND [Specimen7H] "& _ 
                "IS NULL) OR ([Specimen7H] = @Original_Specimen7H)) AND ((@IsNull_Specimen8H = 1 "& _ 
                "AND [Specimen8H] IS NULL) OR ([Specimen8H] = @Original_Specimen8H)) AND ((@IsNul"& _ 
                "l_Specimen9H = 1 AND [Specimen9H] IS NULL) OR ([Specimen9H] = @Original_Specimen"& _ 
                "9H)) AND ((@IsNull_Specimen10H = 1 AND [Specimen10H] IS NULL) OR ([Specimen10H] "& _ 
                "= @Original_Specimen10H)) AND ((@IsNull_Mass1 = 1 AND [Mass1] IS NULL) OR ([Mass"& _ 
                "1] = @Original_Mass1)) AND ((@IsNull_Mass2 = 1 AND [Mass2] IS NULL) OR ([Mass2] "& _ 
                "= @Original_Mass2)) AND ((@IsNull_Mass3 = 1 AND [Mass3] IS NULL) OR ([Mass3] = @"& _ 
                "Original_Mass3)) AND ((@IsNull_Mass4 = 1 AND [Mass4] IS NULL) OR ([Mass4] = @Ori"& _ 
                "ginal_Mass4)) AND ((@IsNull_Mass5 = 1 AND [Mass5] IS NULL) OR ([Mass5] = @Origin"& _ 
                "al_Mass5)) AND ((@IsNull_Mass6 = 1 AND [Mass6] IS NULL) OR ([Mass6] = @Original_"& _ 
                "Mass6)) AND ((@IsNull_Mass7 = 1 AND [Mass7] IS NULL) OR ([Mass7] = @Original_Mas"& _ 
                "s7)) AND ((@IsNull_Mass8 = 1 AND [Mass8] IS NULL) OR ([Mass8] = @Original_Mass8)"& _ 
                ") AND ((@IsNull_Mass9 = 1 AND [Mass9] IS NULL) OR ([Mass9] = @Original_Mass9)) A"& _ 
                "ND ((@IsNull_Mass10 = 1 AND [Mass10] IS NULL) OR ([Mass10] = @Original_Mass10)) "& _ 
                "AND ((@IsNull_AveMass = 1 AND [AveMass] IS NULL) OR ([AveMass] = @Original_AveMa"& _ 
                "ss)) AND ((@IsNull_SubMergedMass1 = 1 AND [SubMergedMass1] IS NULL) OR ([SubMerg"& _ 
                "edMass1] = @Original_SubMergedMass1)) AND ((@IsNull_SubMergedMass2 = 1 AND [SubM"& _ 
                "ergedMass2] IS NULL) OR ([SubMergedMass2] = @Original_SubMergedMass2)) AND ((@Is"& _ 
                "Null_SubMergedMass3 = 1 AND [SubMergedMass3] IS NULL) OR ([SubMergedMass3] = @Or"& _ 
                "iginal_SubMergedMass3)) AND ((@IsNull_SubMergedMass4 = 1 AND [SubMergedMass4] IS"& _ 
                " NULL) OR ([SubMergedMass4] = @Original_SubMergedMass4)) AND ((@IsNull_SubMerged"& _ 
                "Mass5 = 1 AND [SubMergedMass5] IS NULL) OR ([SubMergedMass5] = @Original_SubMerg"& _ 
                "edMass5)) AND ((@IsNull_SubMergedMass6 = 1 AND [SubMergedMass6] IS NULL) OR ([Su"& _ 
                "bMergedMass6] = @Original_SubMergedMass6)) AND ((@IsNull_SubMergedMass7 = 1 AND "& _ 
                "[SubMergedMass7] IS NULL) OR ([SubMergedMass7] = @Original_SubMergedMass7)) AND "& _ 
                "((@IsNull_SubMergedMass8 = 1 AND [SubMergedMass8] IS NULL) OR ([SubMergedMass8] "& _ 
                "= @Original_SubMergedMass8)) AND ((@IsNull_SubMergedMass9 = 1 AND [SubMergedMass"& _ 
                "9] IS NULL) OR ([SubMergedMass9] = @Original_SubMergedMass9)) AND ((@IsNull_SubM"& _ 
                "ergedMass10 = 1 AND [SubMergedMass10] IS NULL) OR ([SubMergedMass10] = @Original"& _ 
                "_SubMergedMass10)) AND ((@IsNull_Density1 = 1 AND [Density1] IS NULL) OR ([Densi"& _ 
                "ty1] = @Original_Density1)) AND ((@IsNull_Density2 = 1 AND [Density2] IS NULL) O"& _ 
                "R ([Density2] = @Original_Density2)) AND ((@IsNull_Density3 = 1 AND [Density3] I"& _ 
                "S NULL) OR ([Density3] = @Original_Density3)) AND ((@IsNull_Density4 = 1 AND [De"& _ 
                "nsity4] IS NULL) OR ([Density4] = @Original_Density4)) AND ((@IsNull_Density5 = "& _ 
                "1 AND [Density5] IS NULL) OR ([Density5] = @Original_Density5)) AND ((@IsNull_De"& _ 
                "nsity6 = 1 AND [Density6] IS NULL) OR ([Density6] = @Original_Density6)) AND ((@"& _ 
                "IsNull_Density7 = 1 AND [Density7] IS NULL) OR ([Density7] = @Original_Density7)"& _ 
                ") AND ((@IsNull_Density8 = 1 AND [Density8] IS NULL) OR ([Density8] = @Original_"& _ 
                "Density8)) AND ((@IsNull_Density9 = 1 AND [Density9] IS NULL) OR ([Density9] = @"& _ 
                "Original_Density9)) AND ((@IsNull_Density10 = 1 AND [Density10] IS NULL) OR ([De"& _ 
                "nsity10] = @Original_Density10)) AND ((@IsNull_AveDensity = 1 AND [AveDensity] I"& _ 
                "S NULL) OR ([AveDensity] = @Original_AveDensity)) AND ((@IsNull_MaxLoad1 = 1 AND"& _ 
                " [MaxLoad1] IS NULL) OR ([MaxLoad1] = @Original_MaxLoad1)) AND ((@IsNull_MaxLoad"& _ 
                "2 = 1 AND [MaxLoad2] IS NULL) OR ([MaxLoad2] = @Original_MaxLoad2)) AND ((@IsNul"& _ 
                "l_MaxLoad3 = 1 AND [MaxLoad3] IS NULL) OR ([MaxLoad3] = @Original_MaxLoad3)) AND"& _ 
                " ((@IsNull_MaxLoad4 = 1 AND [MaxLoad4] IS NULL) OR ([MaxLoad4] = @Original_MaxLo"& _ 
                "ad4)) AND ((@IsNull_MaxLoad5 = 1 AND [MaxLoad5] IS NULL) OR ([MaxLoad5] = @Origi"& _ 
                "nal_MaxLoad5)) AND ((@IsNull_MaxLoad6 = 1 AND [MaxLoad6] IS NULL) OR ([MaxLoad6]"& _ 
                " = @Original_MaxLoad6)) AND ((@IsNull_MaxLoad7 = 1 AND [MaxLoad7] IS NULL) OR (["& _ 
                "MaxLoad7] = @Original_MaxLoad7)) AND ((@IsNull_MaxLoad8 = 1 AND [MaxLoad8] IS NU"& _ 
                "LL) OR ([MaxLoad8] = @Original_MaxLoad8)) AND ((@IsNull_MaxLoad9 = 1 AND [MaxLoa"& _ 
                "d9] IS NULL) OR ([MaxLoad9] = @Original_MaxLoad9)) AND ((@IsNull_MaxLoad10 = 1 A"& _ 
                "ND [MaxLoad10] IS NULL) OR ([MaxLoad10] = @Original_MaxLoad10)) AND ((@IsNull_Co"& _ 
                "mpStrength1 = 1 AND [CompStrength1] IS NULL) OR ([CompStrength1] = @Original_Com"& _ 
                "pStrength1)) AND ((@IsNull_CompStrength2 = 1 AND [CompStrength2] IS NULL) OR ([C"& _ 
                "ompStrength2] = @Original_CompStrength2)) AND ((@IsNull_CompStrength3 = 1 AND [C"& _ 
                "ompStrength3] IS NULL) OR ([CompStrength3] = @Original_CompStrength3)) AND ((@Is"& _ 
                "Null_CompStrength4 = 1 AND [CompStrength4] IS NULL) OR ([CompStrength4] = @Origi"& _ 
                "nal_CompStrength4)) AND ((@IsNull_CompStrength5 = 1 AND [CompStrength5] IS NULL)"& _ 
                " OR ([CompStrength5] = @Original_CompStrength5)) AND ((@IsNull_CompStrength6 = 1"& _ 
                " AND [CompStrength6] IS NULL) OR ([CompStrength6] = @Original_CompStrength6)) AN"& _ 
                "D ((@IsNull_CompStrength7 = 1 AND [CompStrength7] IS NULL) OR ([CompStrength7] ="& _ 
                " @Original_CompStrength7)) AND ((@IsNull_CompStrength8 = 1 AND [CompStrength8] I"& _ 
                "S NULL) OR ([CompStrength8] = @Original_CompStrength8)) AND ((@IsNull_CompStreng"& _ 
                "th9 = 1 AND [CompStrength9] IS NULL) OR ([CompStrength9] = @Original_CompStrengt"& _ 
                "h9)) AND ((@IsNull_CompStrength10 = 1 AND [CompStrength10] IS NULL) OR ([CompStr"& _ 
                "ength10] = @Original_CompStrength10)) AND ((@IsNull_AveStrength = 1 AND [AveStre"& _ 
                "ngth] IS NULL) OR ([AveStrength] = @Original_AveStrength)) AND ((@IsNull_Fractur"& _ 
                "eType1 = 1 AND [FractureType1] IS NULL) OR ([FractureType1] = @Original_Fracture"& _ 
                "Type1)) AND ((@IsNull_FractureType2 = 1 AND [FractureType2] IS NULL) OR ([Fractu"& _ 
                "reType2] = @Original_FractureType2)) AND ((@IsNull_FractureType3 = 1 AND [Fractu"& _ 
                "reType3] IS NULL) OR ([FractureType3] = @Original_FractureType3)) AND ((@IsNull_"& _ 
                "FractureType4 = 1 AND [FractureType4] IS NULL) OR ([FractureType4] = @Original_F"& _ 
                "ractureType4)) AND ((@IsNull_FractureType5 = 1 AND [FractureType5] IS NULL) OR ("& _ 
                "[FractureType5] = @Original_FractureType5)) AND ((@IsNull_FractureType6 = 1 AND "& _ 
                "[FractureType6] IS NULL) OR ([FractureType6] = @Original_FractureType6)) AND ((@"& _ 
                "IsNull_FractureType7 = 1 AND [FractureType7] IS NULL) OR ([FractureType7] = @Ori"& _ 
                "ginal_FractureType7)) AND ((@IsNull_FractureType8 = 1 AND [FractureType8] IS NUL"& _ 
                "L) OR ([FractureType8] = @Original_FractureType8)) AND ((@IsNull_FractureType9 ="& _ 
                " 1 AND [FractureType9] IS NULL) OR ([FractureType9] = @Original_FractureType9)) "& _ 
                "AND ((@IsNull_FractureType10 = 1 AND [FractureType10] IS NULL) OR ([FractureType"& _ 
                "10] = @Original_FractureType10)) AND ((@IsNull_SpecimenAge = 1 AND [SpecimenAge]"& _ 
                " IS NULL) OR ([SpecimenAge] = @Original_SpecimenAge)) AND ((@IsNull_StructuralEl"& _ 
                "ement = 1 AND [StructuralElement] IS NULL) OR ([StructuralElement] = @Original_S"& _ 
                "tructuralElement)) AND ((@IsNull_SpecimenShape = 1 AND [SpecimenShape] IS NULL) "& _ 
                "OR ([SpecimenShape] = @Original_SpecimenShape)) AND ((@IsNull_TestedBy = 1 AND ["& _ 
                "TestedBy] IS NULL) OR ([TestedBy] = @Original_TestedBy)) AND ((@IsNull_CheckedBy"& _ 
                " = 1 AND [CheckedBy] IS NULL) OR ([CheckedBy] = @Original_CheckedBy)) AND ((@IsN"& _ 
                "ull_ApprovedBy = 1 AND [ApprovedBy] IS NULL) OR ([ApprovedBy] = @Original_Approv"& _ 
                "edBy)) AND ((@IsNull_CheckedDate = 1 AND [CheckedDate] IS NULL) OR ([CheckedDate"& _ 
                "] = @Original_CheckedDate)) AND ((@IsNull_ApprovedDate = 1 AND [ApprovedDate] IS"& _ 
                " NULL) OR ([ApprovedDate] = @Original_ApprovedDate)) AND ((@IsNull_Area1 = 1 AND"& _ 
                " [Area1] IS NULL) OR ([Area1] = @Original_Area1)) AND ((@IsNull_Area2 = 1 AND [A"& _ 
                "rea2] IS NULL) OR ([Area2] = @Original_Area2)) AND ((@IsNull_Area3 = 1 AND [Area"& _ 
                "3] IS NULL) OR ([Area3] = @Original_Area3)) AND ((@IsNull_Area4 = 1 AND [Area4] "& _ 
                "IS NULL) OR ([Area4] = @Original_Area4)) AND ((@IsNull_Area5 = 1 AND [Area5] IS "& _ 
                "NULL) OR ([Area5] = @Original_Area5)) AND ((@IsNull_Area6 = 1 AND [Area6] IS NUL"& _ 
                "L) OR ([Area6] = @Original_Area6)) AND ((@IsNull_Area7 = 1 AND [Area7] IS NULL) "& _ 
                "OR ([Area7] = @Original_Area7)) AND ((@IsNull_Area8 = 1 AND [Area8] IS NULL) OR "& _ 
                "([Area8] = @Original_Area8)) AND ((@IsNull_Area9 = 1 AND [Area9] IS NULL) OR ([A"& _ 
                "rea9] = @Original_Area9)) AND ((@IsNull_Area10 = 1 AND [Area10] IS NULL) OR ([Ar"& _ 
                "ea10] = @Original_Area10)) AND ((@IsNull_Compliledby = 1 AND [Compliledby] IS NU"& _ 
                "LL) OR ([Compliledby] = @Original_Compliledby)) AND ((@p3 = 1 AND [1] IS NULL) O"& _ 
                "R ([1] = @p2)) AND ((@p6 = 1 AND [2] IS NULL) OR ([2] = @p5)) AND ((@p9 = 1 AND "& _ 
                "[3] IS NULL) OR ([3] = @p8)) AND ((@p12 = 1 AND [4] IS NULL) OR ([4] = @p11)) AN"& _ 
                "D ((@p15 = 1 AND [5] IS NULL) OR ([5] = @p14)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ProjectID, BatchId, Bat"& _ 
                "chIdentificationNo, NameOfSampler, BatchDate, BatchTime, Testdate, CuringConditi"& _ 
                "ons, TestingLaboratory, TestCertificate, SupplySource, ConcreteGrade, Specificat"& _ 
                "ionOfConcreteMix, NoOfSpecimen, SpecimenCondition, MethodOfCompaction, DateDeliv"& _ 
                "ered, TestMethod, Specimen1D, Specimen2D, Specimen3D, Specimen4D, Specimen5D, Sp"& _ 
                "ecimen6D, Specimen7D, Specimen8D, Specimen9D, Specimen10D, Specimen1L, Specimen2"& _ 
                "L, Specimen3L, Specimen4L, Specimen5L, Specimen6L, Specimen7L, Specimen8L, Speci"& _ 
                "men9L, Specimen10L, Specimen1H, Specimen2H, Specimen3H, Specimen4H, Specimen5H, "& _ 
                "Specimen6H, Specimen7H, Specimen8H, Specimen9H, Specimen10H, Mass1, Mass2, Mass3"& _ 
                ", Mass4, Mass5, Mass6, Mass7, Mass8, Mass9, Mass10, AveMass, SubMergedMass1, Sub"& _ 
                "MergedMass2, SubMergedMass3, SubMergedMass4, SubMergedMass5, SubMergedMass6, Sub"& _ 
                "MergedMass7, SubMergedMass8, SubMergedMass9, SubMergedMass10, Density1, Density2"& _ 
                ", Density3, Density4, Density5, Density6, Density7, Density8, Density9, Density1"& _ 
                "0, AveDensity, MaxLoad1, MaxLoad2, MaxLoad3, MaxLoad4, MaxLoad5, MaxLoad6, MaxLo"& _ 
                "ad7, MaxLoad8, MaxLoad9, MaxLoad10, CompStrength1, CompStrength2, CompStrength3,"& _ 
                " CompStrength4, CompStrength5, CompStrength6, CompStrength7, CompStrength8, Comp"& _ 
                "Strength9, CompStrength10, AveStrength, FractureType1, FractureType2, FractureTy"& _ 
                "pe3, FractureType4, FractureType5, FractureType6, FractureType7, FractureType8, "& _ 
                "FractureType9, FractureType10, SpecimenAge, StructuralElement, SpecimenShape, Te"& _ 
                "stedBy, CheckedBy, ApprovedBy, CheckedDate, ApprovedDate, Area1, Area2, Area3, A"& _ 
                "rea4, Area5, Area6, Area7, Area8, Area9, Area10, Compliledby, [1], [2], [3], [4]"& _ 
                ", [5] FROM BatchTable AS BatchTable WHERE (BatchId = @BatchId)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProjectID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BatchIdentificationNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BatchIdentificationNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NameOfSampler", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NameOfSampler", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BatchDate", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BatchDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BatchTime", Global.System.Data.SqlDbType.Time, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BatchTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Testdate", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Testdate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CuringConditions", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CuringConditions", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TestingLaboratory", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TestingLaboratory", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TestCertificate", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TestCertificate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SupplySource", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SupplySource", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConcreteGrade", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConcreteGrade", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SpecificationOfConcreteMix", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpecificationOfConcreteMix", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NoOfSpecimen", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NoOfSpecimen", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SpecimenCondition", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpecimenCondition", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MethodOfCompaction", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MethodOfCompaction", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateDelivered", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateDelivered", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TestMethod", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TestMethod", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen1D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen1D", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen2D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen2D", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen3D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen3D", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen4D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen4D", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen5D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen5D", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen6D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen6D", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen7D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen7D", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen8D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen8D", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen9D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen9D", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen10D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen10D", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen1L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen1L", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen2L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen2L", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen3L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen3L", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen4L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen4L", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen5L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen5L", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen6L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen6L", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen7L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen7L", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen8L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen8L", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen9L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen9L", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen10L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen10L", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen1H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen1H", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen2H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen2H", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen3H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen3H", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen4H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen4H", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen5H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen5H", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen6H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen6H", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen7H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen7H", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen8H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen8H", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen9H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen9H", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Specimen10H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen10H", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mass1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mass2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mass3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mass4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mass5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mass6", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mass7", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass7", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mass8", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass8", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mass9", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass9", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mass10", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AveMass", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AveMass", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubMergedMass1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubMergedMass2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubMergedMass3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubMergedMass4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubMergedMass5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubMergedMass6", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubMergedMass7", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass7", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubMergedMass8", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass8", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubMergedMass9", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass9", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubMergedMass10", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Density1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Density2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Density3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Density4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Density5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Density6", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Density7", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density7", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Density8", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density8", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Density9", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density9", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Density10", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AveDensity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AveDensity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaxLoad1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaxLoad2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaxLoad3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaxLoad4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaxLoad5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaxLoad6", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaxLoad7", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad7", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaxLoad8", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad8", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaxLoad9", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad9", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaxLoad10", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CompStrength1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CompStrength2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CompStrength3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CompStrength4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CompStrength5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CompStrength6", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CompStrength7", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength7", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CompStrength8", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength8", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CompStrength9", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength9", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CompStrength10", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AveStrength", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AveStrength", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FractureType1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FractureType2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FractureType3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FractureType4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FractureType5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FractureType6", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FractureType7", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType7", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FractureType8", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType8", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FractureType9", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType9", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FractureType10", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StructuralElement", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StructuralElement", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SpecimenShape", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpecimenShape", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TestedBy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TestedBy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CheckedBy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CheckedBy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ApprovedBy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ApprovedBy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CheckedDate", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CheckedDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ApprovedDate", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ApprovedDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Area1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Area2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Area3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Area4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Area5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Area6", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Area7", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area7", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Area8", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area8", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Area9", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area9", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Area10", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Compliledby", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Compliledby", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p7", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p10", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p13", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ProjectID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BatchId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BatchId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BatchIdentificationNo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BatchIdentificationNo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BatchIdentificationNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BatchIdentificationNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NameOfSampler", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NameOfSampler", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NameOfSampler", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NameOfSampler", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BatchDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BatchDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BatchDate", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BatchDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BatchTime", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BatchTime", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BatchTime", Global.System.Data.SqlDbType.Time, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BatchTime", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Testdate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Testdate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Testdate", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Testdate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CuringConditions", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CuringConditions", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CuringConditions", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CuringConditions", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TestingLaboratory", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TestingLaboratory", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TestingLaboratory", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TestingLaboratory", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TestCertificate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TestCertificate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TestCertificate", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TestCertificate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SupplySource", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SupplySource", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SupplySource", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SupplySource", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ConcreteGrade", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConcreteGrade", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ConcreteGrade", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConcreteGrade", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SpecificationOfConcreteMix", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpecificationOfConcreteMix", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SpecificationOfConcreteMix", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpecificationOfConcreteMix", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NoOfSpecimen", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NoOfSpecimen", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NoOfSpecimen", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NoOfSpecimen", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SpecimenCondition", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpecimenCondition", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SpecimenCondition", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpecimenCondition", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MethodOfCompaction", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MethodOfCompaction", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MethodOfCompaction", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MethodOfCompaction", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DateDelivered", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateDelivered", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DateDelivered", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateDelivered", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TestMethod", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TestMethod", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TestMethod", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TestMethod", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen1D", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen1D", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen1D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen1D", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen2D", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen2D", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen2D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen2D", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen3D", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen3D", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen3D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen3D", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen4D", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen4D", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen4D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen4D", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen5D", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen5D", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen5D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen5D", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen6D", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen6D", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen6D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen6D", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen7D", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen7D", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen7D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen7D", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen8D", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen8D", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen8D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen8D", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen9D", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen9D", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen9D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen9D", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen10D", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen10D", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen10D", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen10D", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen1L", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen1L", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen1L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen1L", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen2L", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen2L", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen2L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen2L", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen3L", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen3L", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen3L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen3L", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen4L", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen4L", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen4L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen4L", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen5L", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen5L", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen5L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen5L", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen6L", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen6L", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen6L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen6L", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen7L", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen7L", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen7L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen7L", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen8L", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen8L", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen8L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen8L", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen9L", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen9L", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen9L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen9L", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen10L", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen10L", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen10L", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen10L", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen1H", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen1H", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen1H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen1H", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen2H", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen2H", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen2H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen2H", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen3H", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen3H", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen3H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen3H", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen4H", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen4H", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen4H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen4H", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen5H", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen5H", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen5H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen5H", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen6H", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen6H", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen6H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen6H", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen7H", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen7H", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen7H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen7H", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen8H", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen8H", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen8H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen8H", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen9H", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen9H", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen9H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen9H", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Specimen10H", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen10H", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Specimen10H", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Specimen10H", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Mass1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Mass1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Mass2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Mass2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Mass3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Mass3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Mass4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Mass4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Mass5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Mass5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Mass6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass6", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Mass6", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass6", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Mass7", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass7", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Mass7", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass7", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Mass8", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass8", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Mass8", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass8", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Mass9", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass9", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Mass9", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass9", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Mass10", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass10", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Mass10", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mass10", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AveMass", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AveMass", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AveMass", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AveMass", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SubMergedMass1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SubMergedMass1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SubMergedMass2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SubMergedMass2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SubMergedMass3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SubMergedMass3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SubMergedMass4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SubMergedMass4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SubMergedMass5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SubMergedMass5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SubMergedMass6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass6", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SubMergedMass6", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass6", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SubMergedMass7", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass7", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SubMergedMass7", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass7", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SubMergedMass8", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass8", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SubMergedMass8", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass8", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SubMergedMass9", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass9", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SubMergedMass9", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass9", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SubMergedMass10", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass10", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SubMergedMass10", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubMergedMass10", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Density1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Density1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Density2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Density2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Density3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Density3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Density4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Density4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Density5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Density5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Density6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density6", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Density6", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density6", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Density7", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density7", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Density7", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density7", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Density8", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density8", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Density8", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density8", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Density9", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density9", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Density9", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density9", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Density10", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density10", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Density10", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density10", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AveDensity", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AveDensity", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AveDensity", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AveDensity", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaxLoad1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaxLoad1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaxLoad2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaxLoad2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaxLoad3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaxLoad3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaxLoad4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaxLoad4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaxLoad5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaxLoad5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaxLoad6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad6", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaxLoad6", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad6", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaxLoad7", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad7", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaxLoad7", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad7", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaxLoad8", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad8", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaxLoad8", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad8", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaxLoad9", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad9", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaxLoad9", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad9", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MaxLoad10", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad10", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MaxLoad10", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaxLoad10", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CompStrength1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CompStrength1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CompStrength2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CompStrength2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CompStrength3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CompStrength3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CompStrength4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CompStrength4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CompStrength5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CompStrength5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CompStrength6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength6", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CompStrength6", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength6", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CompStrength7", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength7", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CompStrength7", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength7", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CompStrength8", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength8", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CompStrength8", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength8", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CompStrength9", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength9", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CompStrength9", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength9", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CompStrength10", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength10", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CompStrength10", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompStrength10", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AveStrength", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AveStrength", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AveStrength", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AveStrength", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FractureType1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FractureType1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FractureType2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FractureType2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FractureType3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FractureType3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FractureType4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FractureType4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FractureType5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FractureType5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FractureType6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType6", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FractureType6", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType6", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FractureType7", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType7", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FractureType7", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType7", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FractureType8", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType8", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FractureType8", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType8", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FractureType9", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType9", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FractureType9", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType9", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FractureType10", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType10", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FractureType10", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FractureType10", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SpecimenAge", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpecimenAge", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SpecimenAge", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpecimenAge", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_StructuralElement", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StructuralElement", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_StructuralElement", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StructuralElement", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SpecimenShape", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpecimenShape", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SpecimenShape", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpecimenShape", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TestedBy", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TestedBy", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TestedBy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TestedBy", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CheckedBy", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CheckedBy", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CheckedBy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CheckedBy", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ApprovedBy", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ApprovedBy", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ApprovedBy", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ApprovedBy", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CheckedDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CheckedDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CheckedDate", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CheckedDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ApprovedDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ApprovedDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ApprovedDate", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ApprovedDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Area1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Area1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Area2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Area2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Area3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Area3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Area4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Area4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Area5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Area5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Area6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area6", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Area6", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area6", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Area7", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area7", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Area7", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area7", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Area8", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area8", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Area8", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area8", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Area9", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area9", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Area9", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area9", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Area10", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area10", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Area10", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area10", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Compliledby", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Compliledby", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Compliledby", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Compliledby", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p9", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p8", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p12", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p11", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p15", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p14", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BatchId", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BatchId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.TerraConc.My.MySettings.Default.TerraConcConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT      ProjectID, BatchId, BatchIdentificationNo, NameOfSampler, BatchDate, "& _ 
                "BatchTime, Testdate, CuringConditions, TestingLaboratory, TestCertificate, Suppl"& _ 
                "ySource, ConcreteGrade, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        SpecificationOfConcreteMix, No"& _ 
                "OfSpecimen, SpecimenCondition, MethodOfCompaction, DateDelivered, TestMethod, Sp"& _ 
                "ecimen1D, Specimen2D, Specimen3D, Specimen4D, Specimen5D, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                    "& _ 
                "    Specimen6D, Specimen7D, Specimen8D, Specimen9D, Specimen10D, Specimen1L, Spe"& _ 
                "cimen2L, Specimen3L, Specimen4L, Specimen5L, Specimen6L, Specimen7L, Specimen8L,"& _ 
                " Specimen9L, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        Specimen10L, Specimen1H, Specimen2H, Spec"& _ 
                "imen3H, Specimen4H, Specimen5H, Specimen6H, Specimen7H, Specimen8H, Specimen9H, "& _ 
                "Specimen10H, Mass1, Mass2, Mass3, Mass4, Mass5, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        Mass6,"& _ 
                " Mass7, Mass8, Mass9, Mass10, AveMass, SubMergedMass1, SubMergedMass2, SubMerged"& _ 
                "Mass3, SubMergedMass4, SubMergedMass5, SubMergedMass6, SubMergedMass7, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "                 SubMergedMass8, SubMergedMass9, SubMergedMass10, Density1, Dens"& _ 
                "ity2, Density3, Density4, Density5, Density6, Density7, Density8, Density9, Dens"& _ 
                "ity10, AveDensity, MaxLoad1, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        MaxLoad2, MaxLoad3, MaxLo"& _ 
                "ad4, MaxLoad5, MaxLoad6, MaxLoad7, MaxLoad8, MaxLoad9, MaxLoad10, CompStrength1,"& _ 
                " CompStrength2, CompStrength3, CompStrength4, CompStrength5, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "       CompStrength6, CompStrength7, CompStrength8, CompStrength9, CompStrength1"& _ 
                "0, AveStrength, FractureType1, FractureType2, FractureType3, FractureType4, Frac"& _ 
                "tureType5, FractureType6, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        FractureType7, FractureType8"& _ 
                ", FractureType9, FractureType10, SpecimenAge, StructuralElement, SpecimenShape, "& _ 
                "TestedBy, CheckedBy, ApprovedBy, CheckedDate, ApprovedDate, Area1, Area2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "                    Area3, Area4, Area5, Area6, Area7, Area8, Area9, Area10, Com"& _ 
                "pliledby, [1], [2], [3], [4], [5]"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM          BatchTable AS BatchTable"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE"& _ 
                "      (ProjectID = @PiD)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PiD", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT      COUNT(*) AS Batch"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM          BatchTable"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE      (BatchId = @B"& _ 
                "id) AND (ProjectID = @Pid)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Bid", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BatchId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Pid", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT COUNT(*) FROM BatchTable"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where BatchTable.ProjectID=@Pid"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Pid", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As TerraConcDataSet.BatchTableDataTable, ByVal PiD As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PiD,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal PiD As Integer) As TerraConcDataSet.BatchTableDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PiD,Integer)
            Dim dataTable As TerraConcDataSet.BatchTableDataTable = New TerraConcDataSet.BatchTableDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As TerraConcDataSet.BatchTableDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As TerraConcDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "BatchTable")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_ProjectID As Integer,  _
                    ByVal Original_BatchId As Integer,  _
                    ByVal Original_BatchIdentificationNo As String,  _
                    ByVal Original_NameOfSampler As String,  _
                    ByVal Original_BatchDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_BatchTime As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Original_Testdate As Global.System.Nullable(Of Date),  _
                    ByVal Original_CuringConditions As String,  _
                    ByVal Original_TestingLaboratory As String,  _
                    ByVal Original_TestCertificate As String,  _
                    ByVal Original_SupplySource As String,  _
                    ByVal Original_ConcreteGrade As String,  _
                    ByVal Original_SpecificationOfConcreteMix As String,  _
                    ByVal Original_NoOfSpecimen As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SpecimenCondition As String,  _
                    ByVal Original_MethodOfCompaction As String,  _
                    ByVal Original_DateDelivered As Global.System.Nullable(Of Date),  _
                    ByVal Original_TestMethod As String,  _
                    ByVal Original_Specimen1D As String,  _
                    ByVal Original_Specimen2D As String,  _
                    ByVal Original_Specimen3D As String,  _
                    ByVal Original_Specimen4D As String,  _
                    ByVal Original_Specimen5D As String,  _
                    ByVal Original_Specimen6D As String,  _
                    ByVal Original_Specimen7D As String,  _
                    ByVal Original_Specimen8D As String,  _
                    ByVal Original_Specimen9D As String,  _
                    ByVal Original_Specimen10D As String,  _
                    ByVal Original_Specimen1L As String,  _
                    ByVal Original_Specimen2L As String,  _
                    ByVal Original_Specimen3L As String,  _
                    ByVal Original_Specimen4L As String,  _
                    ByVal Original_Specimen5L As String,  _
                    ByVal Original_Specimen6L As String,  _
                    ByVal Original_Specimen7L As String,  _
                    ByVal Original_Specimen8L As String,  _
                    ByVal Original_Specimen9L As String,  _
                    ByVal Original_Specimen10L As String,  _
                    ByVal Original_Specimen1H As String,  _
                    ByVal Original_Specimen2H As String,  _
                    ByVal Original_Specimen3H As String,  _
                    ByVal Original_Specimen4H As String,  _
                    ByVal Original_Specimen5H As String,  _
                    ByVal Original_Specimen6H As String,  _
                    ByVal Original_Specimen7H As String,  _
                    ByVal Original_Specimen8H As String,  _
                    ByVal Original_Specimen9H As String,  _
                    ByVal Original_Specimen10H As String,  _
                    ByVal Original_Mass1 As String,  _
                    ByVal Original_Mass2 As String,  _
                    ByVal Original_Mass3 As String,  _
                    ByVal Original_Mass4 As String,  _
                    ByVal Original_Mass5 As String,  _
                    ByVal Original_Mass6 As String,  _
                    ByVal Original_Mass7 As String,  _
                    ByVal Original_Mass8 As String,  _
                    ByVal Original_Mass9 As String,  _
                    ByVal Original_Mass10 As String,  _
                    ByVal Original_AveMass As String,  _
                    ByVal Original_SubMergedMass1 As String,  _
                    ByVal Original_SubMergedMass2 As String,  _
                    ByVal Original_SubMergedMass3 As String,  _
                    ByVal Original_SubMergedMass4 As String,  _
                    ByVal Original_SubMergedMass5 As String,  _
                    ByVal Original_SubMergedMass6 As String,  _
                    ByVal Original_SubMergedMass7 As String,  _
                    ByVal Original_SubMergedMass8 As String,  _
                    ByVal Original_SubMergedMass9 As String,  _
                    ByVal Original_SubMergedMass10 As String,  _
                    ByVal Original_Density1 As String,  _
                    ByVal Original_Density2 As String,  _
                    ByVal Original_Density3 As String,  _
                    ByVal Original_Density4 As String,  _
                    ByVal Original_Density5 As String,  _
                    ByVal Original_Density6 As String,  _
                    ByVal Original_Density7 As String,  _
                    ByVal Original_Density8 As String,  _
                    ByVal Original_Density9 As String,  _
                    ByVal Original_Density10 As String,  _
                    ByVal Original_AveDensity As String,  _
                    ByVal Original_MaxLoad1 As String,  _
                    ByVal Original_MaxLoad2 As String,  _
                    ByVal Original_MaxLoad3 As String,  _
                    ByVal Original_MaxLoad4 As String,  _
                    ByVal Original_MaxLoad5 As String,  _
                    ByVal Original_MaxLoad6 As String,  _
                    ByVal Original_MaxLoad7 As String,  _
                    ByVal Original_MaxLoad8 As String,  _
                    ByVal Original_MaxLoad9 As String,  _
                    ByVal Original_MaxLoad10 As String,  _
                    ByVal Original_CompStrength1 As String,  _
                    ByVal Original_CompStrength2 As String,  _
                    ByVal Original_CompStrength3 As String,  _
                    ByVal Original_CompStrength4 As String,  _
                    ByVal Original_CompStrength5 As String,  _
                    ByVal Original_CompStrength6 As String,  _
                    ByVal Original_CompStrength7 As String,  _
                    ByVal Original_CompStrength8 As String,  _
                    ByVal Original_CompStrength9 As String,  _
                    ByVal Original_CompStrength10 As String,  _
                    ByVal Original_AveStrength As String,  _
                    ByVal Original_FractureType1 As String,  _
                    ByVal Original_FractureType2 As String,  _
                    ByVal Original_FractureType3 As String,  _
                    ByVal Original_FractureType4 As String,  _
                    ByVal Original_FractureType5 As String,  _
                    ByVal Original_FractureType6 As String,  _
                    ByVal Original_FractureType7 As String,  _
                    ByVal Original_FractureType8 As String,  _
                    ByVal Original_FractureType9 As String,  _
                    ByVal Original_FractureType10 As String,  _
                    ByVal Original_SpecimenAge As Global.System.Nullable(Of Integer),  _
                    ByVal Original_StructuralElement As String,  _
                    ByVal Original_SpecimenShape As String,  _
                    ByVal Original_TestedBy As String,  _
                    ByVal Original_CheckedBy As String,  _
                    ByVal Original_ApprovedBy As String,  _
                    ByVal Original_CheckedDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_ApprovedDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_Area1 As String,  _
                    ByVal Original_Area2 As String,  _
                    ByVal Original_Area3 As String,  _
                    ByVal Original_Area4 As String,  _
                    ByVal Original_Area5 As String,  _
                    ByVal Original_Area6 As String,  _
                    ByVal Original_Area7 As String,  _
                    ByVal Original_Area8 As String,  _
                    ByVal Original_Area9 As String,  _
                    ByVal Original_Area10 As String,  _
                    ByVal Original_Compliledby As String,  _
                    ByVal p2 As String,  _
                    ByVal p5 As String,  _
                    ByVal p8 As String,  _
                    ByVal p11 As String,  _
                    ByVal p14 As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ProjectID,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_BatchId,Integer)
            If (Original_BatchIdentificationNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_BatchIdentificationNo,String)
            End If
            If (Original_NameOfSampler Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_NameOfSampler,String)
            End If
            If (Original_BatchDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_BatchDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Original_BatchTime.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_BatchTime.Value,System.TimeSpan)
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Original_Testdate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_Testdate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_CuringConditions Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_CuringConditions,String)
            End If
            If (Original_TestingLaboratory Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_TestingLaboratory,String)
            End If
            If (Original_TestCertificate Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_TestCertificate,String)
            End If
            If (Original_SupplySource Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_SupplySource,String)
            End If
            If (Original_ConcreteGrade Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_ConcreteGrade,String)
            End If
            If (Original_SpecificationOfConcreteMix Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_SpecificationOfConcreteMix,String)
            End If
            If (Original_NoOfSpecimen.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_NoOfSpecimen.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Original_SpecimenCondition Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_SpecimenCondition,String)
            End If
            If (Original_MethodOfCompaction Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_MethodOfCompaction,String)
            End If
            If (Original_DateDelivered.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_DateDelivered.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (Original_TestMethod Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_TestMethod,String)
            End If
            If (Original_Specimen1D Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_Specimen1D,String)
            End If
            If (Original_Specimen2D Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(Original_Specimen2D,String)
            End If
            If (Original_Specimen3D Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(Original_Specimen3D,String)
            End If
            If (Original_Specimen4D Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(Original_Specimen4D,String)
            End If
            If (Original_Specimen5D Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(Original_Specimen5D,String)
            End If
            If (Original_Specimen6D Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(Original_Specimen6D,String)
            End If
            If (Original_Specimen7D Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(Original_Specimen7D,String)
            End If
            If (Original_Specimen8D Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(Original_Specimen8D,String)
            End If
            If (Original_Specimen9D Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(Original_Specimen9D,String)
            End If
            If (Original_Specimen10D Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(Original_Specimen10D,String)
            End If
            If (Original_Specimen1L Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(Original_Specimen1L,String)
            End If
            If (Original_Specimen2L Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(Original_Specimen2L,String)
            End If
            If (Original_Specimen3L Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(Original_Specimen3L,String)
            End If
            If (Original_Specimen4L Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(Original_Specimen4L,String)
            End If
            If (Original_Specimen5L Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(Original_Specimen5L,String)
            End If
            If (Original_Specimen6L Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(Original_Specimen6L,String)
            End If
            If (Original_Specimen7L Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(Original_Specimen7L,String)
            End If
            If (Original_Specimen8L Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(Original_Specimen8L,String)
            End If
            If (Original_Specimen9L Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(Original_Specimen9L,String)
            End If
            If (Original_Specimen10L Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(Original_Specimen10L,String)
            End If
            If (Original_Specimen1H Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(Original_Specimen1H,String)
            End If
            If (Original_Specimen2H Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(Original_Specimen2H,String)
            End If
            If (Original_Specimen3H Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(Original_Specimen3H,String)
            End If
            If (Original_Specimen4H Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(81).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(Original_Specimen4H,String)
            End If
            If (Original_Specimen5H Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(83).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(Original_Specimen5H,String)
            End If
            If (Original_Specimen6H Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(85).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(Original_Specimen6H,String)
            End If
            If (Original_Specimen7H Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(87).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(Original_Specimen7H,String)
            End If
            If (Original_Specimen8H Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(88).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(89).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(88).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(89).Value = CType(Original_Specimen8H,String)
            End If
            If (Original_Specimen9H Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(90).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(91).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(90).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(Original_Specimen9H,String)
            End If
            If (Original_Specimen10H Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(92).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(93).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(92).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(93).Value = CType(Original_Specimen10H,String)
            End If
            If (Original_Mass1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(94).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(95).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(94).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(95).Value = CType(Original_Mass1,String)
            End If
            If (Original_Mass2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(96).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(97).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(96).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(97).Value = CType(Original_Mass2,String)
            End If
            If (Original_Mass3 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(98).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(99).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(98).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(99).Value = CType(Original_Mass3,String)
            End If
            If (Original_Mass4 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(100).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(101).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(100).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(101).Value = CType(Original_Mass4,String)
            End If
            If (Original_Mass5 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(102).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(103).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(102).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(103).Value = CType(Original_Mass5,String)
            End If
            If (Original_Mass6 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(104).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(105).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(104).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(105).Value = CType(Original_Mass6,String)
            End If
            If (Original_Mass7 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(106).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(107).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(106).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(107).Value = CType(Original_Mass7,String)
            End If
            If (Original_Mass8 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(108).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(109).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(108).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(109).Value = CType(Original_Mass8,String)
            End If
            If (Original_Mass9 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(110).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(111).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(110).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(111).Value = CType(Original_Mass9,String)
            End If
            If (Original_Mass10 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(112).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(113).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(112).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(113).Value = CType(Original_Mass10,String)
            End If
            If (Original_AveMass Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(114).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(115).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(114).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(115).Value = CType(Original_AveMass,String)
            End If
            If (Original_SubMergedMass1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(116).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(117).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(116).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(117).Value = CType(Original_SubMergedMass1,String)
            End If
            If (Original_SubMergedMass2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(118).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(119).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(118).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(119).Value = CType(Original_SubMergedMass2,String)
            End If
            If (Original_SubMergedMass3 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(120).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(121).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(120).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(121).Value = CType(Original_SubMergedMass3,String)
            End If
            If (Original_SubMergedMass4 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(122).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(123).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(122).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(123).Value = CType(Original_SubMergedMass4,String)
            End If
            If (Original_SubMergedMass5 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(124).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(125).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(124).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(125).Value = CType(Original_SubMergedMass5,String)
            End If
            If (Original_SubMergedMass6 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(126).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(127).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(126).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(127).Value = CType(Original_SubMergedMass6,String)
            End If
            If (Original_SubMergedMass7 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(128).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(129).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(128).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(129).Value = CType(Original_SubMergedMass7,String)
            End If
            If (Original_SubMergedMass8 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(130).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(131).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(130).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(131).Value = CType(Original_SubMergedMass8,String)
            End If
            If (Original_SubMergedMass9 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(132).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(133).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(132).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(133).Value = CType(Original_SubMergedMass9,String)
            End If
            If (Original_SubMergedMass10 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(134).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(135).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(134).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(135).Value = CType(Original_SubMergedMass10,String)
            End If
            If (Original_Density1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(136).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(137).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(136).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(137).Value = CType(Original_Density1,String)
            End If
            If (Original_Density2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(138).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(139).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(138).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(139).Value = CType(Original_Density2,String)
            End If
            If (Original_Density3 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(140).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(141).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(140).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(141).Value = CType(Original_Density3,String)
            End If
            If (Original_Density4 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(142).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(143).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(142).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(143).Value = CType(Original_Density4,String)
            End If
            If (Original_Density5 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(144).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(145).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(144).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(145).Value = CType(Original_Density5,String)
            End If
            If (Original_Density6 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(146).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(147).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(146).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(147).Value = CType(Original_Density6,String)
            End If
            If (Original_Density7 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(148).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(149).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(148).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(149).Value = CType(Original_Density7,String)
            End If
            If (Original_Density8 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(150).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(151).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(150).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(151).Value = CType(Original_Density8,String)
            End If
            If (Original_Density9 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(152).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(153).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(152).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(153).Value = CType(Original_Density9,String)
            End If
            If (Original_Density10 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(154).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(155).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(154).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(155).Value = CType(Original_Density10,String)
            End If
            If (Original_AveDensity Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(156).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(157).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(156).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(157).Value = CType(Original_AveDensity,String)
            End If
            If (Original_MaxLoad1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(158).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(159).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(158).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(159).Value = CType(Original_MaxLoad1,String)
            End If
            If (Original_MaxLoad2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(160).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(161).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(160).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(161).Value = CType(Original_MaxLoad2,String)
            End If
            If (Original_MaxLoad3 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(162).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(163).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(162).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(163).Value = CType(Original_MaxLoad3,String)
            End If
            If (Original_MaxLoad4 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(164).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(165).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(164).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(165).Value = CType(Original_MaxLoad4,String)
            End If
            If (Original_MaxLoad5 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(166).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(167).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(166).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(167).Value = CType(Original_MaxLoad5,String)
            End If
            If (Original_MaxLoad6 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(168).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(169).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(168).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(169).Value = CType(Original_MaxLoad6,String)
            End If
            If (Original_MaxLoad7 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(170).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(171).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(170).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(171).Value = CType(Original_MaxLoad7,String)
            End If
            If (Original_MaxLoad8 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(172).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(173).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(172).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(173).Value = CType(Original_MaxLoad8,String)
            End If
            If (Original_MaxLoad9 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(174).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(175).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(174).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(175).Value = CType(Original_MaxLoad9,String)
            End If
            If (Original_MaxLoad10 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(176).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(177).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(176).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(177).Value = CType(Original_MaxLoad10,String)
            End If
            If (Original_CompStrength1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(178).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(179).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(178).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(179).Value = CType(Original_CompStrength1,String)
            End If
            If (Original_CompStrength2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(180).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(181).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(180).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(181).Value = CType(Original_CompStrength2,String)
            End If
            If (Original_CompStrength3 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(182).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(183).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(182).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(183).Value = CType(Original_CompStrength3,String)
            End If
            If (Original_CompStrength4 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(184).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(185).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(184).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(185).Value = CType(Original_CompStrength4,String)
            End If
            If (Original_CompStrength5 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(186).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(187).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(186).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(187).Value = CType(Original_CompStrength5,String)
            End If
            If (Original_CompStrength6 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(188).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(189).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(188).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(189).Value = CType(Original_CompStrength6,String)
            End If
            If (Original_CompStrength7 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(190).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(191).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(190).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(191).Value = CType(Original_CompStrength7,String)
            End If
            If (Original_CompStrength8 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(192).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(193).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(192).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(193).Value = CType(Original_CompStrength8,String)
            End If
            If (Original_CompStrength9 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(194).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(195).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(194).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(195).Value = CType(Original_CompStrength9,String)
            End If
            If (Original_CompStrength10 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(196).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(197).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(196).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(197).Value = CType(Original_CompStrength10,String)
            End If
            If (Original_AveStrength Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(198).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(199).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(198).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(199).Value = CType(Original_AveStrength,String)
            End If
            If (Original_FractureType1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(200).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(201).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(200).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(201).Value = CType(Original_FractureType1,String)
            End If
            If (Original_FractureType2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(202).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(203).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(202).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(203).Value = CType(Original_FractureType2,String)
            End If
            If (Original_FractureType3 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(204).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(205).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(204).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(205).Value = CType(Original_FractureType3,String)
            End If
            If (Original_FractureType4 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(206).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(207).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(206).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(207).Value = CType(Original_FractureType4,String)
            End If
            If (Original_FractureType5 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(208).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(209).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(208).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(209).Value = CType(Original_FractureType5,String)
            End If
            If (Original_FractureType6 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(210).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(211).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(210).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(211).Value = CType(Original_FractureType6,String)
            End If
            If (Original_FractureType7 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(212).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(213).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(212).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(213).Value = CType(Original_FractureType7,String)
            End If
            If (Original_FractureType8 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(214).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(215).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(214).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(215).Value = CType(Original_FractureType8,String)
            End If
            If (Original_FractureType9 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(216).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(217).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(216).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(217).Value = CType(Original_FractureType9,String)
            End If
            If (Original_FractureType10 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(218).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(219).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(218).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(219).Value = CType(Original_FractureType10,String)
            End If
            If (Original_SpecimenAge.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(220).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(221).Value = CType(Original_SpecimenAge.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(220).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(221).Value = Global.System.DBNull.Value
            End If
            If (Original_StructuralElement Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(222).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(223).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(222).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(223).Value = CType(Original_StructuralElement,String)
            End If
            If (Original_SpecimenShape Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(224).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(225).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(224).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(225).Value = CType(Original_SpecimenShape,String)
            End If
            If (Original_TestedBy Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(226).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(227).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(226).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(227).Value = CType(Original_TestedBy,String)
            End If
            If (Original_CheckedBy Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(228).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(229).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(228).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(229).Value = CType(Original_CheckedBy,String)
            End If
            If (Original_ApprovedBy Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(230).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(231).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(230).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(231).Value = CType(Original_ApprovedBy,String)
            End If
            If (Original_CheckedDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(232).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(233).Value = CType(Original_CheckedDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(232).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(233).Value = Global.System.DBNull.Value
            End If
            If (Original_ApprovedDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(234).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(235).Value = CType(Original_ApprovedDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(234).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(235).Value = Global.System.DBNull.Value
            End If
            If (Original_Area1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(236).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(237).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(236).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(237).Value = CType(Original_Area1,String)
            End If
            If (Original_Area2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(238).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(239).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(238).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(239).Value = CType(Original_Area2,String)
            End If
            If (Original_Area3 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(240).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(241).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(240).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(241).Value = CType(Original_Area3,String)
            End If
            If (Original_Area4 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(242).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(243).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(242).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(243).Value = CType(Original_Area4,String)
            End If
            If (Original_Area5 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(244).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(245).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(244).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(245).Value = CType(Original_Area5,String)
            End If
            If (Original_Area6 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(246).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(247).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(246).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(247).Value = CType(Original_Area6,String)
            End If
            If (Original_Area7 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(248).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(249).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(248).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(249).Value = CType(Original_Area7,String)
            End If
            If (Original_Area8 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(250).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(251).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(250).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(251).Value = CType(Original_Area8,String)
            End If
            If (Original_Area9 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(252).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(253).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(252).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(253).Value = CType(Original_Area9,String)
            End If
            If (Original_Area10 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(254).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(255).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(254).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(255).Value = CType(Original_Area10,String)
            End If
            If (Original_Compliledby Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(256).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(257).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(256).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(257).Value = CType(Original_Compliledby,String)
            End If
            If (p2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(258).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(259).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(258).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(259).Value = CType(p2,String)
            End If
            If (p5 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(260).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(261).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(260).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(261).Value = CType(p5,String)
            End If
            If (p8 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(262).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(263).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(262).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(263).Value = CType(p8,String)
            End If
            If (p11 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(264).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(265).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(264).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(265).Value = CType(p11,String)
            End If
            If (p14 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(266).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(267).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(266).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(267).Value = CType(p14,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal ProjectID As Integer,  _
                    ByVal BatchIdentificationNo As String,  _
                    ByVal NameOfSampler As String,  _
                    ByVal BatchDate As Global.System.Nullable(Of Date),  _
                    ByVal BatchTime As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Testdate As Global.System.Nullable(Of Date),  _
                    ByVal CuringConditions As String,  _
                    ByVal TestingLaboratory As String,  _
                    ByVal TestCertificate As String,  _
                    ByVal SupplySource As String,  _
                    ByVal ConcreteGrade As String,  _
                    ByVal SpecificationOfConcreteMix As String,  _
                    ByVal NoOfSpecimen As Global.System.Nullable(Of Integer),  _
                    ByVal SpecimenCondition As String,  _
                    ByVal MethodOfCompaction As String,  _
                    ByVal DateDelivered As Global.System.Nullable(Of Date),  _
                    ByVal TestMethod As String,  _
                    ByVal Specimen1D As String,  _
                    ByVal Specimen2D As String,  _
                    ByVal Specimen3D As String,  _
                    ByVal Specimen4D As String,  _
                    ByVal Specimen5D As String,  _
                    ByVal Specimen6D As String,  _
                    ByVal Specimen7D As String,  _
                    ByVal Specimen8D As String,  _
                    ByVal Specimen9D As String,  _
                    ByVal Specimen10D As String,  _
                    ByVal Specimen1L As String,  _
                    ByVal Specimen2L As String,  _
                    ByVal Specimen3L As String,  _
                    ByVal Specimen4L As String,  _
                    ByVal Specimen5L As String,  _
                    ByVal Specimen6L As String,  _
                    ByVal Specimen7L As String,  _
                    ByVal Specimen8L As String,  _
                    ByVal Specimen9L As String,  _
                    ByVal Specimen10L As String,  _
                    ByVal Specimen1H As String,  _
                    ByVal Specimen2H As String,  _
                    ByVal Specimen3H As String,  _
                    ByVal Specimen4H As String,  _
                    ByVal Specimen5H As String,  _
                    ByVal Specimen6H As String,  _
                    ByVal Specimen7H As String,  _
                    ByVal Specimen8H As String,  _
                    ByVal Specimen9H As String,  _
                    ByVal Specimen10H As String,  _
                    ByVal Mass1 As String,  _
                    ByVal Mass2 As String,  _
                    ByVal Mass3 As String,  _
                    ByVal Mass4 As String,  _
                    ByVal Mass5 As String,  _
                    ByVal Mass6 As String,  _
                    ByVal Mass7 As String,  _
                    ByVal Mass8 As String,  _
                    ByVal Mass9 As String,  _
                    ByVal Mass10 As String,  _
                    ByVal AveMass As String,  _
                    ByVal SubMergedMass1 As String,  _
                    ByVal SubMergedMass2 As String,  _
                    ByVal SubMergedMass3 As String,  _
                    ByVal SubMergedMass4 As String,  _
                    ByVal SubMergedMass5 As String,  _
                    ByVal SubMergedMass6 As String,  _
                    ByVal SubMergedMass7 As String,  _
                    ByVal SubMergedMass8 As String,  _
                    ByVal SubMergedMass9 As String,  _
                    ByVal SubMergedMass10 As String,  _
                    ByVal Density1 As String,  _
                    ByVal Density2 As String,  _
                    ByVal Density3 As String,  _
                    ByVal Density4 As String,  _
                    ByVal Density5 As String,  _
                    ByVal Density6 As String,  _
                    ByVal Density7 As String,  _
                    ByVal Density8 As String,  _
                    ByVal Density9 As String,  _
                    ByVal Density10 As String,  _
                    ByVal AveDensity As String,  _
                    ByVal MaxLoad1 As String,  _
                    ByVal MaxLoad2 As String,  _
                    ByVal MaxLoad3 As String,  _
                    ByVal MaxLoad4 As String,  _
                    ByVal MaxLoad5 As String,  _
                    ByVal MaxLoad6 As String,  _
                    ByVal MaxLoad7 As String,  _
                    ByVal MaxLoad8 As String,  _
                    ByVal MaxLoad9 As String,  _
                    ByVal MaxLoad10 As String,  _
                    ByVal CompStrength1 As String,  _
                    ByVal CompStrength2 As String,  _
                    ByVal CompStrength3 As String,  _
                    ByVal CompStrength4 As String,  _
                    ByVal CompStrength5 As String,  _
                    ByVal CompStrength6 As String,  _
                    ByVal CompStrength7 As String,  _
                    ByVal CompStrength8 As String,  _
                    ByVal CompStrength9 As String,  _
                    ByVal CompStrength10 As String,  _
                    ByVal AveStrength As String,  _
                    ByVal FractureType1 As String,  _
                    ByVal FractureType2 As String,  _
                    ByVal FractureType3 As String,  _
                    ByVal FractureType4 As String,  _
                    ByVal FractureType5 As String,  _
                    ByVal FractureType6 As String,  _
                    ByVal FractureType7 As String,  _
                    ByVal FractureType8 As String,  _
                    ByVal FractureType9 As String,  _
                    ByVal FractureType10 As String,  _
                    ByVal StructuralElement As String,  _
                    ByVal SpecimenShape As String,  _
                    ByVal TestedBy As String,  _
                    ByVal CheckedBy As String,  _
                    ByVal ApprovedBy As String,  _
                    ByVal CheckedDate As Global.System.Nullable(Of Date),  _
                    ByVal ApprovedDate As Global.System.Nullable(Of Date),  _
                    ByVal Area1 As String,  _
                    ByVal Area2 As String,  _
                    ByVal Area3 As String,  _
                    ByVal Area4 As String,  _
                    ByVal Area5 As String,  _
                    ByVal Area6 As String,  _
                    ByVal Area7 As String,  _
                    ByVal Area8 As String,  _
                    ByVal Area9 As String,  _
                    ByVal Area10 As String,  _
                    ByVal Compliledby As String,  _
                    ByVal p1 As String,  _
                    ByVal p4 As String,  _
                    ByVal p7 As String,  _
                    ByVal p10 As String,  _
                    ByVal p13 As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ProjectID,Integer)
            If (BatchIdentificationNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(BatchIdentificationNo,String)
            End If
            If (NameOfSampler Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(NameOfSampler,String)
            End If
            If (BatchDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(BatchDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (BatchTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(BatchTime.Value,System.TimeSpan)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Testdate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Testdate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (CuringConditions Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(CuringConditions,String)
            End If
            If (TestingLaboratory Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(TestingLaboratory,String)
            End If
            If (TestCertificate Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(TestCertificate,String)
            End If
            If (SupplySource Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(SupplySource,String)
            End If
            If (ConcreteGrade Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(ConcreteGrade,String)
            End If
            If (SpecificationOfConcreteMix Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(SpecificationOfConcreteMix,String)
            End If
            If (NoOfSpecimen.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(NoOfSpecimen.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (SpecimenCondition Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(SpecimenCondition,String)
            End If
            If (MethodOfCompaction Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(MethodOfCompaction,String)
            End If
            If (DateDelivered.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(DateDelivered.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (TestMethod Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(TestMethod,String)
            End If
            If (Specimen1D Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(Specimen1D,String)
            End If
            If (Specimen2D Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(Specimen2D,String)
            End If
            If (Specimen3D Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(Specimen3D,String)
            End If
            If (Specimen4D Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(Specimen4D,String)
            End If
            If (Specimen5D Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(Specimen5D,String)
            End If
            If (Specimen6D Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(Specimen6D,String)
            End If
            If (Specimen7D Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(Specimen7D,String)
            End If
            If (Specimen8D Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(Specimen8D,String)
            End If
            If (Specimen9D Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(Specimen9D,String)
            End If
            If (Specimen10D Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(Specimen10D,String)
            End If
            If (Specimen1L Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(Specimen1L,String)
            End If
            If (Specimen2L Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(Specimen2L,String)
            End If
            If (Specimen3L Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(Specimen3L,String)
            End If
            If (Specimen4L Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(Specimen4L,String)
            End If
            If (Specimen5L Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(Specimen5L,String)
            End If
            If (Specimen6L Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(Specimen6L,String)
            End If
            If (Specimen7L Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(Specimen7L,String)
            End If
            If (Specimen8L Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(Specimen8L,String)
            End If
            If (Specimen9L Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(Specimen9L,String)
            End If
            If (Specimen10L Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(Specimen10L,String)
            End If
            If (Specimen1H Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(Specimen1H,String)
            End If
            If (Specimen2H Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(Specimen2H,String)
            End If
            If (Specimen3H Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(Specimen3H,String)
            End If
            If (Specimen4H Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(Specimen4H,String)
            End If
            If (Specimen5H Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(Specimen5H,String)
            End If
            If (Specimen6H Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(Specimen6H,String)
            End If
            If (Specimen7H Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(Specimen7H,String)
            End If
            If (Specimen8H Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(Specimen8H,String)
            End If
            If (Specimen9H Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(Specimen9H,String)
            End If
            If (Specimen10H Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(Specimen10H,String)
            End If
            If (Mass1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(Mass1,String)
            End If
            If (Mass2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(Mass2,String)
            End If
            If (Mass3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(Mass3,String)
            End If
            If (Mass4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(Mass4,String)
            End If
            If (Mass5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(Mass5,String)
            End If
            If (Mass6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(Mass6,String)
            End If
            If (Mass7 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(Mass7,String)
            End If
            If (Mass8 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(Mass8,String)
            End If
            If (Mass9 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(Mass9,String)
            End If
            If (Mass10 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(Mass10,String)
            End If
            If (AveMass Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(AveMass,String)
            End If
            If (SubMergedMass1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(SubMergedMass1,String)
            End If
            If (SubMergedMass2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(SubMergedMass2,String)
            End If
            If (SubMergedMass3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(SubMergedMass3,String)
            End If
            If (SubMergedMass4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(61).Value = CType(SubMergedMass4,String)
            End If
            If (SubMergedMass5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(62).Value = CType(SubMergedMass5,String)
            End If
            If (SubMergedMass6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(63).Value = CType(SubMergedMass6,String)
            End If
            If (SubMergedMass7 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(64).Value = CType(SubMergedMass7,String)
            End If
            If (SubMergedMass8 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(65).Value = CType(SubMergedMass8,String)
            End If
            If (SubMergedMass9 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(66).Value = CType(SubMergedMass9,String)
            End If
            If (SubMergedMass10 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(67).Value = CType(SubMergedMass10,String)
            End If
            If (Density1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(68).Value = CType(Density1,String)
            End If
            If (Density2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(69).Value = CType(Density2,String)
            End If
            If (Density3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(70).Value = CType(Density3,String)
            End If
            If (Density4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(71).Value = CType(Density4,String)
            End If
            If (Density5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(72).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(72).Value = CType(Density5,String)
            End If
            If (Density6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(73).Value = CType(Density6,String)
            End If
            If (Density7 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(74).Value = CType(Density7,String)
            End If
            If (Density8 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(75).Value = CType(Density8,String)
            End If
            If (Density9 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(76).Value = CType(Density9,String)
            End If
            If (Density10 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(77).Value = CType(Density10,String)
            End If
            If (AveDensity Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(78).Value = CType(AveDensity,String)
            End If
            If (MaxLoad1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(79).Value = CType(MaxLoad1,String)
            End If
            If (MaxLoad2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(80).Value = CType(MaxLoad2,String)
            End If
            If (MaxLoad3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(81).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(81).Value = CType(MaxLoad3,String)
            End If
            If (MaxLoad4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(82).Value = CType(MaxLoad4,String)
            End If
            If (MaxLoad5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(83).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(83).Value = CType(MaxLoad5,String)
            End If
            If (MaxLoad6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(84).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(84).Value = CType(MaxLoad6,String)
            End If
            If (MaxLoad7 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(85).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(85).Value = CType(MaxLoad7,String)
            End If
            If (MaxLoad8 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(86).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(86).Value = CType(MaxLoad8,String)
            End If
            If (MaxLoad9 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(87).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(87).Value = CType(MaxLoad9,String)
            End If
            If (MaxLoad10 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(88).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(88).Value = CType(MaxLoad10,String)
            End If
            If (CompStrength1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(89).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(89).Value = CType(CompStrength1,String)
            End If
            If (CompStrength2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(90).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(90).Value = CType(CompStrength2,String)
            End If
            If (CompStrength3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(91).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(91).Value = CType(CompStrength3,String)
            End If
            If (CompStrength4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(92).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(92).Value = CType(CompStrength4,String)
            End If
            If (CompStrength5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(93).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(93).Value = CType(CompStrength5,String)
            End If
            If (CompStrength6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(94).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(94).Value = CType(CompStrength6,String)
            End If
            If (CompStrength7 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(95).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(95).Value = CType(CompStrength7,String)
            End If
            If (CompStrength8 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(96).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(96).Value = CType(CompStrength8,String)
            End If
            If (CompStrength9 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(97).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(97).Value = CType(CompStrength9,String)
            End If
            If (CompStrength10 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(98).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(98).Value = CType(CompStrength10,String)
            End If
            If (AveStrength Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(99).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(99).Value = CType(AveStrength,String)
            End If
            If (FractureType1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(100).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(100).Value = CType(FractureType1,String)
            End If
            If (FractureType2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(101).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(101).Value = CType(FractureType2,String)
            End If
            If (FractureType3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(102).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(102).Value = CType(FractureType3,String)
            End If
            If (FractureType4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(103).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(103).Value = CType(FractureType4,String)
            End If
            If (FractureType5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(104).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(104).Value = CType(FractureType5,String)
            End If
            If (FractureType6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(105).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(105).Value = CType(FractureType6,String)
            End If
            If (FractureType7 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(106).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(106).Value = CType(FractureType7,String)
            End If
            If (FractureType8 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(107).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(107).Value = CType(FractureType8,String)
            End If
            If (FractureType9 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(108).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(108).Value = CType(FractureType9,String)
            End If
            If (FractureType10 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(109).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(109).Value = CType(FractureType10,String)
            End If
            If (StructuralElement Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(110).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(110).Value = CType(StructuralElement,String)
            End If
            If (SpecimenShape Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(111).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(111).Value = CType(SpecimenShape,String)
            End If
            If (TestedBy Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(112).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(112).Value = CType(TestedBy,String)
            End If
            If (CheckedBy Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(113).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(113).Value = CType(CheckedBy,String)
            End If
            If (ApprovedBy Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(114).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(114).Value = CType(ApprovedBy,String)
            End If
            If (CheckedDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(115).Value = CType(CheckedDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(115).Value = Global.System.DBNull.Value
            End If
            If (ApprovedDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(116).Value = CType(ApprovedDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(116).Value = Global.System.DBNull.Value
            End If
            If (Area1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(117).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(117).Value = CType(Area1,String)
            End If
            If (Area2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(118).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(118).Value = CType(Area2,String)
            End If
            If (Area3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(119).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(119).Value = CType(Area3,String)
            End If
            If (Area4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(120).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(120).Value = CType(Area4,String)
            End If
            If (Area5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(121).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(121).Value = CType(Area5,String)
            End If
            If (Area6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(122).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(122).Value = CType(Area6,String)
            End If
            If (Area7 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(123).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(123).Value = CType(Area7,String)
            End If
            If (Area8 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(124).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(124).Value = CType(Area8,String)
            End If
            If (Area9 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(125).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(125).Value = CType(Area9,String)
            End If
            If (Area10 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(126).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(126).Value = CType(Area10,String)
            End If
            If (Compliledby Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(127).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(127).Value = CType(Compliledby,String)
            End If
            If (p1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(128).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(128).Value = CType(p1,String)
            End If
            If (p4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(129).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(129).Value = CType(p4,String)
            End If
            If (p7 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(130).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(130).Value = CType(p7,String)
            End If
            If (p10 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(131).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(131).Value = CType(p10,String)
            End If
            If (p13 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(132).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(132).Value = CType(p13,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ProjectID As Integer,  _
                    ByVal BatchIdentificationNo As String,  _
                    ByVal NameOfSampler As String,  _
                    ByVal BatchDate As Global.System.Nullable(Of Date),  _
                    ByVal BatchTime As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Testdate As Global.System.Nullable(Of Date),  _
                    ByVal CuringConditions As String,  _
                    ByVal TestingLaboratory As String,  _
                    ByVal TestCertificate As String,  _
                    ByVal SupplySource As String,  _
                    ByVal ConcreteGrade As String,  _
                    ByVal SpecificationOfConcreteMix As String,  _
                    ByVal NoOfSpecimen As Global.System.Nullable(Of Integer),  _
                    ByVal SpecimenCondition As String,  _
                    ByVal MethodOfCompaction As String,  _
                    ByVal DateDelivered As Global.System.Nullable(Of Date),  _
                    ByVal TestMethod As String,  _
                    ByVal Specimen1D As String,  _
                    ByVal Specimen2D As String,  _
                    ByVal Specimen3D As String,  _
                    ByVal Specimen4D As String,  _
                    ByVal Specimen5D As String,  _
                    ByVal Specimen6D As String,  _
                    ByVal Specimen7D As String,  _
                    ByVal Specimen8D As String,  _
                    ByVal Specimen9D As String,  _
                    ByVal Specimen10D As String,  _
                    ByVal Specimen1L As String,  _
                    ByVal Specimen2L As String,  _
                    ByVal Specimen3L As String,  _
                    ByVal Specimen4L As String,  _
                    ByVal Specimen5L As String,  _
                    ByVal Specimen6L As String,  _
                    ByVal Specimen7L As String,  _
                    ByVal Specimen8L As String,  _
                    ByVal Specimen9L As String,  _
                    ByVal Specimen10L As String,  _
                    ByVal Specimen1H As String,  _
                    ByVal Specimen2H As String,  _
                    ByVal Specimen3H As String,  _
                    ByVal Specimen4H As String,  _
                    ByVal Specimen5H As String,  _
                    ByVal Specimen6H As String,  _
                    ByVal Specimen7H As String,  _
                    ByVal Specimen8H As String,  _
                    ByVal Specimen9H As String,  _
                    ByVal Specimen10H As String,  _
                    ByVal Mass1 As String,  _
                    ByVal Mass2 As String,  _
                    ByVal Mass3 As String,  _
                    ByVal Mass4 As String,  _
                    ByVal Mass5 As String,  _
                    ByVal Mass6 As String,  _
                    ByVal Mass7 As String,  _
                    ByVal Mass8 As String,  _
                    ByVal Mass9 As String,  _
                    ByVal Mass10 As String,  _
                    ByVal AveMass As String,  _
                    ByVal SubMergedMass1 As String,  _
                    ByVal SubMergedMass2 As String,  _
                    ByVal SubMergedMass3 As String,  _
                    ByVal SubMergedMass4 As String,  _
                    ByVal SubMergedMass5 As String,  _
                    ByVal SubMergedMass6 As String,  _
                    ByVal SubMergedMass7 As String,  _
                    ByVal SubMergedMass8 As String,  _
                    ByVal SubMergedMass9 As String,  _
                    ByVal SubMergedMass10 As String,  _
                    ByVal Density1 As String,  _
                    ByVal Density2 As String,  _
                    ByVal Density3 As String,  _
                    ByVal Density4 As String,  _
                    ByVal Density5 As String,  _
                    ByVal Density6 As String,  _
                    ByVal Density7 As String,  _
                    ByVal Density8 As String,  _
                    ByVal Density9 As String,  _
                    ByVal Density10 As String,  _
                    ByVal AveDensity As String,  _
                    ByVal MaxLoad1 As String,  _
                    ByVal MaxLoad2 As String,  _
                    ByVal MaxLoad3 As String,  _
                    ByVal MaxLoad4 As String,  _
                    ByVal MaxLoad5 As String,  _
                    ByVal MaxLoad6 As String,  _
                    ByVal MaxLoad7 As String,  _
                    ByVal MaxLoad8 As String,  _
                    ByVal MaxLoad9 As String,  _
                    ByVal MaxLoad10 As String,  _
                    ByVal CompStrength1 As String,  _
                    ByVal CompStrength2 As String,  _
                    ByVal CompStrength3 As String,  _
                    ByVal CompStrength4 As String,  _
                    ByVal CompStrength5 As String,  _
                    ByVal CompStrength6 As String,  _
                    ByVal CompStrength7 As String,  _
                    ByVal CompStrength8 As String,  _
                    ByVal CompStrength9 As String,  _
                    ByVal CompStrength10 As String,  _
                    ByVal AveStrength As String,  _
                    ByVal FractureType1 As String,  _
                    ByVal FractureType2 As String,  _
                    ByVal FractureType3 As String,  _
                    ByVal FractureType4 As String,  _
                    ByVal FractureType5 As String,  _
                    ByVal FractureType6 As String,  _
                    ByVal FractureType7 As String,  _
                    ByVal FractureType8 As String,  _
                    ByVal FractureType9 As String,  _
                    ByVal FractureType10 As String,  _
                    ByVal StructuralElement As String,  _
                    ByVal SpecimenShape As String,  _
                    ByVal TestedBy As String,  _
                    ByVal CheckedBy As String,  _
                    ByVal ApprovedBy As String,  _
                    ByVal CheckedDate As Global.System.Nullable(Of Date),  _
                    ByVal ApprovedDate As Global.System.Nullable(Of Date),  _
                    ByVal Area1 As String,  _
                    ByVal Area2 As String,  _
                    ByVal Area3 As String,  _
                    ByVal Area4 As String,  _
                    ByVal Area5 As String,  _
                    ByVal Area6 As String,  _
                    ByVal Area7 As String,  _
                    ByVal Area8 As String,  _
                    ByVal Area9 As String,  _
                    ByVal Area10 As String,  _
                    ByVal Compliledby As String,  _
                    ByVal p1 As String,  _
                    ByVal p4 As String,  _
                    ByVal p7 As String,  _
                    ByVal p10 As String,  _
                    ByVal p13 As String,  _
                    ByVal Original_ProjectID As Integer,  _
                    ByVal Original_BatchId As Integer,  _
                    ByVal Original_BatchIdentificationNo As String,  _
                    ByVal Original_NameOfSampler As String,  _
                    ByVal Original_BatchDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_BatchTime As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Original_Testdate As Global.System.Nullable(Of Date),  _
                    ByVal Original_CuringConditions As String,  _
                    ByVal Original_TestingLaboratory As String,  _
                    ByVal Original_TestCertificate As String,  _
                    ByVal Original_SupplySource As String,  _
                    ByVal Original_ConcreteGrade As String,  _
                    ByVal Original_SpecificationOfConcreteMix As String,  _
                    ByVal Original_NoOfSpecimen As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SpecimenCondition As String,  _
                    ByVal Original_MethodOfCompaction As String,  _
                    ByVal Original_DateDelivered As Global.System.Nullable(Of Date),  _
                    ByVal Original_TestMethod As String,  _
                    ByVal Original_Specimen1D As String,  _
                    ByVal Original_Specimen2D As String,  _
                    ByVal Original_Specimen3D As String,  _
                    ByVal Original_Specimen4D As String,  _
                    ByVal Original_Specimen5D As String,  _
                    ByVal Original_Specimen6D As String,  _
                    ByVal Original_Specimen7D As String,  _
                    ByVal Original_Specimen8D As String,  _
                    ByVal Original_Specimen9D As String,  _
                    ByVal Original_Specimen10D As String,  _
                    ByVal Original_Specimen1L As String,  _
                    ByVal Original_Specimen2L As String,  _
                    ByVal Original_Specimen3L As String,  _
                    ByVal Original_Specimen4L As String,  _
                    ByVal Original_Specimen5L As String,  _
                    ByVal Original_Specimen6L As String,  _
                    ByVal Original_Specimen7L As String,  _
                    ByVal Original_Specimen8L As String,  _
                    ByVal Original_Specimen9L As String,  _
                    ByVal Original_Specimen10L As String,  _
                    ByVal Original_Specimen1H As String,  _
                    ByVal Original_Specimen2H As String,  _
                    ByVal Original_Specimen3H As String,  _
                    ByVal Original_Specimen4H As String,  _
                    ByVal Original_Specimen5H As String,  _
                    ByVal Original_Specimen6H As String,  _
                    ByVal Original_Specimen7H As String,  _
                    ByVal Original_Specimen8H As String,  _
                    ByVal Original_Specimen9H As String,  _
                    ByVal Original_Specimen10H As String,  _
                    ByVal Original_Mass1 As String,  _
                    ByVal Original_Mass2 As String,  _
                    ByVal Original_Mass3 As String,  _
                    ByVal Original_Mass4 As String,  _
                    ByVal Original_Mass5 As String,  _
                    ByVal Original_Mass6 As String,  _
                    ByVal Original_Mass7 As String,  _
                    ByVal Original_Mass8 As String,  _
                    ByVal Original_Mass9 As String,  _
                    ByVal Original_Mass10 As String,  _
                    ByVal Original_AveMass As String,  _
                    ByVal Original_SubMergedMass1 As String,  _
                    ByVal Original_SubMergedMass2 As String,  _
                    ByVal Original_SubMergedMass3 As String,  _
                    ByVal Original_SubMergedMass4 As String,  _
                    ByVal Original_SubMergedMass5 As String,  _
                    ByVal Original_SubMergedMass6 As String,  _
                    ByVal Original_SubMergedMass7 As String,  _
                    ByVal Original_SubMergedMass8 As String,  _
                    ByVal Original_SubMergedMass9 As String,  _
                    ByVal Original_SubMergedMass10 As String,  _
                    ByVal Original_Density1 As String,  _
                    ByVal Original_Density2 As String,  _
                    ByVal Original_Density3 As String,  _
                    ByVal Original_Density4 As String,  _
                    ByVal Original_Density5 As String,  _
                    ByVal Original_Density6 As String,  _
                    ByVal Original_Density7 As String,  _
                    ByVal Original_Density8 As String,  _
                    ByVal Original_Density9 As String,  _
                    ByVal Original_Density10 As String,  _
                    ByVal Original_AveDensity As String,  _
                    ByVal Original_MaxLoad1 As String,  _
                    ByVal Original_MaxLoad2 As String,  _
                    ByVal Original_MaxLoad3 As String,  _
                    ByVal Original_MaxLoad4 As String,  _
                    ByVal Original_MaxLoad5 As String,  _
                    ByVal Original_MaxLoad6 As String,  _
                    ByVal Original_MaxLoad7 As String,  _
                    ByVal Original_MaxLoad8 As String,  _
                    ByVal Original_MaxLoad9 As String,  _
                    ByVal Original_MaxLoad10 As String,  _
                    ByVal Original_CompStrength1 As String,  _
                    ByVal Original_CompStrength2 As String,  _
                    ByVal Original_CompStrength3 As String,  _
                    ByVal Original_CompStrength4 As String,  _
                    ByVal Original_CompStrength5 As String,  _
                    ByVal Original_CompStrength6 As String,  _
                    ByVal Original_CompStrength7 As String,  _
                    ByVal Original_CompStrength8 As String,  _
                    ByVal Original_CompStrength9 As String,  _
                    ByVal Original_CompStrength10 As String,  _
                    ByVal Original_AveStrength As String,  _
                    ByVal Original_FractureType1 As String,  _
                    ByVal Original_FractureType2 As String,  _
                    ByVal Original_FractureType3 As String,  _
                    ByVal Original_FractureType4 As String,  _
                    ByVal Original_FractureType5 As String,  _
                    ByVal Original_FractureType6 As String,  _
                    ByVal Original_FractureType7 As String,  _
                    ByVal Original_FractureType8 As String,  _
                    ByVal Original_FractureType9 As String,  _
                    ByVal Original_FractureType10 As String,  _
                    ByVal Original_SpecimenAge As Global.System.Nullable(Of Integer),  _
                    ByVal Original_StructuralElement As String,  _
                    ByVal Original_SpecimenShape As String,  _
                    ByVal Original_TestedBy As String,  _
                    ByVal Original_CheckedBy As String,  _
                    ByVal Original_ApprovedBy As String,  _
                    ByVal Original_CheckedDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_ApprovedDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_Area1 As String,  _
                    ByVal Original_Area2 As String,  _
                    ByVal Original_Area3 As String,  _
                    ByVal Original_Area4 As String,  _
                    ByVal Original_Area5 As String,  _
                    ByVal Original_Area6 As String,  _
                    ByVal Original_Area7 As String,  _
                    ByVal Original_Area8 As String,  _
                    ByVal Original_Area9 As String,  _
                    ByVal Original_Area10 As String,  _
                    ByVal Original_Compliledby As String,  _
                    ByVal p2 As String,  _
                    ByVal p5 As String,  _
                    ByVal p8 As String,  _
                    ByVal p11 As String,  _
                    ByVal p14 As String,  _
                    ByVal BatchId As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ProjectID,Integer)
            If (BatchIdentificationNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(BatchIdentificationNo,String)
            End If
            If (NameOfSampler Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(NameOfSampler,String)
            End If
            If (BatchDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(BatchDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (BatchTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(BatchTime.Value,System.TimeSpan)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Testdate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Testdate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (CuringConditions Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(CuringConditions,String)
            End If
            If (TestingLaboratory Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(TestingLaboratory,String)
            End If
            If (TestCertificate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(TestCertificate,String)
            End If
            If (SupplySource Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(SupplySource,String)
            End If
            If (ConcreteGrade Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(ConcreteGrade,String)
            End If
            If (SpecificationOfConcreteMix Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(SpecificationOfConcreteMix,String)
            End If
            If (NoOfSpecimen.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(NoOfSpecimen.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (SpecimenCondition Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(SpecimenCondition,String)
            End If
            If (MethodOfCompaction Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(MethodOfCompaction,String)
            End If
            If (DateDelivered.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(DateDelivered.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (TestMethod Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(TestMethod,String)
            End If
            If (Specimen1D Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Specimen1D,String)
            End If
            If (Specimen2D Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Specimen2D,String)
            End If
            If (Specimen3D Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Specimen3D,String)
            End If
            If (Specimen4D Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Specimen4D,String)
            End If
            If (Specimen5D Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Specimen5D,String)
            End If
            If (Specimen6D Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Specimen6D,String)
            End If
            If (Specimen7D Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Specimen7D,String)
            End If
            If (Specimen8D Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Specimen8D,String)
            End If
            If (Specimen9D Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Specimen9D,String)
            End If
            If (Specimen10D Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Specimen10D,String)
            End If
            If (Specimen1L Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Specimen1L,String)
            End If
            If (Specimen2L Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Specimen2L,String)
            End If
            If (Specimen3L Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Specimen3L,String)
            End If
            If (Specimen4L Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Specimen4L,String)
            End If
            If (Specimen5L Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Specimen5L,String)
            End If
            If (Specimen6L Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Specimen6L,String)
            End If
            If (Specimen7L Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Specimen7L,String)
            End If
            If (Specimen8L Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Specimen8L,String)
            End If
            If (Specimen9L Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Specimen9L,String)
            End If
            If (Specimen10L Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Specimen10L,String)
            End If
            If (Specimen1H Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Specimen1H,String)
            End If
            If (Specimen2H Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Specimen2H,String)
            End If
            If (Specimen3H Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Specimen3H,String)
            End If
            If (Specimen4H Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Specimen4H,String)
            End If
            If (Specimen5H Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Specimen5H,String)
            End If
            If (Specimen6H Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Specimen6H,String)
            End If
            If (Specimen7H Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Specimen7H,String)
            End If
            If (Specimen8H Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Specimen8H,String)
            End If
            If (Specimen9H Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Specimen9H,String)
            End If
            If (Specimen10H Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Specimen10H,String)
            End If
            If (Mass1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Mass1,String)
            End If
            If (Mass2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Mass2,String)
            End If
            If (Mass3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Mass3,String)
            End If
            If (Mass4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Mass4,String)
            End If
            If (Mass5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Mass5,String)
            End If
            If (Mass6 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Mass6,String)
            End If
            If (Mass7 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Mass7,String)
            End If
            If (Mass8 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Mass8,String)
            End If
            If (Mass9 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Mass9,String)
            End If
            If (Mass10 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Mass10,String)
            End If
            If (AveMass Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(AveMass,String)
            End If
            If (SubMergedMass1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(SubMergedMass1,String)
            End If
            If (SubMergedMass2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(SubMergedMass2,String)
            End If
            If (SubMergedMass3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(SubMergedMass3,String)
            End If
            If (SubMergedMass4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(SubMergedMass4,String)
            End If
            If (SubMergedMass5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(SubMergedMass5,String)
            End If
            If (SubMergedMass6 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(SubMergedMass6,String)
            End If
            If (SubMergedMass7 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(SubMergedMass7,String)
            End If
            If (SubMergedMass8 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(SubMergedMass8,String)
            End If
            If (SubMergedMass9 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(SubMergedMass9,String)
            End If
            If (SubMergedMass10 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(SubMergedMass10,String)
            End If
            If (Density1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(Density1,String)
            End If
            If (Density2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Density2,String)
            End If
            If (Density3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Density3,String)
            End If
            If (Density4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Density4,String)
            End If
            If (Density5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Density5,String)
            End If
            If (Density6 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Density6,String)
            End If
            If (Density7 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Density7,String)
            End If
            If (Density8 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Density8,String)
            End If
            If (Density9 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Density9,String)
            End If
            If (Density10 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Density10,String)
            End If
            If (AveDensity Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(AveDensity,String)
            End If
            If (MaxLoad1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(MaxLoad1,String)
            End If
            If (MaxLoad2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(MaxLoad2,String)
            End If
            If (MaxLoad3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(81).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(MaxLoad3,String)
            End If
            If (MaxLoad4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(MaxLoad4,String)
            End If
            If (MaxLoad5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(83).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(MaxLoad5,String)
            End If
            If (MaxLoad6 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(84).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(MaxLoad6,String)
            End If
            If (MaxLoad7 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(85).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(MaxLoad7,String)
            End If
            If (MaxLoad8 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(86).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(MaxLoad8,String)
            End If
            If (MaxLoad9 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(87).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(MaxLoad9,String)
            End If
            If (MaxLoad10 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(88).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(MaxLoad10,String)
            End If
            If (CompStrength1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(89).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(CompStrength1,String)
            End If
            If (CompStrength2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(90).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(CompStrength2,String)
            End If
            If (CompStrength3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(91).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(CompStrength3,String)
            End If
            If (CompStrength4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(92).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(CompStrength4,String)
            End If
            If (CompStrength5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(93).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(CompStrength5,String)
            End If
            If (CompStrength6 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(94).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(CompStrength6,String)
            End If
            If (CompStrength7 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(95).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(CompStrength7,String)
            End If
            If (CompStrength8 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(96).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(CompStrength8,String)
            End If
            If (CompStrength9 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(97).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(CompStrength9,String)
            End If
            If (CompStrength10 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(98).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(CompStrength10,String)
            End If
            If (AveStrength Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(99).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(AveStrength,String)
            End If
            If (FractureType1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(100).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(FractureType1,String)
            End If
            If (FractureType2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(101).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(FractureType2,String)
            End If
            If (FractureType3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(102).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(FractureType3,String)
            End If
            If (FractureType4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(103).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(FractureType4,String)
            End If
            If (FractureType5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(104).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(FractureType5,String)
            End If
            If (FractureType6 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(105).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(FractureType6,String)
            End If
            If (FractureType7 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(106).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(FractureType7,String)
            End If
            If (FractureType8 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(107).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(FractureType8,String)
            End If
            If (FractureType9 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(108).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(FractureType9,String)
            End If
            If (FractureType10 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(109).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(FractureType10,String)
            End If
            If (StructuralElement Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(110).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(StructuralElement,String)
            End If
            If (SpecimenShape Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(111).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(SpecimenShape,String)
            End If
            If (TestedBy Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(112).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(TestedBy,String)
            End If
            If (CheckedBy Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(113).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(CheckedBy,String)
            End If
            If (ApprovedBy Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(114).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(ApprovedBy,String)
            End If
            If (CheckedDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(CheckedDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(115).Value = Global.System.DBNull.Value
            End If
            If (ApprovedDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(ApprovedDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(116).Value = Global.System.DBNull.Value
            End If
            If (Area1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(117).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(Area1,String)
            End If
            If (Area2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(118).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(Area2,String)
            End If
            If (Area3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(119).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(Area3,String)
            End If
            If (Area4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(120).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(Area4,String)
            End If
            If (Area5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(121).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(Area5,String)
            End If
            If (Area6 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(122).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(Area6,String)
            End If
            If (Area7 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(123).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(Area7,String)
            End If
            If (Area8 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(124).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(Area8,String)
            End If
            If (Area9 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(125).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(Area9,String)
            End If
            If (Area10 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(126).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(Area10,String)
            End If
            If (Compliledby Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(127).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(Compliledby,String)
            End If
            If (p1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(128).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(128).Value = CType(p1,String)
            End If
            If (p4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(129).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(p4,String)
            End If
            If (p7 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(130).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(130).Value = CType(p7,String)
            End If
            If (p10 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(131).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(p10,String)
            End If
            If (p13 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(132).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(132).Value = CType(p13,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(133).Value = CType(Original_ProjectID,Integer)
            Me.Adapter.UpdateCommand.Parameters(134).Value = CType(Original_BatchId,Integer)
            If (Original_BatchIdentificationNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(136).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(136).Value = CType(Original_BatchIdentificationNo,String)
            End If
            If (Original_NameOfSampler Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(138).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(138).Value = CType(Original_NameOfSampler,String)
            End If
            If (Original_BatchDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(140).Value = CType(Original_BatchDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(140).Value = Global.System.DBNull.Value
            End If
            If (Original_BatchTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(142).Value = CType(Original_BatchTime.Value,System.TimeSpan)
            Else
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(142).Value = Global.System.DBNull.Value
            End If
            If (Original_Testdate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(143).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(144).Value = CType(Original_Testdate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(143).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(144).Value = Global.System.DBNull.Value
            End If
            If (Original_CuringConditions Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(145).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(146).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(145).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(146).Value = CType(Original_CuringConditions,String)
            End If
            If (Original_TestingLaboratory Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(147).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(148).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(147).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(148).Value = CType(Original_TestingLaboratory,String)
            End If
            If (Original_TestCertificate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(149).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(150).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(149).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(150).Value = CType(Original_TestCertificate,String)
            End If
            If (Original_SupplySource Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(151).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(152).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(151).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(152).Value = CType(Original_SupplySource,String)
            End If
            If (Original_ConcreteGrade Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(153).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(154).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(153).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(154).Value = CType(Original_ConcreteGrade,String)
            End If
            If (Original_SpecificationOfConcreteMix Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(155).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(156).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(155).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(156).Value = CType(Original_SpecificationOfConcreteMix,String)
            End If
            If (Original_NoOfSpecimen.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(157).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(158).Value = CType(Original_NoOfSpecimen.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(157).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(158).Value = Global.System.DBNull.Value
            End If
            If (Original_SpecimenCondition Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(159).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(160).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(159).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(160).Value = CType(Original_SpecimenCondition,String)
            End If
            If (Original_MethodOfCompaction Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(161).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(162).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(161).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(162).Value = CType(Original_MethodOfCompaction,String)
            End If
            If (Original_DateDelivered.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(163).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(164).Value = CType(Original_DateDelivered.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(163).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(164).Value = Global.System.DBNull.Value
            End If
            If (Original_TestMethod Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(165).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(166).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(165).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(166).Value = CType(Original_TestMethod,String)
            End If
            If (Original_Specimen1D Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(167).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(168).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(167).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(168).Value = CType(Original_Specimen1D,String)
            End If
            If (Original_Specimen2D Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(169).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(170).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(169).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(170).Value = CType(Original_Specimen2D,String)
            End If
            If (Original_Specimen3D Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(171).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(172).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(171).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(172).Value = CType(Original_Specimen3D,String)
            End If
            If (Original_Specimen4D Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(173).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(174).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(173).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(174).Value = CType(Original_Specimen4D,String)
            End If
            If (Original_Specimen5D Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(175).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(176).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(175).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(176).Value = CType(Original_Specimen5D,String)
            End If
            If (Original_Specimen6D Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(177).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(178).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(177).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(178).Value = CType(Original_Specimen6D,String)
            End If
            If (Original_Specimen7D Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(179).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(180).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(179).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(180).Value = CType(Original_Specimen7D,String)
            End If
            If (Original_Specimen8D Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(181).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(182).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(181).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(182).Value = CType(Original_Specimen8D,String)
            End If
            If (Original_Specimen9D Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(183).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(184).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(183).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(184).Value = CType(Original_Specimen9D,String)
            End If
            If (Original_Specimen10D Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(185).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(186).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(185).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(186).Value = CType(Original_Specimen10D,String)
            End If
            If (Original_Specimen1L Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(187).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(188).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(187).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(188).Value = CType(Original_Specimen1L,String)
            End If
            If (Original_Specimen2L Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(189).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(190).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(189).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(190).Value = CType(Original_Specimen2L,String)
            End If
            If (Original_Specimen3L Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(191).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(192).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(191).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(192).Value = CType(Original_Specimen3L,String)
            End If
            If (Original_Specimen4L Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(193).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(194).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(193).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(194).Value = CType(Original_Specimen4L,String)
            End If
            If (Original_Specimen5L Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(195).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(196).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(195).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(196).Value = CType(Original_Specimen5L,String)
            End If
            If (Original_Specimen6L Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(197).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(198).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(197).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(198).Value = CType(Original_Specimen6L,String)
            End If
            If (Original_Specimen7L Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(199).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(200).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(199).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(200).Value = CType(Original_Specimen7L,String)
            End If
            If (Original_Specimen8L Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(201).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(202).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(201).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(202).Value = CType(Original_Specimen8L,String)
            End If
            If (Original_Specimen9L Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(203).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(204).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(203).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(204).Value = CType(Original_Specimen9L,String)
            End If
            If (Original_Specimen10L Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(205).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(206).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(205).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(206).Value = CType(Original_Specimen10L,String)
            End If
            If (Original_Specimen1H Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(207).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(208).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(207).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(208).Value = CType(Original_Specimen1H,String)
            End If
            If (Original_Specimen2H Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(209).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(210).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(209).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(210).Value = CType(Original_Specimen2H,String)
            End If
            If (Original_Specimen3H Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(211).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(212).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(211).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(212).Value = CType(Original_Specimen3H,String)
            End If
            If (Original_Specimen4H Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(213).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(214).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(213).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(214).Value = CType(Original_Specimen4H,String)
            End If
            If (Original_Specimen5H Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(215).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(216).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(215).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(216).Value = CType(Original_Specimen5H,String)
            End If
            If (Original_Specimen6H Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(217).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(218).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(217).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(218).Value = CType(Original_Specimen6H,String)
            End If
            If (Original_Specimen7H Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(219).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(220).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(219).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(220).Value = CType(Original_Specimen7H,String)
            End If
            If (Original_Specimen8H Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(221).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(222).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(221).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(222).Value = CType(Original_Specimen8H,String)
            End If
            If (Original_Specimen9H Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(223).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(224).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(223).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(224).Value = CType(Original_Specimen9H,String)
            End If
            If (Original_Specimen10H Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(225).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(226).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(225).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(226).Value = CType(Original_Specimen10H,String)
            End If
            If (Original_Mass1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(227).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(228).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(227).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(228).Value = CType(Original_Mass1,String)
            End If
            If (Original_Mass2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(229).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(230).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(229).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(230).Value = CType(Original_Mass2,String)
            End If
            If (Original_Mass3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(231).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(232).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(231).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(232).Value = CType(Original_Mass3,String)
            End If
            If (Original_Mass4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(233).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(234).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(233).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(234).Value = CType(Original_Mass4,String)
            End If
            If (Original_Mass5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(235).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(236).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(235).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(236).Value = CType(Original_Mass5,String)
            End If
            If (Original_Mass6 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(237).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(238).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(237).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(238).Value = CType(Original_Mass6,String)
            End If
            If (Original_Mass7 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(239).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(240).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(239).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(240).Value = CType(Original_Mass7,String)
            End If
            If (Original_Mass8 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(241).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(242).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(241).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(242).Value = CType(Original_Mass8,String)
            End If
            If (Original_Mass9 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(243).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(244).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(243).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(244).Value = CType(Original_Mass9,String)
            End If
            If (Original_Mass10 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(245).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(246).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(245).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(246).Value = CType(Original_Mass10,String)
            End If
            If (Original_AveMass Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(247).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(248).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(247).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(248).Value = CType(Original_AveMass,String)
            End If
            If (Original_SubMergedMass1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(249).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(250).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(249).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(250).Value = CType(Original_SubMergedMass1,String)
            End If
            If (Original_SubMergedMass2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(251).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(252).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(251).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(252).Value = CType(Original_SubMergedMass2,String)
            End If
            If (Original_SubMergedMass3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(253).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(254).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(253).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(254).Value = CType(Original_SubMergedMass3,String)
            End If
            If (Original_SubMergedMass4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(255).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(256).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(255).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(256).Value = CType(Original_SubMergedMass4,String)
            End If
            If (Original_SubMergedMass5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(257).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(258).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(257).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(258).Value = CType(Original_SubMergedMass5,String)
            End If
            If (Original_SubMergedMass6 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(259).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(260).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(259).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(260).Value = CType(Original_SubMergedMass6,String)
            End If
            If (Original_SubMergedMass7 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(261).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(262).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(261).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(262).Value = CType(Original_SubMergedMass7,String)
            End If
            If (Original_SubMergedMass8 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(263).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(264).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(263).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(264).Value = CType(Original_SubMergedMass8,String)
            End If
            If (Original_SubMergedMass9 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(265).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(266).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(265).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(266).Value = CType(Original_SubMergedMass9,String)
            End If
            If (Original_SubMergedMass10 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(267).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(268).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(267).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(268).Value = CType(Original_SubMergedMass10,String)
            End If
            If (Original_Density1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(269).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(270).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(269).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(270).Value = CType(Original_Density1,String)
            End If
            If (Original_Density2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(271).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(272).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(271).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(272).Value = CType(Original_Density2,String)
            End If
            If (Original_Density3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(273).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(274).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(273).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(274).Value = CType(Original_Density3,String)
            End If
            If (Original_Density4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(275).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(276).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(275).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(276).Value = CType(Original_Density4,String)
            End If
            If (Original_Density5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(277).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(278).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(277).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(278).Value = CType(Original_Density5,String)
            End If
            If (Original_Density6 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(279).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(280).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(279).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(280).Value = CType(Original_Density6,String)
            End If
            If (Original_Density7 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(281).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(282).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(281).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(282).Value = CType(Original_Density7,String)
            End If
            If (Original_Density8 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(283).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(284).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(283).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(284).Value = CType(Original_Density8,String)
            End If
            If (Original_Density9 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(285).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(286).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(285).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(286).Value = CType(Original_Density9,String)
            End If
            If (Original_Density10 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(287).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(288).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(287).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(288).Value = CType(Original_Density10,String)
            End If
            If (Original_AveDensity Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(289).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(290).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(289).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(290).Value = CType(Original_AveDensity,String)
            End If
            If (Original_MaxLoad1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(291).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(292).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(291).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(292).Value = CType(Original_MaxLoad1,String)
            End If
            If (Original_MaxLoad2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(293).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(294).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(293).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(294).Value = CType(Original_MaxLoad2,String)
            End If
            If (Original_MaxLoad3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(295).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(296).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(295).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(296).Value = CType(Original_MaxLoad3,String)
            End If
            If (Original_MaxLoad4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(297).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(298).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(297).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(298).Value = CType(Original_MaxLoad4,String)
            End If
            If (Original_MaxLoad5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(299).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(300).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(299).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(300).Value = CType(Original_MaxLoad5,String)
            End If
            If (Original_MaxLoad6 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(301).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(302).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(301).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(302).Value = CType(Original_MaxLoad6,String)
            End If
            If (Original_MaxLoad7 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(303).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(304).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(303).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(304).Value = CType(Original_MaxLoad7,String)
            End If
            If (Original_MaxLoad8 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(305).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(306).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(305).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(306).Value = CType(Original_MaxLoad8,String)
            End If
            If (Original_MaxLoad9 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(307).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(308).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(307).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(308).Value = CType(Original_MaxLoad9,String)
            End If
            If (Original_MaxLoad10 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(309).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(310).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(309).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(310).Value = CType(Original_MaxLoad10,String)
            End If
            If (Original_CompStrength1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(311).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(312).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(311).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(312).Value = CType(Original_CompStrength1,String)
            End If
            If (Original_CompStrength2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(313).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(314).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(313).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(314).Value = CType(Original_CompStrength2,String)
            End If
            If (Original_CompStrength3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(315).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(316).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(315).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(316).Value = CType(Original_CompStrength3,String)
            End If
            If (Original_CompStrength4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(317).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(318).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(317).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(318).Value = CType(Original_CompStrength4,String)
            End If
            If (Original_CompStrength5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(319).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(320).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(319).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(320).Value = CType(Original_CompStrength5,String)
            End If
            If (Original_CompStrength6 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(321).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(322).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(321).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(322).Value = CType(Original_CompStrength6,String)
            End If
            If (Original_CompStrength7 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(323).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(324).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(323).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(324).Value = CType(Original_CompStrength7,String)
            End If
            If (Original_CompStrength8 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(325).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(326).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(325).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(326).Value = CType(Original_CompStrength8,String)
            End If
            If (Original_CompStrength9 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(327).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(328).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(327).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(328).Value = CType(Original_CompStrength9,String)
            End If
            If (Original_CompStrength10 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(329).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(330).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(329).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(330).Value = CType(Original_CompStrength10,String)
            End If
            If (Original_AveStrength Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(331).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(332).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(331).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(332).Value = CType(Original_AveStrength,String)
            End If
            If (Original_FractureType1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(333).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(334).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(333).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(334).Value = CType(Original_FractureType1,String)
            End If
            If (Original_FractureType2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(335).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(336).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(335).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(336).Value = CType(Original_FractureType2,String)
            End If
            If (Original_FractureType3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(337).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(338).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(337).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(338).Value = CType(Original_FractureType3,String)
            End If
            If (Original_FractureType4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(339).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(340).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(339).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(340).Value = CType(Original_FractureType4,String)
            End If
            If (Original_FractureType5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(341).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(342).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(341).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(342).Value = CType(Original_FractureType5,String)
            End If
            If (Original_FractureType6 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(343).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(344).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(343).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(344).Value = CType(Original_FractureType6,String)
            End If
            If (Original_FractureType7 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(345).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(346).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(345).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(346).Value = CType(Original_FractureType7,String)
            End If
            If (Original_FractureType8 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(347).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(348).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(347).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(348).Value = CType(Original_FractureType8,String)
            End If
            If (Original_FractureType9 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(349).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(350).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(349).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(350).Value = CType(Original_FractureType9,String)
            End If
            If (Original_FractureType10 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(351).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(352).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(351).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(352).Value = CType(Original_FractureType10,String)
            End If
            If (Original_SpecimenAge.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(353).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(354).Value = CType(Original_SpecimenAge.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(353).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(354).Value = Global.System.DBNull.Value
            End If
            If (Original_StructuralElement Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(355).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(356).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(355).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(356).Value = CType(Original_StructuralElement,String)
            End If
            If (Original_SpecimenShape Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(357).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(358).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(357).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(358).Value = CType(Original_SpecimenShape,String)
            End If
            If (Original_TestedBy Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(359).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(360).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(359).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(360).Value = CType(Original_TestedBy,String)
            End If
            If (Original_CheckedBy Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(361).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(362).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(361).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(362).Value = CType(Original_CheckedBy,String)
            End If
            If (Original_ApprovedBy Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(363).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(364).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(363).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(364).Value = CType(Original_ApprovedBy,String)
            End If
            If (Original_CheckedDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(365).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(366).Value = CType(Original_CheckedDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(365).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(366).Value = Global.System.DBNull.Value
            End If
            If (Original_ApprovedDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(367).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(368).Value = CType(Original_ApprovedDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(367).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(368).Value = Global.System.DBNull.Value
            End If
            If (Original_Area1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(369).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(370).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(369).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(370).Value = CType(Original_Area1,String)
            End If
            If (Original_Area2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(371).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(372).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(371).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(372).Value = CType(Original_Area2,String)
            End If
            If (Original_Area3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(373).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(374).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(373).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(374).Value = CType(Original_Area3,String)
            End If
            If (Original_Area4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(375).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(376).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(375).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(376).Value = CType(Original_Area4,String)
            End If
            If (Original_Area5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(377).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(378).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(377).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(378).Value = CType(Original_Area5,String)
            End If
            If (Original_Area6 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(379).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(380).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(379).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(380).Value = CType(Original_Area6,String)
            End If
            If (Original_Area7 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(381).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(382).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(381).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(382).Value = CType(Original_Area7,String)
            End If
            If (Original_Area8 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(383).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(384).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(383).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(384).Value = CType(Original_Area8,String)
            End If
            If (Original_Area9 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(385).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(386).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(385).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(386).Value = CType(Original_Area9,String)
            End If
            If (Original_Area10 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(387).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(388).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(387).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(388).Value = CType(Original_Area10,String)
            End If
            If (Original_Compliledby Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(389).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(390).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(389).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(390).Value = CType(Original_Compliledby,String)
            End If
            If (p2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(391).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(392).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(391).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(392).Value = CType(p2,String)
            End If
            If (p5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(393).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(394).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(393).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(394).Value = CType(p5,String)
            End If
            If (p8 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(395).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(396).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(395).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(396).Value = CType(p8,String)
            End If
            If (p11 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(397).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(398).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(397).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(398).Value = CType(p11,String)
            End If
            If (p14 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(399).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(400).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(399).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(400).Value = CType(p14,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(401).Value = CType(BatchId,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ProjectID As Integer,  _
                    ByVal BatchIdentificationNo As String,  _
                    ByVal NameOfSampler As String,  _
                    ByVal BatchDate As Global.System.Nullable(Of Date),  _
                    ByVal BatchTime As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Testdate As Global.System.Nullable(Of Date),  _
                    ByVal CuringConditions As String,  _
                    ByVal TestingLaboratory As String,  _
                    ByVal TestCertificate As String,  _
                    ByVal SupplySource As String,  _
                    ByVal ConcreteGrade As String,  _
                    ByVal SpecificationOfConcreteMix As String,  _
                    ByVal NoOfSpecimen As Global.System.Nullable(Of Integer),  _
                    ByVal SpecimenCondition As String,  _
                    ByVal MethodOfCompaction As String,  _
                    ByVal DateDelivered As Global.System.Nullable(Of Date),  _
                    ByVal TestMethod As String,  _
                    ByVal Specimen1D As String,  _
                    ByVal Specimen2D As String,  _
                    ByVal Specimen3D As String,  _
                    ByVal Specimen4D As String,  _
                    ByVal Specimen5D As String,  _
                    ByVal Specimen6D As String,  _
                    ByVal Specimen7D As String,  _
                    ByVal Specimen8D As String,  _
                    ByVal Specimen9D As String,  _
                    ByVal Specimen10D As String,  _
                    ByVal Specimen1L As String,  _
                    ByVal Specimen2L As String,  _
                    ByVal Specimen3L As String,  _
                    ByVal Specimen4L As String,  _
                    ByVal Specimen5L As String,  _
                    ByVal Specimen6L As String,  _
                    ByVal Specimen7L As String,  _
                    ByVal Specimen8L As String,  _
                    ByVal Specimen9L As String,  _
                    ByVal Specimen10L As String,  _
                    ByVal Specimen1H As String,  _
                    ByVal Specimen2H As String,  _
                    ByVal Specimen3H As String,  _
                    ByVal Specimen4H As String,  _
                    ByVal Specimen5H As String,  _
                    ByVal Specimen6H As String,  _
                    ByVal Specimen7H As String,  _
                    ByVal Specimen8H As String,  _
                    ByVal Specimen9H As String,  _
                    ByVal Specimen10H As String,  _
                    ByVal Mass1 As String,  _
                    ByVal Mass2 As String,  _
                    ByVal Mass3 As String,  _
                    ByVal Mass4 As String,  _
                    ByVal Mass5 As String,  _
                    ByVal Mass6 As String,  _
                    ByVal Mass7 As String,  _
                    ByVal Mass8 As String,  _
                    ByVal Mass9 As String,  _
                    ByVal Mass10 As String,  _
                    ByVal AveMass As String,  _
                    ByVal SubMergedMass1 As String,  _
                    ByVal SubMergedMass2 As String,  _
                    ByVal SubMergedMass3 As String,  _
                    ByVal SubMergedMass4 As String,  _
                    ByVal SubMergedMass5 As String,  _
                    ByVal SubMergedMass6 As String,  _
                    ByVal SubMergedMass7 As String,  _
                    ByVal SubMergedMass8 As String,  _
                    ByVal SubMergedMass9 As String,  _
                    ByVal SubMergedMass10 As String,  _
                    ByVal Density1 As String,  _
                    ByVal Density2 As String,  _
                    ByVal Density3 As String,  _
                    ByVal Density4 As String,  _
                    ByVal Density5 As String,  _
                    ByVal Density6 As String,  _
                    ByVal Density7 As String,  _
                    ByVal Density8 As String,  _
                    ByVal Density9 As String,  _
                    ByVal Density10 As String,  _
                    ByVal AveDensity As String,  _
                    ByVal MaxLoad1 As String,  _
                    ByVal MaxLoad2 As String,  _
                    ByVal MaxLoad3 As String,  _
                    ByVal MaxLoad4 As String,  _
                    ByVal MaxLoad5 As String,  _
                    ByVal MaxLoad6 As String,  _
                    ByVal MaxLoad7 As String,  _
                    ByVal MaxLoad8 As String,  _
                    ByVal MaxLoad9 As String,  _
                    ByVal MaxLoad10 As String,  _
                    ByVal CompStrength1 As String,  _
                    ByVal CompStrength2 As String,  _
                    ByVal CompStrength3 As String,  _
                    ByVal CompStrength4 As String,  _
                    ByVal CompStrength5 As String,  _
                    ByVal CompStrength6 As String,  _
                    ByVal CompStrength7 As String,  _
                    ByVal CompStrength8 As String,  _
                    ByVal CompStrength9 As String,  _
                    ByVal CompStrength10 As String,  _
                    ByVal AveStrength As String,  _
                    ByVal FractureType1 As String,  _
                    ByVal FractureType2 As String,  _
                    ByVal FractureType3 As String,  _
                    ByVal FractureType4 As String,  _
                    ByVal FractureType5 As String,  _
                    ByVal FractureType6 As String,  _
                    ByVal FractureType7 As String,  _
                    ByVal FractureType8 As String,  _
                    ByVal FractureType9 As String,  _
                    ByVal FractureType10 As String,  _
                    ByVal StructuralElement As String,  _
                    ByVal SpecimenShape As String,  _
                    ByVal TestedBy As String,  _
                    ByVal CheckedBy As String,  _
                    ByVal ApprovedBy As String,  _
                    ByVal CheckedDate As Global.System.Nullable(Of Date),  _
                    ByVal ApprovedDate As Global.System.Nullable(Of Date),  _
                    ByVal Area1 As String,  _
                    ByVal Area2 As String,  _
                    ByVal Area3 As String,  _
                    ByVal Area4 As String,  _
                    ByVal Area5 As String,  _
                    ByVal Area6 As String,  _
                    ByVal Area7 As String,  _
                    ByVal Area8 As String,  _
                    ByVal Area9 As String,  _
                    ByVal Area10 As String,  _
                    ByVal Compliledby As String,  _
                    ByVal p1 As String,  _
                    ByVal p4 As String,  _
                    ByVal p7 As String,  _
                    ByVal p10 As String,  _
                    ByVal p13 As String,  _
                    ByVal Original_ProjectID As Integer,  _
                    ByVal Original_BatchId As Integer,  _
                    ByVal Original_BatchIdentificationNo As String,  _
                    ByVal Original_NameOfSampler As String,  _
                    ByVal Original_BatchDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_BatchTime As Global.System.Nullable(Of Global.System.TimeSpan),  _
                    ByVal Original_Testdate As Global.System.Nullable(Of Date),  _
                    ByVal Original_CuringConditions As String,  _
                    ByVal Original_TestingLaboratory As String,  _
                    ByVal Original_TestCertificate As String,  _
                    ByVal Original_SupplySource As String,  _
                    ByVal Original_ConcreteGrade As String,  _
                    ByVal Original_SpecificationOfConcreteMix As String,  _
                    ByVal Original_NoOfSpecimen As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SpecimenCondition As String,  _
                    ByVal Original_MethodOfCompaction As String,  _
                    ByVal Original_DateDelivered As Global.System.Nullable(Of Date),  _
                    ByVal Original_TestMethod As String,  _
                    ByVal Original_Specimen1D As String,  _
                    ByVal Original_Specimen2D As String,  _
                    ByVal Original_Specimen3D As String,  _
                    ByVal Original_Specimen4D As String,  _
                    ByVal Original_Specimen5D As String,  _
                    ByVal Original_Specimen6D As String,  _
                    ByVal Original_Specimen7D As String,  _
                    ByVal Original_Specimen8D As String,  _
                    ByVal Original_Specimen9D As String,  _
                    ByVal Original_Specimen10D As String,  _
                    ByVal Original_Specimen1L As String,  _
                    ByVal Original_Specimen2L As String,  _
                    ByVal Original_Specimen3L As String,  _
                    ByVal Original_Specimen4L As String,  _
                    ByVal Original_Specimen5L As String,  _
                    ByVal Original_Specimen6L As String,  _
                    ByVal Original_Specimen7L As String,  _
                    ByVal Original_Specimen8L As String,  _
                    ByVal Original_Specimen9L As String,  _
                    ByVal Original_Specimen10L As String,  _
                    ByVal Original_Specimen1H As String,  _
                    ByVal Original_Specimen2H As String,  _
                    ByVal Original_Specimen3H As String,  _
                    ByVal Original_Specimen4H As String,  _
                    ByVal Original_Specimen5H As String,  _
                    ByVal Original_Specimen6H As String,  _
                    ByVal Original_Specimen7H As String,  _
                    ByVal Original_Specimen8H As String,  _
                    ByVal Original_Specimen9H As String,  _
                    ByVal Original_Specimen10H As String,  _
                    ByVal Original_Mass1 As String,  _
                    ByVal Original_Mass2 As String,  _
                    ByVal Original_Mass3 As String,  _
                    ByVal Original_Mass4 As String,  _
                    ByVal Original_Mass5 As String,  _
                    ByVal Original_Mass6 As String,  _
                    ByVal Original_Mass7 As String,  _
                    ByVal Original_Mass8 As String,  _
                    ByVal Original_Mass9 As String,  _
                    ByVal Original_Mass10 As String,  _
                    ByVal Original_AveMass As String,  _
                    ByVal Original_SubMergedMass1 As String,  _
                    ByVal Original_SubMergedMass2 As String,  _
                    ByVal Original_SubMergedMass3 As String,  _
                    ByVal Original_SubMergedMass4 As String,  _
                    ByVal Original_SubMergedMass5 As String,  _
                    ByVal Original_SubMergedMass6 As String,  _
                    ByVal Original_SubMergedMass7 As String,  _
                    ByVal Original_SubMergedMass8 As String,  _
                    ByVal Original_SubMergedMass9 As String,  _
                    ByVal Original_SubMergedMass10 As String,  _
                    ByVal Original_Density1 As String,  _
                    ByVal Original_Density2 As String,  _
                    ByVal Original_Density3 As String,  _
                    ByVal Original_Density4 As String,  _
                    ByVal Original_Density5 As String,  _
                    ByVal Original_Density6 As String,  _
                    ByVal Original_Density7 As String,  _
                    ByVal Original_Density8 As String,  _
                    ByVal Original_Density9 As String,  _
                    ByVal Original_Density10 As String,  _
                    ByVal Original_AveDensity As String,  _
                    ByVal Original_MaxLoad1 As String,  _
                    ByVal Original_MaxLoad2 As String,  _
                    ByVal Original_MaxLoad3 As String,  _
                    ByVal Original_MaxLoad4 As String,  _
                    ByVal Original_MaxLoad5 As String,  _
                    ByVal Original_MaxLoad6 As String,  _
                    ByVal Original_MaxLoad7 As String,  _
                    ByVal Original_MaxLoad8 As String,  _
                    ByVal Original_MaxLoad9 As String,  _
                    ByVal Original_MaxLoad10 As String,  _
                    ByVal Original_CompStrength1 As String,  _
                    ByVal Original_CompStrength2 As String,  _
                    ByVal Original_CompStrength3 As String,  _
                    ByVal Original_CompStrength4 As String,  _
                    ByVal Original_CompStrength5 As String,  _
                    ByVal Original_CompStrength6 As String,  _
                    ByVal Original_CompStrength7 As String,  _
                    ByVal Original_CompStrength8 As String,  _
                    ByVal Original_CompStrength9 As String,  _
                    ByVal Original_CompStrength10 As String,  _
                    ByVal Original_AveStrength As String,  _
                    ByVal Original_FractureType1 As String,  _
                    ByVal Original_FractureType2 As String,  _
                    ByVal Original_FractureType3 As String,  _
                    ByVal Original_FractureType4 As String,  _
                    ByVal Original_FractureType5 As String,  _
                    ByVal Original_FractureType6 As String,  _
                    ByVal Original_FractureType7 As String,  _
                    ByVal Original_FractureType8 As String,  _
                    ByVal Original_FractureType9 As String,  _
                    ByVal Original_FractureType10 As String,  _
                    ByVal Original_SpecimenAge As Global.System.Nullable(Of Integer),  _
                    ByVal Original_StructuralElement As String,  _
                    ByVal Original_SpecimenShape As String,  _
                    ByVal Original_TestedBy As String,  _
                    ByVal Original_CheckedBy As String,  _
                    ByVal Original_ApprovedBy As String,  _
                    ByVal Original_CheckedDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_ApprovedDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_Area1 As String,  _
                    ByVal Original_Area2 As String,  _
                    ByVal Original_Area3 As String,  _
                    ByVal Original_Area4 As String,  _
                    ByVal Original_Area5 As String,  _
                    ByVal Original_Area6 As String,  _
                    ByVal Original_Area7 As String,  _
                    ByVal Original_Area8 As String,  _
                    ByVal Original_Area9 As String,  _
                    ByVal Original_Area10 As String,  _
                    ByVal Original_Compliledby As String,  _
                    ByVal p2 As String,  _
                    ByVal p5 As String,  _
                    ByVal p8 As String,  _
                    ByVal p11 As String,  _
                    ByVal p14 As String) As Integer
            Return Me.Update(ProjectID, BatchIdentificationNo, NameOfSampler, BatchDate, BatchTime, Testdate, CuringConditions, TestingLaboratory, TestCertificate, SupplySource, ConcreteGrade, SpecificationOfConcreteMix, NoOfSpecimen, SpecimenCondition, MethodOfCompaction, DateDelivered, TestMethod, Specimen1D, Specimen2D, Specimen3D, Specimen4D, Specimen5D, Specimen6D, Specimen7D, Specimen8D, Specimen9D, Specimen10D, Specimen1L, Specimen2L, Specimen3L, Specimen4L, Specimen5L, Specimen6L, Specimen7L, Specimen8L, Specimen9L, Specimen10L, Specimen1H, Specimen2H, Specimen3H, Specimen4H, Specimen5H, Specimen6H, Specimen7H, Specimen8H, Specimen9H, Specimen10H, Mass1, Mass2, Mass3, Mass4, Mass5, Mass6, Mass7, Mass8, Mass9, Mass10, AveMass, SubMergedMass1, SubMergedMass2, SubMergedMass3, SubMergedMass4, SubMergedMass5, SubMergedMass6, SubMergedMass7, SubMergedMass8, SubMergedMass9, SubMergedMass10, Density1, Density2, Density3, Density4, Density5, Density6, Density7, Density8, Density9, Density10, AveDensity, MaxLoad1, MaxLoad2, MaxLoad3, MaxLoad4, MaxLoad5, MaxLoad6, MaxLoad7, MaxLoad8, MaxLoad9, MaxLoad10, CompStrength1, CompStrength2, CompStrength3, CompStrength4, CompStrength5, CompStrength6, CompStrength7, CompStrength8, CompStrength9, CompStrength10, AveStrength, FractureType1, FractureType2, FractureType3, FractureType4, FractureType5, FractureType6, FractureType7, FractureType8, FractureType9, FractureType10, StructuralElement, SpecimenShape, TestedBy, CheckedBy, ApprovedBy, CheckedDate, ApprovedDate, Area1, Area2, Area3, Area4, Area5, Area6, Area7, Area8, Area9, Area10, Compliledby, p1, p4, p7, p10, p13, Original_ProjectID, Original_BatchId, Original_BatchIdentificationNo, Original_NameOfSampler, Original_BatchDate, Original_BatchTime, Original_Testdate, Original_CuringConditions, Original_TestingLaboratory, Original_TestCertificate, Original_SupplySource, Original_ConcreteGrade, Original_SpecificationOfConcreteMix, Original_NoOfSpecimen, Original_SpecimenCondition, Original_MethodOfCompaction, Original_DateDelivered, Original_TestMethod, Original_Specimen1D, Original_Specimen2D, Original_Specimen3D, Original_Specimen4D, Original_Specimen5D, Original_Specimen6D, Original_Specimen7D, Original_Specimen8D, Original_Specimen9D, Original_Specimen10D, Original_Specimen1L, Original_Specimen2L, Original_Specimen3L, Original_Specimen4L, Original_Specimen5L, Original_Specimen6L, Original_Specimen7L, Original_Specimen8L, Original_Specimen9L, Original_Specimen10L, Original_Specimen1H, Original_Specimen2H, Original_Specimen3H, Original_Specimen4H, Original_Specimen5H, Original_Specimen6H, Original_Specimen7H, Original_Specimen8H, Original_Specimen9H, Original_Specimen10H, Original_Mass1, Original_Mass2, Original_Mass3, Original_Mass4, Original_Mass5, Original_Mass6, Original_Mass7, Original_Mass8, Original_Mass9, Original_Mass10, Original_AveMass, Original_SubMergedMass1, Original_SubMergedMass2, Original_SubMergedMass3, Original_SubMergedMass4, Original_SubMergedMass5, Original_SubMergedMass6, Original_SubMergedMass7, Original_SubMergedMass8, Original_SubMergedMass9, Original_SubMergedMass10, Original_Density1, Original_Density2, Original_Density3, Original_Density4, Original_Density5, Original_Density6, Original_Density7, Original_Density8, Original_Density9, Original_Density10, Original_AveDensity, Original_MaxLoad1, Original_MaxLoad2, Original_MaxLoad3, Original_MaxLoad4, Original_MaxLoad5, Original_MaxLoad6, Original_MaxLoad7, Original_MaxLoad8, Original_MaxLoad9, Original_MaxLoad10, Original_CompStrength1, Original_CompStrength2, Original_CompStrength3, Original_CompStrength4, Original_CompStrength5, Original_CompStrength6, Original_CompStrength7, Original_CompStrength8, Original_CompStrength9, Original_CompStrength10, Original_AveStrength, Original_FractureType1, Original_FractureType2, Original_FractureType3, Original_FractureType4, Original_FractureType5, Original_FractureType6, Original_FractureType7, Original_FractureType8, Original_FractureType9, Original_FractureType10, Original_SpecimenAge, Original_StructuralElement, Original_SpecimenShape, Original_TestedBy, Original_CheckedBy, Original_ApprovedBy, Original_CheckedDate, Original_ApprovedDate, Original_Area1, Original_Area2, Original_Area3, Original_Area4, Original_Area5, Original_Area6, Original_Area7, Original_Area8, Original_Area9, Original_Area10, Original_Compliledby, p2, p5, p8, p11, p14, Original_BatchId)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function BatchQuery(ByVal Bid As Integer, ByVal Pid As Integer) As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            command.Parameters(0).Value = CType(Bid,Integer)
            command.Parameters(1).Value = CType(Pid,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)()
            Else
                Return New Global.System.Nullable(Of Integer)(CType(returnValue,Integer))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function CheckQuery(ByVal Pid As Integer) As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            command.Parameters(0).Value = CType(Pid,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)()
            Else
                Return New Global.System.Nullable(Of Integer)(CType(returnValue,Integer))
            End If
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _projectsTableTableAdapter As ProjectsTableTableAdapter
        
        Private _userstableTableAdapter As UserstableTableAdapter
        
        Private _batchTableTableAdapter As BatchTableTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property ProjectsTableTableAdapter() As ProjectsTableTableAdapter
            Get
                Return Me._projectsTableTableAdapter
            End Get
            Set
                Me._projectsTableTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property UserstableTableAdapter() As UserstableTableAdapter
            Get
                Return Me._userstableTableAdapter
            End Get
            Set
                Me._userstableTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property BatchTableTableAdapter() As BatchTableTableAdapter
            Get
                Return Me._batchTableTableAdapter
            End Get
            Set
                Me._batchTableTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._projectsTableTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._projectsTableTableAdapter.Connection) Is Nothing)) Then
                    Return Me._projectsTableTableAdapter.Connection
                End If
                If ((Not (Me._userstableTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._userstableTableAdapter.Connection) Is Nothing)) Then
                    Return Me._userstableTableAdapter.Connection
                End If
                If ((Not (Me._batchTableTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._batchTableTableAdapter.Connection) Is Nothing)) Then
                    Return Me._batchTableTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._projectsTableTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._userstableTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._batchTableTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As TerraConcDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._projectsTableTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.ProjectsTable.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._projectsTableTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._userstableTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Userstable.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._userstableTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._batchTableTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.BatchTable.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._batchTableTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As TerraConcDataSet, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._projectsTableTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.ProjectsTable.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._projectsTableTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._userstableTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Userstable.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._userstableTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._batchTableTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.BatchTable.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._batchTableTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As TerraConcDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._batchTableTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.BatchTable.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._batchTableTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._userstableTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Userstable.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._userstableTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._projectsTableTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.ProjectsTable.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._projectsTableTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As TerraConcDataSet) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._projectsTableTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._projectsTableTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._userstableTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._userstableTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._batchTableTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._batchTableTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._projectsTableTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._projectsTableTableAdapter, Me._projectsTableTableAdapter.Connection)
                    Me._projectsTableTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._projectsTableTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._projectsTableTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._projectsTableTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._projectsTableTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._userstableTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._userstableTableAdapter, Me._userstableTableAdapter.Connection)
                    Me._userstableTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._userstableTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._userstableTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._userstableTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._userstableTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._batchTableTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._batchTableTableAdapter, Me._batchTableTableAdapter.Connection)
                    Me._batchTableTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._batchTableTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._batchTableTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._batchTableTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._batchTableTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._projectsTableTableAdapter) Is Nothing) Then
                    Me._projectsTableTableAdapter.Connection = CType(revertConnections(Me._projectsTableTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._projectsTableTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._userstableTableAdapter) Is Nothing) Then
                    Me._userstableTableAdapter.Connection = CType(revertConnections(Me._userstableTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._userstableTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._batchTableTableAdapter) Is Nothing) Then
                    Me._batchTableTableAdapter.Connection = CType(revertConnections(Me._batchTableTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._batchTableTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
